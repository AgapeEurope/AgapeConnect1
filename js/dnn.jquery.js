(function (a) { a.fn.dnnTabs = function (c) { var d = a.extend({}, a.fn.dnnTabs.defaultOptions, c), b = this; a.ui.tabs.prototype._sanitizeSelector = function (e) { return e.replace(/:/g, "\\:").replace(/\./g, "\\.") }; b.each(function () { var f = null, e; if (this.id) { e = "dnnTabs-" + this.id; if (d.selected === -1) { var g = dnn.dom.getCookie(e); if (g) { d.selected = g } if (d.selected === -1) { d.selected = 0 } } } f = (function (h) { return function (i, j) { dnn.dom.setCookie(h, j.index, d.cookieDays, "/", "", false, d.cookieMilleseconds) } })(e); b.tabs({ show: f, selected: d.selected, disabled: d.disabled, fx: { opacity: d.opacity, duration: d.duration} }); if (typeof Page_ClientValidate != "undefined" && a.isFunction(Page_ClientValidate)) { b.find(d.validationTriggerSelector).click(function (j) { if (!Page_ClientValidate(d.validationGroup)) { var k = b.find(d.invalidItemSelector).eq(0); var i = k.closest(".ui-tabs-panel"); if (i.length > 0) { var h = i.attr("id"); i.parent().find("a[href='#" + h + "']").click() } } }) } }); return b }; a.fn.dnnTabs.defaultOptions = { opacity: "toggle", duration: "fast", validationTriggerSelector: ".dnnPrimaryAction", validationGroup: "", invalidItemSelector: '.dnnFormError[style*="inline"]', regionToToggleSelector: "fieldset", selected: -1, cookieDays: 0, cookieMilleseconds: 120000} })(jQuery); (function (a) { a.fn.dnnConfirm = function (c) { var d = a.extend({}, a.fn.dnnConfirm.defaultOptions, c), b = this; b.each(function () { var g = a(this), f = g.attr("href"), e; if (f || d.isButton) { e = a("<div class='dnnDialog'></div>").html(d.text).dialog(d); g.click(function (h) { if (e.is(":visible")) { e.dialog("close"); return true } h.preventDefault(); e.dialog({ open: function (i) { a(".ui-dialog-buttonpane").find('button:contains("' + d.noText + '")').addClass("dnnConfirmCancel") }, buttons: [{ text: d.yesText, click: function () { if (a.isFunction(d.callbackTrue)) { d.callbackTrue.call(this) } else { if (d.isButton) { g.click() } else { e.dialog("close"); window.location.href = f } } } }, { text: d.noText, click: function () { a(this).dialog("close"); if (a.isFunction(d.callbackFalse)) { d.callbackFalse.call(this) } } }] }); e.dialog("open") }) } }); return b }; a.fn.dnnConfirm.defaultOptions = { text: "Are you sure?", yesText: "Yes", noText: "No", actionUrl: window.location.href, autoOpen: false, resizable: false, modal: true, title: "Confirm", dialogClass: "dnnFormPopup dnnClear", isButton: false} })(jQuery); (function (a) { a.dnnAlert = function (c) { var d = a.extend({}, a.dnnAlert.defaultOptions, c), b = a("<div class='dnnDialog'></div>").html(d.text).dialog(d); b.dialog({ buttons: [{ text: d.okText, click: function () { a(this).dialog("close"); if (a.isFunction(d.callback)) { d.callback.call(this) } return false } }] }); b.dialog("open") }; a.dnnAlert.defaultOptions = { okText: "Ok", autoOpen: false, resizable: false, modal: true, dialogClass: "dnnFormPopup dnnClear"} })(jQuery); (function (a) { a.fn.dnnPanels = function (c) { var d = a.extend({}, a.fn.dnnPanels.defaultOptions, c), b = this; b.each(function () { var g = a(this); g.find(d.clickToToggleSelector).click(function (i) { i.preventDefault(); var h = a(this).toggleClass(d.toggleClass).parent().next(d.regionToToggleSelector).slideToggle(function () { var j = a(h.context.parentNode).attr("id"); dnn.dom.setCookie(j, a(this).is(":visible"), d.cookieDays, "/", "", false, d.cookieMilleseconds) }) }); function f(i, h) { i.removeClass(d.toggleClass); h.hide() } function e(i, h) { i.addClass(d.toggleClass); h.show() } g.find(d.sectionHeadSelector).each(function (i, k) { var n = a(k), l = n.attr("id"), h = dnn.dom.getCookie(l), m = n.find(d.clickToToggleIsolatedSelector), j = n.next(d.regionToToggleSelector), o = n.parents(d.panelSeparatorSelector), p = o.find(d.sectionHeadSelector).index(n); if (h == "false") { f(m, j) } else { if (h == "true" || i === 0) { e(m, j) } else { if (o.size() > 0 && p === 0) { e(m, j) } else { f(m, j) } } } }); g.find(d.validationTriggerSelector).click(function (h) { if (typeof Page_ClientValidate != "undefined" && a.isFunction(Page_ClientValidate)) { if (!Page_ClientValidate(d.validationGroup)) { g.find(d.invalidItemSelector).each(function () { var i = a(this).closest(d.regionToToggleSelector); if (i.is(":hidden")) { i.prev(d.sectionHeadSelector).find(d.clickToToggleIsolatedSelector).click() } }) } } }) }); return b }; a.fn.dnnPanels.defaultOptions = { clickToToggleSelector: "h2.dnnFormSectionHead a", sectionHeadSelector: ".dnnFormSectionHead", regionToToggleSelector: "fieldset", toggleClass: "dnnSectionExpanded", clickToToggleIsolatedSelector: "a", validationTriggerSelector: ".dnnPrimaryAction", invalidItemSelector: '.dnnFormError[style*="inline"]', validationGroup: "", panelSeparatorSelector: ".ui-tabs-panel", cookieDays: 0, cookieMilleseconds: 120000} })(jQuery); (function (a) { a.fn.dnnPreview = function (c) { var d = a.extend({}, a.fn.dnnPreview.defaultOptions, c), b = this; b.each(function () { var e = a(this); e.find(d.linkSelector).click(function (h) { h.preventDefault(); var i = "?"; var g = e.find(d.skinSelector).val(); var f = e.find(d.containerSelector).val(); if (g) { i += "SkinSrc=" + g } if (f) { if (g) { i += "&" } i += "ContainerSrc=" + f } if (i != "?") { window.open(encodeURI(d.baseUrl + i.replace(/.ascx/gi, "")), "skinpreview") } else { a.dnnAlert({ text: d.noSelectionMessage, okText: d.alertOkText, closeText: d.alertCloseText }) } }) }); return b }; a.fn.dnnPreview.defaultOptions = { baseUrl: window.location.protocol + "//" + window.location.host + window.location.pathname, linkSelector: "a.dnnSecondaryAction", skinSelector: "", containerSelector: "", noSelectionMessage: "Please select a preview option.", alertOkText: "Ok", alertCloseText: "close"} })(jQuery); (function (a) { a.fn.dnnExpandAll = function (c) { var d = a.extend({}, a.fn.dnnExpandAll.defaultOptions, c), b = this; if ((a(d.targetArea).find(d.targetSelector + ":visible").length === a(d.targetArea).find(d.targetSelector + d.targetExpandedSelector + ":visible").length) && !a(this).hasClass("expanded")) { a(this).addClass("expanded").text(d.collapseText) } b.click(function (g) { g.preventDefault(); var f = a(this); if (f.hasClass("expanded")) { f.removeClass("expanded").text(d.expandText); a(d.targetArea).find(d.targetSelector + d.targetExpandedSelector + ":visible").click() } else { f.addClass("expanded").text(d.collapseText); a(d.targetArea).find(d.targetSelector + ":visible").not(d.targetExpandedSelector).click() } }); return b }; a.fn.dnnExpandAll.defaultOptions = { expandText: "Expand All", collapseText: "Collapse All", targetArea: "#dnnHostSettings", targetSelector: "h2.dnnFormSectionHead a", targetExpandedSelector: ".dnnSectionExpanded"} })(jQuery); (function (a) { a.fn.dnnTooltip = function (c) { var d = a.extend({}, a.fn.dnnTooltip.defaultOptions, c), b = this; b.each(function () { var e = a(this); e.click(function (f) { f.preventDefault() }); b.data("left", b.position().left).data("top", b.position().top); e.hoverIntent({ over: function () { e.find(d.helpSelector).show() }, out: function () { if (!e.hasClass(d.pinnedClass)) { e.find(d.helpSelector).hide() } }, timeout: 200, interval: 200 }); e.find(d.pinSelector).click(function (f) { f.preventDefault(); if (e.hasClass(d.pinnedClass)) { e.find(d.helpSelector).animate({ left: b.data("left"), top: b.data("top") }, "fast", function () { e.removeClass(d.pinnedClass); a(this).hide().draggable("destroy") }) } else { e.addClass(d.pinnedClass); if (a.isFunction(a().draggable)) { e.find(d.helpSelector).draggable() } } }) }); return b }; a.fn.dnnTooltip.defaultOptions = { pinSelector: "a.pinHelp", helpSelector: ".dnnFormHelpContent", pinnedClass: "dnnTooltipPinned"} })(jQuery);