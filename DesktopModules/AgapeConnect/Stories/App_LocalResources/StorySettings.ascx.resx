<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AspectMode0.Text" xml:space="preserve">
    <value>The image will be zoomed in and centered, so that the image fills the image placeholder.</value>
  </data>
  <data name="AspectMode1.Text" xml:space="preserve">
    <value>The image will be zoomed out and centered, so that the entire image fits within the image placeholder. Any margins will be displayed in the background color.</value>
  </data>
  <data name="AspectMode2.Text" xml:space="preserve">
    <value>The image will be streched so that it fits the image placeholder. This will distort the image.</value>
  </data>
  <data name="AspectMode3.Text" xml:space="preserve">
    <value>The height of the image placeholder will be changed to fit the image. This may change the height of the module or the layout of the stories.</value>
  </data>
  <data name="AspectMode4.Text" xml:space="preserve">
    <value>The width of the image placeholder will be changed to fit the image. This may change the width of the module or the layout of the stories.</value>
  </data>
  <data name="lblAdvancedSettings.Help" xml:space="preserve">
    <value>Advanced parameters passed to the StoriesView control. This are usually in the format: &lt;br /&gt; value1: 'apples', value2: 'banana', value3: 123</value>
  </data>
  <data name="lblAdvancedSettings.Text" xml:space="preserve">
    <value>Advanced Settings</value>
  </data>
  <data name="lblAspect.Help" xml:space="preserve">
    <value>The site looks alot better when all of the main photos have a consistent aspect ratio (ie they are the same shape). Whenever someone uploads a story, they are asked to crop their photos using a tool that constrains their photos to a predefined aspect. You can specify that aspect here. For square, enter 1. If you want the image wider than it is high, enter a number greater than 1 (eg 1.3). If you want the image taller than it is wide, enter a number less than 1 (eg 0.8).</value>
  </data>
  <data name="lblAspect.Text" xml:space="preserve">
    <value>PhotoAspect</value>
  </data>
  <data name="lblAspectMode.Help" xml:space="preserve">
    <value>Stories created on this site should be cropped to the corrected aspect. However if the story image differs from the shape of this module, select how you would like the image to displayed. </value>
  </data>
  <data name="lblAspectMode.Text" xml:space="preserve">
    <value>Aspect Mode</value>
  </data>
  <data name="lblBoostLength.Help" xml:space="preserve">
    <value>The length of time (in days) that a story is boosted for, when an Administrator/Editor marks a story as boosted. This setting applied to all channels on this site.</value>
  </data>
  <data name="lblBoostLength.Text" xml:space="preserve">
    <value>Boost Duration</value>
  </data>
  <data name="lblChannelImage.Help" xml:space="preserve">
    <value>Select the image for this channel. This is used on the RSS Feed, and replaces the story image, if none is available.</value>
  </data>
  <data name="lblChannelImage.Text" xml:space="preserve">
    <value>Channel Image</value>
  </data>
  <data name="lblDisplayType.Help" xml:space="preserve">
    <value>Select how you would like the stories to be displayed.</value>
  </data>
  <data name="lblDisplayType.Text" xml:space="preserve">
    <value>Display Type</value>
  </data>
  <data name="lblLocation.Help" xml:space="preserve">
    <value>Select a location for this feed - by typing a Country/City/Location name and click search.</value>
  </data>
  <data name="lblLocation.Text" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="lblMode.Help" xml:space="preserve">
    <value>"Direct Publish": New stories are published immdiately.&lt;br /&gt; "Content Staging": New Stories are initially marked as draft. They will not be seen by the Public until they are published&lt;br /&gt;*Note: This setting applied to all story modules on this site.</value>
  </data>
  <data name="lblMode.Text" xml:space="preserve">
    <value>Publish Mode</value>
  </data>
  <data name="lblPhotoSize.Help" xml:space="preserve">
    <value>Specify a Width (in pixels) for the images in this module. (The height will be determinted by the aspect).</value>
  </data>
  <data name="lblPhotoSize.Text" xml:space="preserve">
    <value>Photo Width</value>
  </data>
  <data name="lblRssName.Help" xml:space="preserve">
    <value>Each feed (on this site) needs a unique name. Please specify a unique name for this feed (even if you are not intending to use the RSS feed).</value>
  </data>
  <data name="lblRssName.Text" xml:space="preserve">
    <value>RSS Name</value>
  </data>
  <data name="lblShow.Help" xml:space="preserve">
    <value>Select the items you would like to display in the StoryList.</value>
  </data>
  <data name="lblShow.Text" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="lblSpeed.Help" xml:space="preserve">
    <value>Drag the sliders to set the number of seconds each item is displayed , before transitioning to the next item.</value>
  </data>
  <data name="lblSpeed.Text" xml:space="preserve">
    <value>Speed</value>
  </data>
  <data name="lblStoriesPage.Help" xml:space="preserve">
    <value>Select the tab, where the stories from thi module will be displayed.</value>
  </data>
  <data name="lblStoriesPage.Text" xml:space="preserve">
    <value>View Story Page (Optional)</value>
  </data>
  <data name="lblTags.Help" xml:space="preserve">
    <value>These story tags are available for all Story Modules on this Portal. Please note: if you delete a tag, this tag is removed from all stories. This cannot be undone. BE CAREFULL!</value>
  </data>
  <data name="lblTags.Text" xml:space="preserve">
    <value>Tags</value>
  </data>
</root>