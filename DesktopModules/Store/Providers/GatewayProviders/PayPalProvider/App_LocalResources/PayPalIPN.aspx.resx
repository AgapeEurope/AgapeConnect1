<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System" name="System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="$this.DefaultModifiers" type="System.CodeDom.MemberAttributes, System">
    <value>Private</value>
  </data>
  <assembly alias="mscorlib" name="mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="$this.TrayAutoArrange" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
  <data name="AlertReason.Text" xml:space="preserve">
    <value>Reason</value>
  </data>
  <data name="DifferentReceiverEmail.Text" xml:space="preserve">
    <value>Possible fraud, the receiver email is different than the PayPal account ID.</value>
  </data>
  <data name="FromIP.Text" xml:space="preserve">
    <value>From IP</value>
  </data>
  <data name="IPNPOSTString.Text" xml:space="preserve">
    <value>IPN POST String</value>
  </data>
  <data name="SecurityAlert.Text" xml:space="preserve">
    <value>SECURITY ALERT!</value>
  </data>
  <data name="StorePayPalGateway.Text" xml:space="preserve">
    <value>Store - PayPal Gateway</value>
  </data>
  <data name="VerificationFailed.Text" xml:space="preserve">
    <value>Possible fraud, PayPal verification result is: INVALID.</value>
  </data>
  <data name="WrongOrderInfos.Text" xml:space="preserve">
    <value>Possible fraud, order not found or order infos are incorrect.</value>
  </data>
  <data name="EmailAlert.Text" xml:space="preserve">
    <value>An Instant Payment Notification (IPN) has been received from PayPal containing wrong information. This could be a possible fraud. Please consult your site log for details.</value>
  </data>
  <data name="InvalidIPN.Text" xml:space="preserve">
    <value>Possible fraud, the IPN transaction is invalid. Some fields required are not present or the status is unattended.</value>
  </data>
  <data name="EmailIPN.Text" xml:space="preserve">
    <value>An Instant Payment Notification (IPN) has been received from PayPal that could require action on your part.

Order ID: {0}
Transaction ID: {1}
Payment Type: {2}
Payment Status: {3}
Reason: {4}

Please access to your PayPal account for details. In some cases, you will need to manually set the status of the order.</value>
  </data>
  <data name="IPNAlert.Text" xml:space="preserve">
    <value> - IPN ALERT!</value>
  </data>
  <data name="IPNInfo.Text" xml:space="preserve">
    <value> - IPN Information</value>
  </data>
  <data name="PaymentStatus_Canceled_Reversal.Text" xml:space="preserve">
    <value>A reversal has been canceled. For example, you won a dispute with the customer, and the funds for the transaction that was reversed have been returned to you.</value>
  </data>
  <data name="PaymentStatus_Denied.Text" xml:space="preserve">
    <value>You denied the payment. This happens only if the payment was previously pending.</value>
  </data>
  <data name="PaymentStatus_Failed.Text" xml:space="preserve">
    <value>The payment has failed. This happens only if the payment was made from your customerâ€™s bank account.</value>
  </data>
  <data name="PaymentStatus_Pending.Text" xml:space="preserve">
    <value>The payment is pending.</value>
  </data>
  <data name="PaymentStatus_Refunded.Text" xml:space="preserve">
    <value>You refunded the payment.</value>
  </data>
  <data name="PaymentStatus_Reversed.Text" xml:space="preserve">
    <value>A payment was reversed due to a chargeback or other type of reversal. The funds have been removed from your account balance and returned to the buyer.</value>
  </data>
  <data name="PaymentType_echeck.Text" xml:space="preserve">
    <value>This payment was funded with an eCheck.</value>
  </data>
  <data name="PaymentType_instant.Text" xml:space="preserve">
    <value>This payment was funded with PayPal balance, credit card, or Instant Transfer.</value>
  </data>
  <data name="PendingReason_address.Text" xml:space="preserve">
    <value>The payment is pending because your customer did not include a confirmed shipping address and your Payment Receiving Preferences is set yo allow you to manually accept or deny each of these payments. To change your preference, go to the Preferences section of your Profile.</value>
  </data>
  <data name="PendingReason_echeck.Text" xml:space="preserve">
    <value>The payment is pending because it was made by an eCheck that has not yet cleared.</value>
  </data>
  <data name="PendingReason_intl.Text" xml:space="preserve">
    <value>The payment is pending because you hold a non-U.S. account and do not have a withdrawal mechanism. You must manually accept or deny this payment from your Account Overview.</value>
  </data>
  <data name="PendingReason_multi-currency.Text" xml:space="preserve">
    <value>You do not have a balance in the currency sent, and you do not have your Payment Receiving Preferences set to automatically convert and accept this payment. You must manually accept or deny this payment.</value>
  </data>
  <data name="PendingReason_other.Text" xml:space="preserve">
    <value>The payment is pending for an unknown reason. For more information, contact PayPal Customer Service.</value>
  </data>
  <data name="PendingReason_paymentreview.Text" xml:space="preserve">
    <value>The payment is pending while it is being reviewed by PayPal for risk.</value>
  </data>
  <data name="PendingReason_unilateral.Text" xml:space="preserve">
    <value>The payment is pending because it was made to an email address that is not yet registered or confirmed.</value>
  </data>
  <data name="PendingReason_upgrade.Text" xml:space="preserve">
    <value>The payment is pending because it was made via credit card and you must upgrade your account to Business or Premier status in order to receive the funds. This can also mean that you have reached the monthly limit for transactions on your account.</value>
  </data>
  <data name="PendingReason_verify.Text" xml:space="preserve">
    <value>The payment is pending because you are not yet verified. You must verify your account before you can accept this payment.</value>
  </data>
  <data name="ReasonCode_adjustment_reversal.Text" xml:space="preserve">
    <value>Reversal of an adjustment</value>
  </data>
  <data name="ReasonCode_buyer-complaint.Text" xml:space="preserve">
    <value>A reversal has occurred on this transaction due to a complaint about the transaction from your customer.</value>
  </data>
  <data name="ReasonCode_chargeback.Text" xml:space="preserve">
    <value>A reversal has occurred on this transaction due to a chargeback by your customer.</value>
  </data>
  <data name="ReasonCode_chargeback_reimbursement.Text" xml:space="preserve">
    <value>Reimbursement for a chargeback.</value>
  </data>
  <data name="ReasonCode_chargeback_settlement.Text" xml:space="preserve">
    <value>Settlement of a chargeback.</value>
  </data>
  <data name="ReasonCode_guarantee.Text" xml:space="preserve">
    <value>A reversal has occurred on this transaction due to your customer triggering a money-back guarantee.</value>
  </data>
  <data name="ReasonCode_other.Text" xml:space="preserve">
    <value>Non-specified reason.</value>
  </data>
  <data name="ReasonCode_refund.Text" xml:space="preserve">
    <value>A reversal has occurred on this transaction because you have given the customer a refund.</value>
  </data>
  <data name="AdminStatusChangedEmailBody.Text" xml:space="preserve">
    <value>The order #[Order:OrderID] has changed status to "[Order:Status]".

Please login to your portal and go to the Store Admin page for details about this order.</value>
  </data>
  <data name="AdminStatusChangedEmailSubject.Text" xml:space="preserve">
    <value>The status of order #[Order:OrderID] has been changed to "[Order:Status]"</value>
  </data>
  <data name="CustomerStatusChangedEmailBody.Text" xml:space="preserve">
    <value>You recently placed an order with [Store:Name].

This order ([Order:OrderID]) has changed status to "[Order:Status]".

If you have any questions about this change, please feel free to contact us at [Store:Email], or simply reply to this message.

If you have created an account, you can check the status of your order at any time by logging in to our site and clicking the [Store:ShoppingCartPageName] link.

Once again, thank you for your order.</value>
  </data>
  <data name="CustomerStatusChangedEmailSubject.Text" xml:space="preserve">
    <value>The status of your order #[Order:OrderID] has been changed to "[Order:Status]"</value>
  </data>
  <data name="ReasonCode_refunded.Text" xml:space="preserve">
    <value>The payment has been refunded from your PayPal account.</value>
  </data>
</root>