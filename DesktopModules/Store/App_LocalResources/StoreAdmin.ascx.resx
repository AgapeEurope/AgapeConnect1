<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblParentTitle.Text" xml:space="preserve">
    <value>Store Info</value>
  </data>
  <data name="lblStoreName.Text" xml:space="preserve">
    <value>Store Name:</value>
  </data>
  <data name="lblDescription.Text" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="lblKeywords.Text" xml:space="preserve">
    <value>Keywords:</value>
  </data>
  <data name="lblEmail.Text" xml:space="preserve">
    <value>Store Email:</value>
  </data>
  <data name="lblShoppingCartPageID.Text" xml:space="preserve">
    <value>Store Account Page:</value>
  </data>
  <data name="lblGateway.Text" xml:space="preserve">
    <value>Payment Gateway:</value>
  </data>
  <data name="lblStoreName.Help" xml:space="preserve">
    <value>Name of your store.</value>
  </data>
  <data name="lblDescription.Help" xml:space="preserve">
    <value>Description of your store.</value>
  </data>
  <data name="lblKeywords.Help" xml:space="preserve">
    <value>Keywords that pertain to your store.</value>
  </data>
  <data name="lblEmail.Help" xml:space="preserve">
    <value>Email address of your store.</value>
  </data>
  <data name="lblShoppingCartPageID.Help" xml:space="preserve">
    <value>Select the page containing the store account module.</value>
  </data>
  <data name="lblGateway.Help" xml:space="preserve">
    <value>Select the payment gateway provider to use.</value>
  </data>
  <data name="btnSave.Text" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="CouldNotFind.Text" xml:space="preserve">
    <value>Could not find</value>
  </data>
  <data name="EmptyComboValue.Text" xml:space="preserve">
    <value>--- Select ---</value>
  </data>
  <data name="GatewayNotSelected.Text" xml:space="preserve">
    <value>Please select a Gateway Provider.</value>
  </data>
  <data name="lblStorePageID.Help" xml:space="preserve">
    <value>Select the page containing the store catalog module.</value>
  </data>
  <data name="lblStorePageID.Text" xml:space="preserve">
    <value>Store Page:</value>
  </data>
  <data name="dshShippingProvider.Text" xml:space="preserve">
    <value>Shipping Settings</value>
  </data>
  <data name="dshTaxProvider.Text" xml:space="preserve">
    <value>Tax Settings</value>
  </data>
  <data name="lblCurrencySymbol.Help" xml:space="preserve">
    <value>Currency symbol used for the product prices.</value>
  </data>
  <data name="lblCurrencySymbol.Text" xml:space="preserve">
    <value>Currency Symbol:</value>
  </data>
  <data name="lblUsePortalTemplates.Text" xml:space="preserve">
    <value>Portal Templates:</value>
  </data>
  <data name="lblUsePortalTemplates.Help" xml:space="preserve">
    <value>Check for using portal templates.</value>
  </data>
  <data name="lblAuthorizeCancel.Help" xml:space="preserve">
    <value>Check to authorize the cancellation of order by clients.</value>
  </data>
  <data name="lblAuthorizeCancel.Text" xml:space="preserve">
    <value>Authorize Cancel:</value>
  </data>
  <data name="lblSEOFeature.Help" xml:space="preserve">
    <value>When SEO feature is checked the store fields Title, Description and Keywords are injected to the corresponding META fields of the page where the catalog module is placed. This allow a better indexing by search engines and produce higher ranking. When product details are displayed, the product's fields model name, summary and keywords are used.</value>
  </data>
  <data name="lblSEOFeature.Text" xml:space="preserve">
    <value>SEO Feature:</value>
  </data>
  <data name="lblOutOfStock.Help" xml:space="preserve">
    <value>Choose the message to display when a product is out of stock. This feature work only when the [STOCKQUANTITY] token is used in templates.</value>
  </data>
  <data name="lblOutOfStock.Text" xml:space="preserve">
    <value>On Out of Stock:</value>
  </data>
  <data name="OOStockQuantity.Text" xml:space="preserve">
    <value>Quantity in stock</value>
  </data>
  <data name="OOStockRestocking.Text" xml:space="preserve">
    <value>Restocking in progress</value>
  </data>
  <data name="OOStockUnavailable.Text" xml:space="preserve">
    <value>Product Unavailable</value>
  </data>
  <data name="BehaviorAccept.Text" xml:space="preserve">
    <value>Accept order if a product is out of stock</value>
  </data>
  <data name="BehaviorHideProduct.Text" xml:space="preserve">
    <value>Hide the product</value>
  </data>
  <data name="lblProductsBehavior.Help" xml:space="preserve">
    <value>If a product is out of stock, you can: 1) accept his ordering; 2) hide the field quantity, links/buttons "Add to Cart" and "Buy now!"; 3) Hide the product.</value>
  </data>
  <data name="lblProductsBehavior.Text" xml:space="preserve">
    <value>Product's Behavior:</value>
  </data>
  <data name="BehaviorHideControls.Text" xml:space="preserve">
    <value>Hide quantity, links and buttons</value>
  </data>
  <data name="lblCatalogRole.Help" xml:space="preserve">
    <value>Select the role allowed to manage the catalog (Categories, Products, Reviews). By default, members of the group Administors and host accounts are allowed to manage the catalog.</value>
  </data>
  <data name="lblCatalogRole.Text" xml:space="preserve">
    <value>Manage Catalog:</value>
  </data>
  <data name="lblOrderRole.Help" xml:space="preserve">
    <value>Select the role allowed to manage orders. By default, members of the group Administors and host accounts are allowed to manage orders.</value>
  </data>
  <data name="lblOrderRole.Text" xml:space="preserve">
    <value>Manage Orders:</value>
  </data>
  <data name="TabHidden.Text" xml:space="preserve">
    <value> (Hidden!)</value>
  </data>
  <data name="lblSecureCookie.Help" xml:space="preserve">
    <value>Check to encrypt cookie values.</value>
  </data>
  <data name="lblSecureCookie.Text" xml:space="preserve">
    <value>Secure Cookie:</value>
  </data>
  <data name="CheckoutModeAnonymous.Text" xml:space="preserve">
    <value>Always Anonymous</value>
  </data>
  <data name="CheckoutModeRegistred.Text" xml:space="preserve">
    <value>Registration Required</value>
  </data>
  <data name="CheckoutModeUserChoice.Text" xml:space="preserve">
    <value>User Choice</value>
  </data>
  <data name="lblCheckoutMode.Help" xml:space="preserve">
    <value>Select the Checkout Mode.</value>
  </data>
  <data name="lblCheckoutMode.Text" xml:space="preserve">
    <value>Checkout Mode:</value>
  </data>
  <data name="lblImpersonatedUserID.Help" xml:space="preserve">
    <value>Select Impersonated Account to use when an order is passed in anonymous mode.</value>
  </data>
  <data name="lblImpersonatedUserID.Text" xml:space="preserve">
    <value>Impersonated Account:</value>
  </data>
  <data name="lblStyleSheet.Help" xml:space="preserve">
    <value>Select the main style sheet to use.</value>
  </data>
  <data name="lblStyleSheet.Text" xml:space="preserve">
    <value>Style Sheet:</value>
  </data>
  <data name="valRegExEmail.Text" xml:space="preserve">
    <value>&lt;br/&gt;* A valid email is required!</value>
  </data>
  <data name="valReqCatalogRole.Text" xml:space="preserve">
    <value>&lt;br/&gt;* Select a role allowed to manage the catalog and reviews!</value>
  </data>
  <data name="valReqImpersonatedUserID.Text" xml:space="preserve">
    <value>&lt;br/&gt;* Select an account!</value>
  </data>
  <data name="valReqOrderRole.Text" xml:space="preserve">
    <value>&lt;br/&gt;* Select a role allowed to manage orders!</value>
  </data>
  <data name="valReqShoppingCartPageID.Text" xml:space="preserve">
    <value>&lt;br/&gt;* Select the store account page!</value>
  </data>
  <data name="valReqStoreEmail.Text" xml:space="preserve">
    <value>&lt;br/&gt;* Store Email is required!</value>
  </data>
  <data name="valReqStoreName.Text" xml:space="preserve">
    <value>&lt;br/&gt;* Store Name is required!</value>
  </data>
  <data name="valReqStorePageID.Text" xml:space="preserve">
    <value>&lt;br/&gt;* Select the store catalog page!</value>
  </data>
  <data name="lblInventoryManagement.Help" xml:space="preserve">
    <value>Check to allow inventory management. If unchecked the [STOCKQUANTITY] token will be NOT displayed and products quantity wil be NOT updated.</value>
  </data>
  <data name="lblInventoryManagement.Text" xml:space="preserve">
    <value>Inventory Management:</value>
  </data>
  <data name="lblAvoidNegativeStock.Help" xml:space="preserve">
    <value>When this setting is checked, an additional availability test will be done when a product is added to shopping cart. However, there is no guarantee that the stock will be not negative due to the nature of the Internet.</value>
  </data>
  <data name="lblAvoidNegativeStock.Text" xml:space="preserve">
    <value>Avoid Negative Stock:</value>
  </data>
  <data name="dshGatewayProvider.Text" xml:space="preserve">
    <value>Payment Gateway Settings</value>
  </data>
  <data name="lblProviders.Text" xml:space="preserve">
    <value>Please first select providers to use with your store and then save your store settings. Don't forget to define parameters of each provider in its respective section below in order to be able to use your store.</value>
  </data>
  <data name="lblShippingProvider.Help" xml:space="preserve">
    <value>Select the shipping provider to use.</value>
  </data>
  <data name="lblShippingProvider.Text" xml:space="preserve">
    <value>Shipping Provider:</value>
  </data>
  <data name="lblTaxProvider.Help" xml:space="preserve">
    <value>Select the tax provider to use.</value>
  </data>
  <data name="lblTaxProvider.Text" xml:space="preserve">
    <value>Tax Provider:</value>
  </data>
  <data name="lblAddressProvider.Help" xml:space="preserve">
    <value>Select the address provider to use.</value>
  </data>
  <data name="lblAddressProvider.Text" xml:space="preserve">
    <value>Address Provider:</value>
  </data>
  <data name="dshAddressProvider.Text" xml:space="preserve">
    <value>Address Administration</value>
  </data>
  <data name="lblAllowVirtualProducts.Text" xml:space="preserve">
    <value>Allow Virtual Products:</value>
  </data>
  <data name="lblAllowVirtualProducts.Help" xml:space="preserve">
    <value>Check to allow virtual products management.</value>
  </data>
</root>