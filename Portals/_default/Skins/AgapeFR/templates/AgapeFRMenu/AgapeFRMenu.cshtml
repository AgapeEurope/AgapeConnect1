@using DotNetNuke.Web.DDRMenu;
@using System.Dynamic; 
@inherits DotNetNuke.Web.Razor.DotNetNukeWebPage<dynamic>
@{ var root = Model.Source.root; }

@helper RenderNodes(IList<MenuNode> nodes)
{
    if (nodes.Count > 0)
    {
    <ul class="navhor">
        @foreach (var node in nodes)
        {
            var cssClasses = new List<string>();
            if (node.First) { cssClasses.Add("first"); }
            if (node.Last) { cssClasses.Add("last"); }
            if (node.Selected || HasSelectedChild(node)) { cssClasses.Add("selected"); }
            var classString = new HtmlString((cssClasses.Count == 0) ? "" :
                                (" class=\"" + String.Join(" ", cssClasses.ToArray()) + "\""));
            <li @classString>
                @if (node.Enabled)
                {
                    <a href="@node.Url">@node.Text</a>
                    <div id="pointer"></div>
                 }
                else
                {
                    @node.Text
                }
            </li>
        }
    </ul>
    }
}

@functions{
    Boolean HasSelectedChild(MenuNode node)
    {
        foreach (var child in node.Children)
        {
            if (child.Selected || HasSelectedChild(child)) { return true; }
        }
        return false;
    }
    
}

@RenderNodes(root.Children)