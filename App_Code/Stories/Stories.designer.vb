'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.17929
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection

Namespace Stories
	
	<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="AgapeConnect")>  _
	Partial Public Class StoriesDataContext
		Inherits System.Data.Linq.DataContext
		
		Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertAP_Stories_Module(instance As AP_Stories_Module)
    End Sub
    Partial Private Sub UpdateAP_Stories_Module(instance As AP_Stories_Module)
    End Sub
    Partial Private Sub DeleteAP_Stories_Module(instance As AP_Stories_Module)
    End Sub
    Partial Private Sub InsertAP_Stories_Module_Channel_Cache(instance As AP_Stories_Module_Channel_Cache)
    End Sub
    Partial Private Sub UpdateAP_Stories_Module_Channel_Cache(instance As AP_Stories_Module_Channel_Cache)
    End Sub
    Partial Private Sub DeleteAP_Stories_Module_Channel_Cache(instance As AP_Stories_Module_Channel_Cache)
    End Sub
    Partial Private Sub InsertAP_Story(instance As AP_Story)
    End Sub
    Partial Private Sub UpdateAP_Story(instance As AP_Story)
    End Sub
    Partial Private Sub DeleteAP_Story(instance As AP_Story)
    End Sub
    Partial Private Sub InsertAP_Stories_Module_Channel(instance As AP_Stories_Module_Channel)
    End Sub
    Partial Private Sub UpdateAP_Stories_Module_Channel(instance As AP_Stories_Module_Channel)
    End Sub
    Partial Private Sub DeleteAP_Stories_Module_Channel(instance As AP_Stories_Module_Channel)
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("SiteSqlServer").ConnectionString, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public ReadOnly Property AP_Stories_Modules() As System.Data.Linq.Table(Of AP_Stories_Module)
			Get
				Return Me.GetTable(Of AP_Stories_Module)
			End Get
		End Property
		
		Public ReadOnly Property AP_Stories_Module_Channel_Caches() As System.Data.Linq.Table(Of AP_Stories_Module_Channel_Cache)
			Get
				Return Me.GetTable(Of AP_Stories_Module_Channel_Cache)
			End Get
		End Property
		
		Public ReadOnly Property AP_Stories() As System.Data.Linq.Table(Of AP_Story)
			Get
				Return Me.GetTable(Of AP_Story)
			End Get
		End Property
		
		Public ReadOnly Property AP_Stories_Module_Channels() As System.Data.Linq.Table(Of AP_Stories_Module_Channel)
			Get
				Return Me.GetTable(Of AP_Stories_Module_Channel)
			End Get
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_Stories_Module")>  _
	Partial Public Class AP_Stories_Module
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _StoryModuleId As Integer
		
		Private _TabModuleId As Integer
		
		Private _FilterType As Short
		
		Private _FilterSetting1 As String
		
		Private _FilterSetting2 As String
		
		Private _FilterSetting3 As String
		
		Private _MaxDisplayItems As System.Nullable(Of Short)
		
		Private _AP_Stories_Module_Channels As EntitySet(Of AP_Stories_Module_Channel)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStoryModuleIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnStoryModuleIdChanged()
    End Sub
    Partial Private Sub OnTabModuleIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnTabModuleIdChanged()
    End Sub
    Partial Private Sub OnFilterTypeChanging(value As Short)
    End Sub
    Partial Private Sub OnFilterTypeChanged()
    End Sub
    Partial Private Sub OnFilterSetting1Changing(value As String)
    End Sub
    Partial Private Sub OnFilterSetting1Changed()
    End Sub
    Partial Private Sub OnFilterSetting2Changing(value As String)
    End Sub
    Partial Private Sub OnFilterSetting2Changed()
    End Sub
    Partial Private Sub OnFilterSetting3Changing(value As String)
    End Sub
    Partial Private Sub OnFilterSetting3Changed()
    End Sub
    Partial Private Sub OnMaxDisplayItemsChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnMaxDisplayItemsChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._AP_Stories_Module_Channels = New EntitySet(Of AP_Stories_Module_Channel)(AddressOf Me.attach_AP_Stories_Module_Channels, AddressOf Me.detach_AP_Stories_Module_Channels)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StoryModuleId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property StoryModuleId() As Integer
			Get
				Return Me._StoryModuleId
			End Get
			Set
				If ((Me._StoryModuleId = value)  _
							= false) Then
					Me.OnStoryModuleIdChanging(value)
					Me.SendPropertyChanging
					Me._StoryModuleId = value
					Me.SendPropertyChanged("StoryModuleId")
					Me.OnStoryModuleIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TabModuleId", DbType:="Int NOT NULL")>  _
		Public Property TabModuleId() As Integer
			Get
				Return Me._TabModuleId
			End Get
			Set
				If ((Me._TabModuleId = value)  _
							= false) Then
					Me.OnTabModuleIdChanging(value)
					Me.SendPropertyChanging
					Me._TabModuleId = value
					Me.SendPropertyChanged("TabModuleId")
					Me.OnTabModuleIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FilterType", DbType:="SmallInt NOT NULL")>  _
		Public Property FilterType() As Short
			Get
				Return Me._FilterType
			End Get
			Set
				If ((Me._FilterType = value)  _
							= false) Then
					Me.OnFilterTypeChanging(value)
					Me.SendPropertyChanging
					Me._FilterType = value
					Me.SendPropertyChanged("FilterType")
					Me.OnFilterTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FilterSetting1", DbType:="NVarChar(MAX)")>  _
		Public Property FilterSetting1() As String
			Get
				Return Me._FilterSetting1
			End Get
			Set
				If (String.Equals(Me._FilterSetting1, value) = false) Then
					Me.OnFilterSetting1Changing(value)
					Me.SendPropertyChanging
					Me._FilterSetting1 = value
					Me.SendPropertyChanged("FilterSetting1")
					Me.OnFilterSetting1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FilterSetting2", DbType:="NVarChar(100)")>  _
		Public Property FilterSetting2() As String
			Get
				Return Me._FilterSetting2
			End Get
			Set
				If (String.Equals(Me._FilterSetting2, value) = false) Then
					Me.OnFilterSetting2Changing(value)
					Me.SendPropertyChanging
					Me._FilterSetting2 = value
					Me.SendPropertyChanged("FilterSetting2")
					Me.OnFilterSetting2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FilterSetting3", DbType:="NVarChar(100)")>  _
		Public Property FilterSetting3() As String
			Get
				Return Me._FilterSetting3
			End Get
			Set
				If (String.Equals(Me._FilterSetting3, value) = false) Then
					Me.OnFilterSetting3Changing(value)
					Me.SendPropertyChanging
					Me._FilterSetting3 = value
					Me.SendPropertyChanged("FilterSetting3")
					Me.OnFilterSetting3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaxDisplayItems", DbType:="SmallInt")>  _
		Public Property MaxDisplayItems() As System.Nullable(Of Short)
			Get
				Return Me._MaxDisplayItems
			End Get
			Set
				If (Me._MaxDisplayItems.Equals(value) = false) Then
					Me.OnMaxDisplayItemsChanging(value)
					Me.SendPropertyChanging
					Me._MaxDisplayItems = value
					Me.SendPropertyChanged("MaxDisplayItems")
					Me.OnMaxDisplayItemsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_Stories_Module_AP_Stories_Module_Channel", Storage:="_AP_Stories_Module_Channels", ThisKey:="StoryModuleId", OtherKey:="StoryModuleId")>  _
		Public Property AP_Stories_Module_Channels() As EntitySet(Of AP_Stories_Module_Channel)
			Get
				Return Me._AP_Stories_Module_Channels
			End Get
			Set
				Me._AP_Stories_Module_Channels.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_AP_Stories_Module_Channels(ByVal entity As AP_Stories_Module_Channel)
			Me.SendPropertyChanging
			entity.AP_Stories_Module = Me
		End Sub
		
		Private Sub detach_AP_Stories_Module_Channels(ByVal entity As AP_Stories_Module_Channel)
			Me.SendPropertyChanging
			entity.AP_Stories_Module = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_Stories_Module_Channel_Cache")>  _
	Partial Public Class AP_Stories_Module_Channel_Cache
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _CacheId As Long
		
		Private _Headline As String
		
		Private _Description As String
		
		Private _Link As String
		
		Private _ImageId As String
		
		Private _ChannelId As System.Nullable(Of Integer)
		
		Private _ImageWidth As System.Nullable(Of Short)
		
		Private _ImageHeight As System.Nullable(Of Short)
		
		Private _BoostDate As System.Nullable(Of Date)
		
		Private _Block As System.Nullable(Of Boolean)
		
		Private _Precal As System.Nullable(Of Double)
		
		Private _Clicks As System.Nullable(Of Integer)
		
		Private _StoryDate As System.Nullable(Of Date)
		
		Private _Longitude As System.Nullable(Of Double)
		
		Private _Latitude As System.Nullable(Of Double)
		
		Private _Langauge As String
		
		Private _TranslationGroup As System.Nullable(Of Integer)
		
		Private _AP_Stories_Module_Channel As EntityRef(Of AP_Stories_Module_Channel)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCacheIdChanging(value As Long)
    End Sub
    Partial Private Sub OnCacheIdChanged()
    End Sub
    Partial Private Sub OnHeadlineChanging(value As String)
    End Sub
    Partial Private Sub OnHeadlineChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnLinkChanging(value As String)
    End Sub
    Partial Private Sub OnLinkChanged()
    End Sub
    Partial Private Sub OnImageIdChanging(value As String)
    End Sub
    Partial Private Sub OnImageIdChanged()
    End Sub
    Partial Private Sub OnChannelIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnChannelIdChanged()
    End Sub
    Partial Private Sub OnImageWidthChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnImageWidthChanged()
    End Sub
    Partial Private Sub OnImageHeightChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnImageHeightChanged()
    End Sub
    Partial Private Sub OnBoostDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnBoostDateChanged()
    End Sub
    Partial Private Sub OnBlockChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnBlockChanged()
    End Sub
    Partial Private Sub OnPrecalChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPrecalChanged()
    End Sub
    Partial Private Sub OnClicksChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnClicksChanged()
    End Sub
    Partial Private Sub OnStoryDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStoryDateChanged()
    End Sub
    Partial Private Sub OnLongitudeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLongitudeChanged()
    End Sub
    Partial Private Sub OnLatitudeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLatitudeChanged()
    End Sub
    Partial Private Sub OnLangaugeChanging(value As String)
    End Sub
    Partial Private Sub OnLangaugeChanged()
    End Sub
    Partial Private Sub OnTranslationGroupChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTranslationGroupChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._AP_Stories_Module_Channel = CType(Nothing, EntityRef(Of AP_Stories_Module_Channel))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CacheId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property CacheId() As Long
			Get
				Return Me._CacheId
			End Get
			Set
				If ((Me._CacheId = value)  _
							= false) Then
					Me.OnCacheIdChanging(value)
					Me.SendPropertyChanging
					Me._CacheId = value
					Me.SendPropertyChanged("CacheId")
					Me.OnCacheIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Headline", DbType:="NVarChar(154) NOT NULL", CanBeNull:=false)>  _
		Public Property Headline() As String
			Get
				Return Me._Headline
			End Get
			Set
				If (String.Equals(Me._Headline, value) = false) Then
					Me.OnHeadlineChanging(value)
					Me.SendPropertyChanging
					Me._Headline = value
					Me.SendPropertyChanged("Headline")
					Me.OnHeadlineChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(500)")>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Link", DbType:="NVarChar(154) NOT NULL", CanBeNull:=false)>  _
		Public Property Link() As String
			Get
				Return Me._Link
			End Get
			Set
				If (String.Equals(Me._Link, value) = false) Then
					Me.OnLinkChanging(value)
					Me.SendPropertyChanging
					Me._Link = value
					Me.SendPropertyChanged("Link")
					Me.OnLinkChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImageId", DbType:="NVarChar(250) NOT NULL", CanBeNull:=false)>  _
		Public Property ImageId() As String
			Get
				Return Me._ImageId
			End Get
			Set
				If (String.Equals(Me._ImageId, value) = false) Then
					Me.OnImageIdChanging(value)
					Me.SendPropertyChanging
					Me._ImageId = value
					Me.SendPropertyChanged("ImageId")
					Me.OnImageIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChannelId", DbType:="Int")>  _
		Public Property ChannelId() As System.Nullable(Of Integer)
			Get
				Return Me._ChannelId
			End Get
			Set
				If (Me._ChannelId.Equals(value) = false) Then
					If Me._AP_Stories_Module_Channel.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnChannelIdChanging(value)
					Me.SendPropertyChanging
					Me._ChannelId = value
					Me.SendPropertyChanged("ChannelId")
					Me.OnChannelIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImageWidth", DbType:="SmallInt")>  _
		Public Property ImageWidth() As System.Nullable(Of Short)
			Get
				Return Me._ImageWidth
			End Get
			Set
				If (Me._ImageWidth.Equals(value) = false) Then
					Me.OnImageWidthChanging(value)
					Me.SendPropertyChanging
					Me._ImageWidth = value
					Me.SendPropertyChanged("ImageWidth")
					Me.OnImageWidthChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImageHeight", DbType:="SmallInt")>  _
		Public Property ImageHeight() As System.Nullable(Of Short)
			Get
				Return Me._ImageHeight
			End Get
			Set
				If (Me._ImageHeight.Equals(value) = false) Then
					Me.OnImageHeightChanging(value)
					Me.SendPropertyChanging
					Me._ImageHeight = value
					Me.SendPropertyChanged("ImageHeight")
					Me.OnImageHeightChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BoostDate", DbType:="DateTime")>  _
		Public Property BoostDate() As System.Nullable(Of Date)
			Get
				Return Me._BoostDate
			End Get
			Set
				If (Me._BoostDate.Equals(value) = false) Then
					Me.OnBoostDateChanging(value)
					Me.SendPropertyChanging
					Me._BoostDate = value
					Me.SendPropertyChanged("BoostDate")
					Me.OnBoostDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Block", DbType:="Bit")>  _
		Public Property Block() As System.Nullable(Of Boolean)
			Get
				Return Me._Block
			End Get
			Set
				If (Me._Block.Equals(value) = false) Then
					Me.OnBlockChanging(value)
					Me.SendPropertyChanging
					Me._Block = value
					Me.SendPropertyChanged("Block")
					Me.OnBlockChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Precal", DbType:="Float")>  _
		Public Property Precal() As System.Nullable(Of Double)
			Get
				Return Me._Precal
			End Get
			Set
				If (Me._Precal.Equals(value) = false) Then
					Me.OnPrecalChanging(value)
					Me.SendPropertyChanging
					Me._Precal = value
					Me.SendPropertyChanged("Precal")
					Me.OnPrecalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Clicks", DbType:="Int")>  _
		Public Property Clicks() As System.Nullable(Of Integer)
			Get
				Return Me._Clicks
			End Get
			Set
				If (Me._Clicks.Equals(value) = false) Then
					Me.OnClicksChanging(value)
					Me.SendPropertyChanging
					Me._Clicks = value
					Me.SendPropertyChanged("Clicks")
					Me.OnClicksChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StoryDate", DbType:="Date")>  _
		Public Property StoryDate() As System.Nullable(Of Date)
			Get
				Return Me._StoryDate
			End Get
			Set
				If (Me._StoryDate.Equals(value) = false) Then
					Me.OnStoryDateChanging(value)
					Me.SendPropertyChanging
					Me._StoryDate = value
					Me.SendPropertyChanged("StoryDate")
					Me.OnStoryDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Longitude", DbType:="Float")>  _
		Public Property Longitude() As System.Nullable(Of Double)
			Get
				Return Me._Longitude
			End Get
			Set
				If (Me._Longitude.Equals(value) = false) Then
					Me.OnLongitudeChanging(value)
					Me.SendPropertyChanging
					Me._Longitude = value
					Me.SendPropertyChanged("Longitude")
					Me.OnLongitudeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Latitude", DbType:="Float")>  _
		Public Property Latitude() As System.Nullable(Of Double)
			Get
				Return Me._Latitude
			End Get
			Set
				If (Me._Latitude.Equals(value) = false) Then
					Me.OnLatitudeChanging(value)
					Me.SendPropertyChanging
					Me._Latitude = value
					Me.SendPropertyChanged("Latitude")
					Me.OnLatitudeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Langauge", DbType:="NVarChar(8)")>  _
		Public Property Langauge() As String
			Get
				Return Me._Langauge
			End Get
			Set
				If (String.Equals(Me._Langauge, value) = false) Then
					Me.OnLangaugeChanging(value)
					Me.SendPropertyChanging
					Me._Langauge = value
					Me.SendPropertyChanged("Langauge")
					Me.OnLangaugeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TranslationGroup", DbType:="Int")>  _
		Public Property TranslationGroup() As System.Nullable(Of Integer)
			Get
				Return Me._TranslationGroup
			End Get
			Set
				If (Me._TranslationGroup.Equals(value) = false) Then
					Me.OnTranslationGroupChanging(value)
					Me.SendPropertyChanging
					Me._TranslationGroup = value
					Me.SendPropertyChanged("TranslationGroup")
					Me.OnTranslationGroupChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_Stories_Module_Channel_AP_Stories_Module_Channel_Cache", Storage:="_AP_Stories_Module_Channel", ThisKey:="ChannelId", OtherKey:="ChannelId", IsForeignKey:=true)>  _
		Public Property AP_Stories_Module_Channel() As AP_Stories_Module_Channel
			Get
				Return Me._AP_Stories_Module_Channel.Entity
			End Get
			Set
				Dim previousValue As AP_Stories_Module_Channel = Me._AP_Stories_Module_Channel.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._AP_Stories_Module_Channel.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._AP_Stories_Module_Channel.Entity = Nothing
						previousValue.AP_Stories_Module_Channel_Caches.Remove(Me)
					End If
					Me._AP_Stories_Module_Channel.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.AP_Stories_Module_Channel_Caches.Add(Me)
						Me._ChannelId = value.ChannelId
					Else
						Me._ChannelId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("AP_Stories_Module_Channel")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_Stories")>  _
	Partial Public Class AP_Story
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _StoryId As Integer
		
		Private _Headline As String
		
		Private _PhotoId As Integer
		
		Private _StoryText As String
		
		Private _StoryDate As Date
		
		Private _Author As String
		
		Private _EditorBoost As System.Nullable(Of Date)
		
		Private _Editable As Boolean
		
		Private _RegionId As System.Nullable(Of Integer)
		
		Private _UserId As Integer
		
		Private _IsVisible As Boolean
		
		Private _Sent As Boolean
		
		Private _PortalID As Integer
		
		Private _TabId As System.Nullable(Of Integer)
		
		Private _TabModuleId As System.Nullable(Of Integer)
		
		Private _Longitude As System.Nullable(Of Double)
		
		Private _Latitude As System.Nullable(Of Double)
		
		Private _TranslationGroup As System.Nullable(Of Integer)
		
		Private _Language As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStoryIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnStoryIdChanged()
    End Sub
    Partial Private Sub OnHeadlineChanging(value As String)
    End Sub
    Partial Private Sub OnHeadlineChanged()
    End Sub
    Partial Private Sub OnPhotoIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnPhotoIdChanged()
    End Sub
    Partial Private Sub OnStoryTextChanging(value As String)
    End Sub
    Partial Private Sub OnStoryTextChanged()
    End Sub
    Partial Private Sub OnStoryDateChanging(value As Date)
    End Sub
    Partial Private Sub OnStoryDateChanged()
    End Sub
    Partial Private Sub OnAuthorChanging(value As String)
    End Sub
    Partial Private Sub OnAuthorChanged()
    End Sub
    Partial Private Sub OnEditorBoostChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEditorBoostChanged()
    End Sub
    Partial Private Sub OnEditableChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEditableChanged()
    End Sub
    Partial Private Sub OnRegionIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRegionIdChanged()
    End Sub
    Partial Private Sub OnUserIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnUserIdChanged()
    End Sub
    Partial Private Sub OnIsVisibleChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsVisibleChanged()
    End Sub
    Partial Private Sub OnSentChanging(value As Boolean)
    End Sub
    Partial Private Sub OnSentChanged()
    End Sub
    Partial Private Sub OnPortalIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnPortalIDChanged()
    End Sub
    Partial Private Sub OnTabIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTabIdChanged()
    End Sub
    Partial Private Sub OnTabModuleIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTabModuleIdChanged()
    End Sub
    Partial Private Sub OnLongitudeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLongitudeChanged()
    End Sub
    Partial Private Sub OnLatitudeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLatitudeChanged()
    End Sub
    Partial Private Sub OnTranslationGroupChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTranslationGroupChanged()
    End Sub
    Partial Private Sub OnLanguageChanging(value As String)
    End Sub
    Partial Private Sub OnLanguageChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StoryId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property StoryId() As Integer
			Get
				Return Me._StoryId
			End Get
			Set
				If ((Me._StoryId = value)  _
							= false) Then
					Me.OnStoryIdChanging(value)
					Me.SendPropertyChanging
					Me._StoryId = value
					Me.SendPropertyChanged("StoryId")
					Me.OnStoryIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Headline", DbType:="NVarChar(154) NOT NULL", CanBeNull:=false)>  _
		Public Property Headline() As String
			Get
				Return Me._Headline
			End Get
			Set
				If (String.Equals(Me._Headline, value) = false) Then
					Me.OnHeadlineChanging(value)
					Me.SendPropertyChanging
					Me._Headline = value
					Me.SendPropertyChanged("Headline")
					Me.OnHeadlineChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhotoId", DbType:="Int NOT NULL")>  _
		Public Property PhotoId() As Integer
			Get
				Return Me._PhotoId
			End Get
			Set
				If ((Me._PhotoId = value)  _
							= false) Then
					Me.OnPhotoIdChanging(value)
					Me.SendPropertyChanging
					Me._PhotoId = value
					Me.SendPropertyChanged("PhotoId")
					Me.OnPhotoIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StoryText", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
		Public Property StoryText() As String
			Get
				Return Me._StoryText
			End Get
			Set
				If (String.Equals(Me._StoryText, value) = false) Then
					Me.OnStoryTextChanging(value)
					Me.SendPropertyChanging
					Me._StoryText = value
					Me.SendPropertyChanged("StoryText")
					Me.OnStoryTextChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StoryDate", DbType:="SmallDateTime NOT NULL")>  _
		Public Property StoryDate() As Date
			Get
				Return Me._StoryDate
			End Get
			Set
				If ((Me._StoryDate = value)  _
							= false) Then
					Me.OnStoryDateChanging(value)
					Me.SendPropertyChanging
					Me._StoryDate = value
					Me.SendPropertyChanged("StoryDate")
					Me.OnStoryDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Author", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property Author() As String
			Get
				Return Me._Author
			End Get
			Set
				If (String.Equals(Me._Author, value) = false) Then
					Me.OnAuthorChanging(value)
					Me.SendPropertyChanging
					Me._Author = value
					Me.SendPropertyChanged("Author")
					Me.OnAuthorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EditorBoost", DbType:="SmallDateTime")>  _
		Public Property EditorBoost() As System.Nullable(Of Date)
			Get
				Return Me._EditorBoost
			End Get
			Set
				If (Me._EditorBoost.Equals(value) = false) Then
					Me.OnEditorBoostChanging(value)
					Me.SendPropertyChanging
					Me._EditorBoost = value
					Me.SendPropertyChanged("EditorBoost")
					Me.OnEditorBoostChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Editable", DbType:="Bit NOT NULL")>  _
		Public Property Editable() As Boolean
			Get
				Return Me._Editable
			End Get
			Set
				If ((Me._Editable = value)  _
							= false) Then
					Me.OnEditableChanging(value)
					Me.SendPropertyChanging
					Me._Editable = value
					Me.SendPropertyChanged("Editable")
					Me.OnEditableChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RegionId", DbType:="Int")>  _
		Public Property RegionId() As System.Nullable(Of Integer)
			Get
				Return Me._RegionId
			End Get
			Set
				If (Me._RegionId.Equals(value) = false) Then
					Me.OnRegionIdChanging(value)
					Me.SendPropertyChanging
					Me._RegionId = value
					Me.SendPropertyChanged("RegionId")
					Me.OnRegionIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="Int NOT NULL")>  _
		Public Property UserId() As Integer
			Get
				Return Me._UserId
			End Get
			Set
				If ((Me._UserId = value)  _
							= false) Then
					Me.OnUserIdChanging(value)
					Me.SendPropertyChanging
					Me._UserId = value
					Me.SendPropertyChanged("UserId")
					Me.OnUserIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsVisible", DbType:="Bit NOT NULL")>  _
		Public Property IsVisible() As Boolean
			Get
				Return Me._IsVisible
			End Get
			Set
				If ((Me._IsVisible = value)  _
							= false) Then
					Me.OnIsVisibleChanging(value)
					Me.SendPropertyChanging
					Me._IsVisible = value
					Me.SendPropertyChanged("IsVisible")
					Me.OnIsVisibleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sent", DbType:="Bit NOT NULL")>  _
		Public Property Sent() As Boolean
			Get
				Return Me._Sent
			End Get
			Set
				If ((Me._Sent = value)  _
							= false) Then
					Me.OnSentChanging(value)
					Me.SendPropertyChanging
					Me._Sent = value
					Me.SendPropertyChanged("Sent")
					Me.OnSentChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalID", DbType:="Int NOT NULL")>  _
		Public Property PortalID() As Integer
			Get
				Return Me._PortalID
			End Get
			Set
				If ((Me._PortalID = value)  _
							= false) Then
					Me.OnPortalIDChanging(value)
					Me.SendPropertyChanging
					Me._PortalID = value
					Me.SendPropertyChanged("PortalID")
					Me.OnPortalIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TabId", DbType:="Int")>  _
		Public Property TabId() As System.Nullable(Of Integer)
			Get
				Return Me._TabId
			End Get
			Set
				If (Me._TabId.Equals(value) = false) Then
					Me.OnTabIdChanging(value)
					Me.SendPropertyChanging
					Me._TabId = value
					Me.SendPropertyChanged("TabId")
					Me.OnTabIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TabModuleId", DbType:="Int")>  _
		Public Property TabModuleId() As System.Nullable(Of Integer)
			Get
				Return Me._TabModuleId
			End Get
			Set
				If (Me._TabModuleId.Equals(value) = false) Then
					Me.OnTabModuleIdChanging(value)
					Me.SendPropertyChanging
					Me._TabModuleId = value
					Me.SendPropertyChanged("TabModuleId")
					Me.OnTabModuleIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Longitude", DbType:="Float")>  _
		Public Property Longitude() As System.Nullable(Of Double)
			Get
				Return Me._Longitude
			End Get
			Set
				If (Me._Longitude.Equals(value) = false) Then
					Me.OnLongitudeChanging(value)
					Me.SendPropertyChanging
					Me._Longitude = value
					Me.SendPropertyChanged("Longitude")
					Me.OnLongitudeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Latitude", DbType:="Float")>  _
		Public Property Latitude() As System.Nullable(Of Double)
			Get
				Return Me._Latitude
			End Get
			Set
				If (Me._Latitude.Equals(value) = false) Then
					Me.OnLatitudeChanging(value)
					Me.SendPropertyChanging
					Me._Latitude = value
					Me.SendPropertyChanged("Latitude")
					Me.OnLatitudeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TranslationGroup", DbType:="Int")>  _
		Public Property TranslationGroup() As System.Nullable(Of Integer)
			Get
				Return Me._TranslationGroup
			End Get
			Set
				If (Me._TranslationGroup.Equals(value) = false) Then
					Me.OnTranslationGroupChanging(value)
					Me.SendPropertyChanging
					Me._TranslationGroup = value
					Me.SendPropertyChanged("TranslationGroup")
					Me.OnTranslationGroupChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Language", DbType:="NVarChar(8)")>  _
		Public Property Language() As String
			Get
				Return Me._Language
			End Get
			Set
				If (String.Equals(Me._Language, value) = false) Then
					Me.OnLanguageChanging(value)
					Me.SendPropertyChanging
					Me._Language = value
					Me.SendPropertyChanged("Language")
					Me.OnLanguageChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_Stories_Module_Channel")>  _
	Partial Public Class AP_Stories_Module_Channel
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ChannelId As Integer
		
		Private _Type As Short
		
		Private _URL As String
		
		Private _Weight As Double
		
		Private _Language As String
		
		Private _ChannelTitle As String
		
		Private _ImageId As String
		
		Private _StoryModuleId As System.Nullable(Of Integer)
		
		Private _Longitude As System.Nullable(Of Double)
		
		Private _Latitude As System.Nullable(Of Double)
		
		Private _AutoDetectLanguage As System.Nullable(Of Boolean)
		
		Private _AP_Stories_Module_Channel_Caches As EntitySet(Of AP_Stories_Module_Channel_Cache)
		
		Private _AP_Stories_Module As EntityRef(Of AP_Stories_Module)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnChannelIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnChannelIdChanged()
    End Sub
    Partial Private Sub OnTypeChanging(value As Short)
    End Sub
    Partial Private Sub OnTypeChanged()
    End Sub
    Partial Private Sub OnURLChanging(value As String)
    End Sub
    Partial Private Sub OnURLChanged()
    End Sub
    Partial Private Sub OnWeightChanging(value As Double)
    End Sub
    Partial Private Sub OnWeightChanged()
    End Sub
    Partial Private Sub OnLanguageChanging(value As String)
    End Sub
    Partial Private Sub OnLanguageChanged()
    End Sub
    Partial Private Sub OnChannelTitleChanging(value As String)
    End Sub
    Partial Private Sub OnChannelTitleChanged()
    End Sub
    Partial Private Sub OnImageIdChanging(value As String)
    End Sub
    Partial Private Sub OnImageIdChanged()
    End Sub
    Partial Private Sub OnStoryModuleIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStoryModuleIdChanged()
    End Sub
    Partial Private Sub OnLongitudeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLongitudeChanged()
    End Sub
    Partial Private Sub OnLatitudeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLatitudeChanged()
    End Sub
    Partial Private Sub OnAutoDetectLanguageChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnAutoDetectLanguageChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._AP_Stories_Module_Channel_Caches = New EntitySet(Of AP_Stories_Module_Channel_Cache)(AddressOf Me.attach_AP_Stories_Module_Channel_Caches, AddressOf Me.detach_AP_Stories_Module_Channel_Caches)
			Me._AP_Stories_Module = CType(Nothing, EntityRef(Of AP_Stories_Module))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChannelId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property ChannelId() As Integer
			Get
				Return Me._ChannelId
			End Get
			Set
				If ((Me._ChannelId = value)  _
							= false) Then
					Me.OnChannelIdChanging(value)
					Me.SendPropertyChanging
					Me._ChannelId = value
					Me.SendPropertyChanged("ChannelId")
					Me.OnChannelIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="SmallInt NOT NULL")>  _
		Public Property Type() As Short
			Get
				Return Me._Type
			End Get
			Set
				If ((Me._Type = value)  _
							= false) Then
					Me.OnTypeChanging(value)
					Me.SendPropertyChanging
					Me._Type = value
					Me.SendPropertyChanged("Type")
					Me.OnTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_URL", DbType:="NVarChar(250)")>  _
		Public Property URL() As String
			Get
				Return Me._URL
			End Get
			Set
				If (String.Equals(Me._URL, value) = false) Then
					Me.OnURLChanging(value)
					Me.SendPropertyChanging
					Me._URL = value
					Me.SendPropertyChanged("URL")
					Me.OnURLChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Weight", DbType:="Float NOT NULL")>  _
		Public Property Weight() As Double
			Get
				Return Me._Weight
			End Get
			Set
				If ((Me._Weight = value)  _
							= false) Then
					Me.OnWeightChanging(value)
					Me.SendPropertyChanging
					Me._Weight = value
					Me.SendPropertyChanged("Weight")
					Me.OnWeightChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Language", DbType:="NVarChar(100)")>  _
		Public Property Language() As String
			Get
				Return Me._Language
			End Get
			Set
				If (String.Equals(Me._Language, value) = false) Then
					Me.OnLanguageChanging(value)
					Me.SendPropertyChanging
					Me._Language = value
					Me.SendPropertyChanged("Language")
					Me.OnLanguageChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChannelTitle", DbType:="NVarChar(154)")>  _
		Public Property ChannelTitle() As String
			Get
				Return Me._ChannelTitle
			End Get
			Set
				If (String.Equals(Me._ChannelTitle, value) = false) Then
					Me.OnChannelTitleChanging(value)
					Me.SendPropertyChanging
					Me._ChannelTitle = value
					Me.SendPropertyChanged("ChannelTitle")
					Me.OnChannelTitleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImageId", DbType:="NVarChar(250)")>  _
		Public Property ImageId() As String
			Get
				Return Me._ImageId
			End Get
			Set
				If (String.Equals(Me._ImageId, value) = false) Then
					Me.OnImageIdChanging(value)
					Me.SendPropertyChanging
					Me._ImageId = value
					Me.SendPropertyChanged("ImageId")
					Me.OnImageIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StoryModuleId", DbType:="Int")>  _
		Public Property StoryModuleId() As System.Nullable(Of Integer)
			Get
				Return Me._StoryModuleId
			End Get
			Set
				If (Me._StoryModuleId.Equals(value) = false) Then
					If Me._AP_Stories_Module.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnStoryModuleIdChanging(value)
					Me.SendPropertyChanging
					Me._StoryModuleId = value
					Me.SendPropertyChanged("StoryModuleId")
					Me.OnStoryModuleIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Longitude", DbType:="Float")>  _
		Public Property Longitude() As System.Nullable(Of Double)
			Get
				Return Me._Longitude
			End Get
			Set
				If (Me._Longitude.Equals(value) = false) Then
					Me.OnLongitudeChanging(value)
					Me.SendPropertyChanging
					Me._Longitude = value
					Me.SendPropertyChanged("Longitude")
					Me.OnLongitudeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Latitude", DbType:="Float")>  _
		Public Property Latitude() As System.Nullable(Of Double)
			Get
				Return Me._Latitude
			End Get
			Set
				If (Me._Latitude.Equals(value) = false) Then
					Me.OnLatitudeChanging(value)
					Me.SendPropertyChanging
					Me._Latitude = value
					Me.SendPropertyChanged("Latitude")
					Me.OnLatitudeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AutoDetectLanguage", DbType:="Bit")>  _
		Public Property AutoDetectLanguage() As System.Nullable(Of Boolean)
			Get
				Return Me._AutoDetectLanguage
			End Get
			Set
				If (Me._AutoDetectLanguage.Equals(value) = false) Then
					Me.OnAutoDetectLanguageChanging(value)
					Me.SendPropertyChanging
					Me._AutoDetectLanguage = value
					Me.SendPropertyChanged("AutoDetectLanguage")
					Me.OnAutoDetectLanguageChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_Stories_Module_Channel_AP_Stories_Module_Channel_Cache", Storage:="_AP_Stories_Module_Channel_Caches", ThisKey:="ChannelId", OtherKey:="ChannelId")>  _
		Public Property AP_Stories_Module_Channel_Caches() As EntitySet(Of AP_Stories_Module_Channel_Cache)
			Get
				Return Me._AP_Stories_Module_Channel_Caches
			End Get
			Set
				Me._AP_Stories_Module_Channel_Caches.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_Stories_Module_AP_Stories_Module_Channel", Storage:="_AP_Stories_Module", ThisKey:="StoryModuleId", OtherKey:="StoryModuleId", IsForeignKey:=true)>  _
		Public Property AP_Stories_Module() As AP_Stories_Module
			Get
				Return Me._AP_Stories_Module.Entity
			End Get
			Set
				Dim previousValue As AP_Stories_Module = Me._AP_Stories_Module.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._AP_Stories_Module.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._AP_Stories_Module.Entity = Nothing
						previousValue.AP_Stories_Module_Channels.Remove(Me)
					End If
					Me._AP_Stories_Module.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.AP_Stories_Module_Channels.Add(Me)
						Me._StoryModuleId = value.StoryModuleId
					Else
						Me._StoryModuleId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("AP_Stories_Module")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_AP_Stories_Module_Channel_Caches(ByVal entity As AP_Stories_Module_Channel_Cache)
			Me.SendPropertyChanging
			entity.AP_Stories_Module_Channel = Me
		End Sub
		
		Private Sub detach_AP_Stories_Module_Channel_Caches(ByVal entity As AP_Stories_Module_Channel_Cache)
			Me.SendPropertyChanging
			entity.AP_Stories_Module_Channel = Nothing
		End Sub
	End Class
End Namespace
