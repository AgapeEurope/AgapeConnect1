'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18033
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection

Namespace Cart
	
	<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="AgapeConnect")>  _
	Partial Public Class CartDataContext
		Inherits System.Data.Linq.DataContext
		
		Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertFR_Donations(instance As FR_Donations)
    End Sub
    Partial Private Sub UpdateFR_Donations(instance As FR_Donations)
    End Sub
    Partial Private Sub DeleteFR_Donations(instance As FR_Donations)
    End Sub
    Partial Private Sub InsertFR_Cart_Content(instance As FR_Cart_Content)
    End Sub
    Partial Private Sub UpdateFR_Cart_Content(instance As FR_Cart_Content)
    End Sub
    Partial Private Sub DeleteFR_Cart_Content(instance As FR_Cart_Content)
    End Sub
    Partial Private Sub InsertFR_Cart_AddressBook(instance As FR_Cart_AddressBook)
    End Sub
    Partial Private Sub UpdateFR_Cart_AddressBook(instance As FR_Cart_AddressBook)
    End Sub
    Partial Private Sub DeleteFR_Cart_AddressBook(instance As FR_Cart_AddressBook)
    End Sub
    Partial Private Sub InsertFR_Cart(instance As FR_Cart)
    End Sub
    Partial Private Sub UpdateFR_Cart(instance As FR_Cart)
    End Sub
    Partial Private Sub DeleteFR_Cart(instance As FR_Cart)
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("SiteSqlServer").ConnectionString, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public ReadOnly Property FR_Donations() As System.Data.Linq.Table(Of FR_Donations)
			Get
				Return Me.GetTable(Of FR_Donations)
			End Get
		End Property
		
		Public ReadOnly Property FR_Cart_Contents() As System.Data.Linq.Table(Of FR_Cart_Content)
			Get
				Return Me.GetTable(Of FR_Cart_Content)
			End Get
		End Property
		
		Public ReadOnly Property FR_Cart_AddressBook() As System.Data.Linq.Table(Of FR_Cart_AddressBook)
			Get
				Return Me.GetTable(Of FR_Cart_AddressBook)
			End Get
		End Property
		
		Public ReadOnly Property FR_Carts() As System.Data.Linq.Table(Of FR_Cart)
			Get
				Return Me.GetTable(Of FR_Cart)
			End Get
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FR_Donations")>  _
	Partial Public Class FR_Donations
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _DonationID As Long
		
		Private _CartContentID As Long
		
		Private _DestinationType As System.Nullable(Of Byte)
		
		Private _DestinationID As System.Nullable(Of Integer)
		
		Private _BatchID As System.Nullable(Of Long)
		
		Private _Comment As String
		
		Private _FR_Cart_Content As EntityRef(Of FR_Cart_Content)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDonationIDChanging(value As Long)
    End Sub
    Partial Private Sub OnDonationIDChanged()
    End Sub
    Partial Private Sub OnCartContentIDChanging(value As Long)
    End Sub
    Partial Private Sub OnCartContentIDChanged()
    End Sub
    Partial Private Sub OnDestinationTypeChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnDestinationTypeChanged()
    End Sub
    Partial Private Sub OnDestinationIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDestinationIDChanged()
    End Sub
    Partial Private Sub OnBatchIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnBatchIDChanged()
    End Sub
    Partial Private Sub OnCommentChanging(value As String)
    End Sub
    Partial Private Sub OnCommentChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._FR_Cart_Content = CType(Nothing, EntityRef(Of FR_Cart_Content))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DonationID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property DonationID() As Long
			Get
				Return Me._DonationID
			End Get
			Set
				If ((Me._DonationID = value)  _
							= false) Then
					Me.OnDonationIDChanging(value)
					Me.SendPropertyChanging
					Me._DonationID = value
					Me.SendPropertyChanged("DonationID")
					Me.OnDonationIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CartContentID", DbType:="BigInt NOT NULL")>  _
		Public Property CartContentID() As Long
			Get
				Return Me._CartContentID
			End Get
			Set
				If ((Me._CartContentID = value)  _
							= false) Then
					If Me._FR_Cart_Content.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnCartContentIDChanging(value)
					Me.SendPropertyChanging
					Me._CartContentID = value
					Me.SendPropertyChanged("CartContentID")
					Me.OnCartContentIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DestinationType", DbType:="TinyInt")>  _
		Public Property DestinationType() As System.Nullable(Of Byte)
			Get
				Return Me._DestinationType
			End Get
			Set
				If (Me._DestinationType.Equals(value) = false) Then
					Me.OnDestinationTypeChanging(value)
					Me.SendPropertyChanging
					Me._DestinationType = value
					Me.SendPropertyChanged("DestinationType")
					Me.OnDestinationTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DestinationID", DbType:="Int")>  _
		Public Property DestinationID() As System.Nullable(Of Integer)
			Get
				Return Me._DestinationID
			End Get
			Set
				If (Me._DestinationID.Equals(value) = false) Then
					Me.OnDestinationIDChanging(value)
					Me.SendPropertyChanging
					Me._DestinationID = value
					Me.SendPropertyChanged("DestinationID")
					Me.OnDestinationIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BatchID", DbType:="BigInt")>  _
		Public Property BatchID() As System.Nullable(Of Long)
			Get
				Return Me._BatchID
			End Get
			Set
				If (Me._BatchID.Equals(value) = false) Then
					Me.OnBatchIDChanging(value)
					Me.SendPropertyChanging
					Me._BatchID = value
					Me.SendPropertyChanged("BatchID")
					Me.OnBatchIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comment", DbType:="nvarchar(max)")>  _
		Public Property Comment() As String
			Get
				Return Me._Comment
			End Get
			Set
				If (String.Equals(Me._Comment, value) = false) Then
					Me.OnCommentChanging(value)
					Me.SendPropertyChanging
					Me._Comment = value
					Me.SendPropertyChanged("Comment")
					Me.OnCommentChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FR_Cart_Content_FR_Donations", Storage:="_FR_Cart_Content", ThisKey:="CartContentID", OtherKey:="CartContentID", IsForeignKey:=true)>  _
		Public Property FR_Cart_Content() As FR_Cart_Content
			Get
				Return Me._FR_Cart_Content.Entity
			End Get
			Set
				Dim previousValue As FR_Cart_Content = Me._FR_Cart_Content.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._FR_Cart_Content.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._FR_Cart_Content.Entity = Nothing
						previousValue.FR_Donations = Nothing
					End If
					Me._FR_Cart_Content.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.FR_Donations = Me
						Me._CartContentID = value.CartContentID
					Else
						Me._CartContentID = CType(Nothing, Long)
					End If
					Me.SendPropertyChanged("FR_Cart_Content")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FR_Cart_Content")>  _
	Partial Public Class FR_Cart_Content
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _CartContentID As Long
		
		Private _CartID As Long
		
		Private _ItemName As String
		
		Private _Quantity As Short
		
		Private _ItemType As System.Nullable(Of Short)
		
		Private _ItemRef As System.Nullable(Of Long)
		
		Private _Cost As Decimal
		
		Private _Tax As System.Nullable(Of Decimal)
		
		Private _DiscountAmt As System.Nullable(Of Decimal)
		
		Private _DiscountPercent As System.Nullable(Of Double)
		
		Private _Dispatchable As Boolean
		
		Private _Details As String
		
		Private _FR_Donations As EntityRef(Of FR_Donations)
		
		Private _FR_Cart As EntityRef(Of FR_Cart)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCartContentIDChanging(value As Long)
    End Sub
    Partial Private Sub OnCartContentIDChanged()
    End Sub
    Partial Private Sub OnCartIDChanging(value As Long)
    End Sub
    Partial Private Sub OnCartIDChanged()
    End Sub
    Partial Private Sub OnItemNameChanging(value As String)
    End Sub
    Partial Private Sub OnItemNameChanged()
    End Sub
    Partial Private Sub OnQuantityChanging(value As Short)
    End Sub
    Partial Private Sub OnQuantityChanged()
    End Sub
    Partial Private Sub OnItemTypeChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnItemTypeChanged()
    End Sub
    Partial Private Sub OnItemRefChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnItemRefChanged()
    End Sub
    Partial Private Sub OnCostChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCostChanged()
    End Sub
    Partial Private Sub OnTaxChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTaxChanged()
    End Sub
    Partial Private Sub OnDiscountAmtChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnDiscountAmtChanged()
    End Sub
    Partial Private Sub OnDiscountPercentChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnDiscountPercentChanged()
    End Sub
    Partial Private Sub OnDispatchableChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDispatchableChanged()
    End Sub
    Partial Private Sub OnDetailsChanging(value As String)
    End Sub
    Partial Private Sub OnDetailsChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._FR_Donations = CType(Nothing, EntityRef(Of FR_Donations))
			Me._FR_Cart = CType(Nothing, EntityRef(Of FR_Cart))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CartContentID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property CartContentID() As Long
			Get
				Return Me._CartContentID
			End Get
			Set
				If ((Me._CartContentID = value)  _
							= false) Then
					Me.OnCartContentIDChanging(value)
					Me.SendPropertyChanging
					Me._CartContentID = value
					Me.SendPropertyChanged("CartContentID")
					Me.OnCartContentIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CartID", DbType:="BigInt NOT NULL")>  _
		Public Property CartID() As Long
			Get
				Return Me._CartID
			End Get
			Set
				If ((Me._CartID = value)  _
							= false) Then
					If Me._FR_Cart.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnCartIDChanging(value)
					Me.SendPropertyChanging
					Me._CartID = value
					Me.SendPropertyChanged("CartID")
					Me.OnCartIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemName", DbType:="NVarChar(200)")>  _
		Public Property ItemName() As String
			Get
				Return Me._ItemName
			End Get
			Set
				If (String.Equals(Me._ItemName, value) = false) Then
					Me.OnItemNameChanging(value)
					Me.SendPropertyChanging
					Me._ItemName = value
					Me.SendPropertyChanged("ItemName")
					Me.OnItemNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Quantity", DbType:="SmallInt NOT NULL")>  _
		Public Property Quantity() As Short
			Get
				Return Me._Quantity
			End Get
			Set
				If ((Me._Quantity = value)  _
							= false) Then
					Me.OnQuantityChanging(value)
					Me.SendPropertyChanging
					Me._Quantity = value
					Me.SendPropertyChanged("Quantity")
					Me.OnQuantityChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemType", DbType:="SmallInt")>  _
		Public Property ItemType() As System.Nullable(Of Short)
			Get
				Return Me._ItemType
			End Get
			Set
				If (Me._ItemType.Equals(value) = false) Then
					Me.OnItemTypeChanging(value)
					Me.SendPropertyChanging
					Me._ItemType = value
					Me.SendPropertyChanged("ItemType")
					Me.OnItemTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemRef", DbType:="BigInt")>  _
		Public Property ItemRef() As System.Nullable(Of Long)
			Get
				Return Me._ItemRef
			End Get
			Set
				If (Me._ItemRef.Equals(value) = false) Then
					Me.OnItemRefChanging(value)
					Me.SendPropertyChanging
					Me._ItemRef = value
					Me.SendPropertyChanged("ItemRef")
					Me.OnItemRefChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cost", DbType:="Money NOT NULL")>  _
		Public Property Cost() As Decimal
			Get
				Return Me._Cost
			End Get
			Set
				If ((Me._Cost = value)  _
							= false) Then
					Me.OnCostChanging(value)
					Me.SendPropertyChanging
					Me._Cost = value
					Me.SendPropertyChanged("Cost")
					Me.OnCostChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tax", DbType:="Money")>  _
		Public Property Tax() As System.Nullable(Of Decimal)
			Get
				Return Me._Tax
			End Get
			Set
				If (Me._Tax.Equals(value) = false) Then
					Me.OnTaxChanging(value)
					Me.SendPropertyChanging
					Me._Tax = value
					Me.SendPropertyChanged("Tax")
					Me.OnTaxChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountAmt", DbType:="Money")>  _
		Public Property DiscountAmt() As System.Nullable(Of Decimal)
			Get
				Return Me._DiscountAmt
			End Get
			Set
				If (Me._DiscountAmt.Equals(value) = false) Then
					Me.OnDiscountAmtChanging(value)
					Me.SendPropertyChanging
					Me._DiscountAmt = value
					Me.SendPropertyChanged("DiscountAmt")
					Me.OnDiscountAmtChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DiscountPercent", DbType:="Float")>  _
		Public Property DiscountPercent() As System.Nullable(Of Double)
			Get
				Return Me._DiscountPercent
			End Get
			Set
				If (Me._DiscountPercent.Equals(value) = false) Then
					Me.OnDiscountPercentChanging(value)
					Me.SendPropertyChanging
					Me._DiscountPercent = value
					Me.SendPropertyChanged("DiscountPercent")
					Me.OnDiscountPercentChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Dispatchable", DbType:="Bit NOT NULL")>  _
		Public Property Dispatchable() As Boolean
			Get
				Return Me._Dispatchable
			End Get
			Set
				If ((Me._Dispatchable = value)  _
							= false) Then
					Me.OnDispatchableChanging(value)
					Me.SendPropertyChanging
					Me._Dispatchable = value
					Me.SendPropertyChanged("Dispatchable")
					Me.OnDispatchableChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Details", DbType:="NVarChar(MAX)")>  _
		Public Property Details() As String
			Get
				Return Me._Details
			End Get
			Set
				If (String.Equals(Me._Details, value) = false) Then
					Me.OnDetailsChanging(value)
					Me.SendPropertyChanging
					Me._Details = value
					Me.SendPropertyChanged("Details")
					Me.OnDetailsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FR_Cart_Content_FR_Donations", Storage:="_FR_Donations", ThisKey:="CartContentID", OtherKey:="CartContentID", IsUnique:=true, IsForeignKey:=false)>  _
		Public Property FR_Donations() As FR_Donations
			Get
				Return Me._FR_Donations.Entity
			End Get
			Set
				Dim previousValue As FR_Donations = Me._FR_Donations.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._FR_Donations.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._FR_Donations.Entity = Nothing
						previousValue.FR_Cart_Content = Nothing
					End If
					Me._FR_Donations.Entity = value
					If (Object.Equals(value, Nothing) = false) Then
						value.FR_Cart_Content = Me
					End If
					Me.SendPropertyChanged("FR_Donations")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FR_Cart_FR_Cart_Content", Storage:="_FR_Cart", ThisKey:="CartID", OtherKey:="CartID", IsForeignKey:=true, DeleteOnNull:=true, DeleteRule:="CASCADE")>  _
		Public Property FR_Cart() As FR_Cart
			Get
				Return Me._FR_Cart.Entity
			End Get
			Set
				Dim previousValue As FR_Cart = Me._FR_Cart.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._FR_Cart.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._FR_Cart.Entity = Nothing
						previousValue.FR_Cart_Contents.Remove(Me)
					End If
					Me._FR_Cart.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.FR_Cart_Contents.Add(Me)
						Me._CartID = value.CartID
					Else
						Me._CartID = CType(Nothing, Long)
					End If
					Me.SendPropertyChanged("FR_Cart")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FR_Cart_AddressBook")>  _
	Partial Public Class FR_Cart_AddressBook
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ShipDetailsID As Long
		
		Private _UserID As Integer
		
		Private _Address1 As String
		
		Private _Address2 As String
		
		Private _City As String
		
		Private _PostalCode As String
		
		Private _Country As String
		
		Private _Phone As String
		
		Private _Mobile As String
		
		Private _Region As String
		
		Private _FullName As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAddressBookIDChanging(value As Long)
    End Sub
    Partial Private Sub OnAddressBookIDChanged()
    End Sub
    Partial Private Sub OnUserIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnAddress1Changing(value As String)
    End Sub
    Partial Private Sub OnAddress1Changed()
    End Sub
    Partial Private Sub OnAddress2Changing(value As String)
    End Sub
    Partial Private Sub OnAddress2Changed()
    End Sub
    Partial Private Sub OnCityChanging(value As String)
    End Sub
    Partial Private Sub OnCityChanged()
    End Sub
    Partial Private Sub OnPostalCodeChanging(value As String)
    End Sub
    Partial Private Sub OnPostalCodeChanged()
    End Sub
    Partial Private Sub OnCountryChanging(value As String)
    End Sub
    Partial Private Sub OnCountryChanged()
    End Sub
    Partial Private Sub OnPhoneChanging(value As String)
    End Sub
    Partial Private Sub OnPhoneChanged()
    End Sub
    Partial Private Sub OnMobileChanging(value As String)
    End Sub
    Partial Private Sub OnMobileChanged()
    End Sub
    Partial Private Sub OnRegionChanging(value As String)
    End Sub
    Partial Private Sub OnRegionChanged()
    End Sub
    Partial Private Sub OnFullNameChanging(value As String)
    End Sub
    Partial Private Sub OnFullNameChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShipDetailsID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property AddressBookID() As Long
			Get
				Return Me._ShipDetailsID
			End Get
			Set
				If ((Me._ShipDetailsID = value)  _
							= false) Then
					Me.OnAddressBookIDChanging(value)
					Me.SendPropertyChanging
					Me._ShipDetailsID = value
					Me.SendPropertyChanged("AddressBookID")
					Me.OnAddressBookIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="Int NOT NULL")>  _
		Public Property UserID() As Integer
			Get
				Return Me._UserID
			End Get
			Set
				If ((Me._UserID = value)  _
							= false) Then
					Me.OnUserIDChanging(value)
					Me.SendPropertyChanging
					Me._UserID = value
					Me.SendPropertyChanged("UserID")
					Me.OnUserIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address1", DbType:="NVarChar(100)")>  _
		Public Property Address1() As String
			Get
				Return Me._Address1
			End Get
			Set
				If (String.Equals(Me._Address1, value) = false) Then
					Me.OnAddress1Changing(value)
					Me.SendPropertyChanging
					Me._Address1 = value
					Me.SendPropertyChanged("Address1")
					Me.OnAddress1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Address2", DbType:="NVarChar(100)")>  _
		Public Property Address2() As String
			Get
				Return Me._Address2
			End Get
			Set
				If (String.Equals(Me._Address2, value) = false) Then
					Me.OnAddress2Changing(value)
					Me.SendPropertyChanging
					Me._Address2 = value
					Me.SendPropertyChanged("Address2")
					Me.OnAddress2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_City", DbType:="NVarChar(50)")>  _
		Public Property City() As String
			Get
				Return Me._City
			End Get
			Set
				If (String.Equals(Me._City, value) = false) Then
					Me.OnCityChanging(value)
					Me.SendPropertyChanging
					Me._City = value
					Me.SendPropertyChanged("City")
					Me.OnCityChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PostalCode", DbType:="NVarChar(20)")>  _
		Public Property PostalCode() As String
			Get
				Return Me._PostalCode
			End Get
			Set
				If (String.Equals(Me._PostalCode, value) = false) Then
					Me.OnPostalCodeChanging(value)
					Me.SendPropertyChanging
					Me._PostalCode = value
					Me.SendPropertyChanged("PostalCode")
					Me.OnPostalCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Country", DbType:="NVarChar(50)")>  _
		Public Property Country() As String
			Get
				Return Me._Country
			End Get
			Set
				If (String.Equals(Me._Country, value) = false) Then
					Me.OnCountryChanging(value)
					Me.SendPropertyChanging
					Me._Country = value
					Me.SendPropertyChanged("Country")
					Me.OnCountryChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Phone", DbType:="VarChar(50)")>  _
		Public Property Phone() As String
			Get
				Return Me._Phone
			End Get
			Set
				If (String.Equals(Me._Phone, value) = false) Then
					Me.OnPhoneChanging(value)
					Me.SendPropertyChanging
					Me._Phone = value
					Me.SendPropertyChanged("Phone")
					Me.OnPhoneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mobile", DbType:="VarChar(50)")>  _
		Public Property Mobile() As String
			Get
				Return Me._Mobile
			End Get
			Set
				If (String.Equals(Me._Mobile, value) = false) Then
					Me.OnMobileChanging(value)
					Me.SendPropertyChanging
					Me._Mobile = value
					Me.SendPropertyChanged("Mobile")
					Me.OnMobileChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Region", DbType:="NVarChar(50)")>  _
		Public Property Region() As String
			Get
				Return Me._Region
			End Get
			Set
				If (String.Equals(Me._Region, value) = false) Then
					Me.OnRegionChanging(value)
					Me.SendPropertyChanging
					Me._Region = value
					Me.SendPropertyChanged("Region")
					Me.OnRegionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FullName", CanBeNull:=false)>  _
		Public Property FullName() As String
			Get
				Return Me._FullName
			End Get
			Set
				If (String.Equals(Me._FullName, value) = false) Then
					Me.OnFullNameChanging(value)
					Me.SendPropertyChanging
					Me._FullName = value
					Me.SendPropertyChanged("FullName")
					Me.OnFullNameChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FR_Cart")>  _
	Partial Public Class FR_Cart
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _CartID As Long
		
		Private _UserID As System.Nullable(Of Integer)
		
		Private _AnonID As String
		
		Private _PayMethod As System.Nullable(Of Byte)
		
		Private _TransLog As String
		
		Private _MerchantFee As System.Nullable(Of Decimal)
		
		Private _CreditFee As System.Nullable(Of Decimal)
		
		Private _Date As System.Nullable(Of Date)
		
		Private _UserComments As String
		
		Private _StaffComments As String
		
		Private _OrderState As System.Nullable(Of Byte)
		
		Private _OrderStateDescription As String
		
		Private _ShipCost As System.Nullable(Of Decimal)
		
		Private _DeliveryInst As String
		
		Private _PortalID As System.Nullable(Of Integer)
		
		Private _ShipAddressBookID As System.Nullable(Of Long)
		
		Private _ShipCompany As String
		
		Private _ShipReference As String
		
		Private _CreditNote As System.Nullable(Of Boolean)
		
		Private _ShipVAT As System.Nullable(Of Decimal)
		
		Private _BillAddressBookID As System.Nullable(Of Long)
		
		Private _TransactionId As String
		
		Private _FR_Cart_Contents As EntitySet(Of FR_Cart_Content)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCartIDChanging(value As Long)
    End Sub
    Partial Private Sub OnCartIDChanged()
    End Sub
    Partial Private Sub OnUserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnAnonIDChanging(value As String)
    End Sub
    Partial Private Sub OnAnonIDChanged()
    End Sub
    Partial Private Sub OnPayMethodChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnPayMethodChanged()
    End Sub
    Partial Private Sub OnTransLogChanging(value As String)
    End Sub
    Partial Private Sub OnTransLogChanged()
    End Sub
    Partial Private Sub OnMerchantFeeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMerchantFeeChanged()
    End Sub
    Partial Private Sub OnCreditFeeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCreditFeeChanged()
    End Sub
    Partial Private Sub OnDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateChanged()
    End Sub
    Partial Private Sub OnUserCommentsChanging(value As String)
    End Sub
    Partial Private Sub OnUserCommentsChanged()
    End Sub
    Partial Private Sub OnStaffCommentsChanging(value As String)
    End Sub
    Partial Private Sub OnStaffCommentsChanged()
    End Sub
    Partial Private Sub OnOrderStateChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnOrderStateChanged()
    End Sub
    Partial Private Sub OnOrderStateDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnOrderStateDescriptionChanged()
    End Sub
    Partial Private Sub OnShipCostChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnShipCostChanged()
    End Sub
    Partial Private Sub OnDeliveryInstChanging(value As String)
    End Sub
    Partial Private Sub OnDeliveryInstChanged()
    End Sub
    Partial Private Sub OnPortalIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIDChanged()
    End Sub
    Partial Private Sub OnShipAddressBookIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnShipAddressBookIDChanged()
    End Sub
    Partial Private Sub OnShipCompanyChanging(value As String)
    End Sub
    Partial Private Sub OnShipCompanyChanged()
    End Sub
    Partial Private Sub OnShipReferenceChanging(value As String)
    End Sub
    Partial Private Sub OnShipReferenceChanged()
    End Sub
    Partial Private Sub OnCreditNoteChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCreditNoteChanged()
    End Sub
    Partial Private Sub OnShipVATChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnShipVATChanged()
    End Sub
    Partial Private Sub OnBillAddressBookIDChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnBillAddressBookIDChanged()
    End Sub
    Partial Private Sub OnTransactionIdChanging(value As String)
    End Sub
    Partial Private Sub OnTransactionIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._FR_Cart_Contents = New EntitySet(Of FR_Cart_Content)(AddressOf Me.attach_FR_Cart_Contents, AddressOf Me.detach_FR_Cart_Contents)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CartID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property CartID() As Long
			Get
				Return Me._CartID
			End Get
			Set
				If ((Me._CartID = value)  _
							= false) Then
					Me.OnCartIDChanging(value)
					Me.SendPropertyChanging
					Me._CartID = value
					Me.SendPropertyChanged("CartID")
					Me.OnCartIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="Int")>  _
		Public Property UserID() As System.Nullable(Of Integer)
			Get
				Return Me._UserID
			End Get
			Set
				If (Me._UserID.Equals(value) = false) Then
					Me.OnUserIDChanging(value)
					Me.SendPropertyChanging
					Me._UserID = value
					Me.SendPropertyChanged("UserID")
					Me.OnUserIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnonID", DbType:="VarChar(300)")>  _
		Public Property AnonID() As String
			Get
				Return Me._AnonID
			End Get
			Set
				If (String.Equals(Me._AnonID, value) = false) Then
					Me.OnAnonIDChanging(value)
					Me.SendPropertyChanging
					Me._AnonID = value
					Me.SendPropertyChanged("AnonID")
					Me.OnAnonIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayMethod", DbType:="TinyInt")>  _
		Public Property PayMethod() As System.Nullable(Of Byte)
			Get
				Return Me._PayMethod
			End Get
			Set
				If (Me._PayMethod.Equals(value) = false) Then
					Me.OnPayMethodChanging(value)
					Me.SendPropertyChanging
					Me._PayMethod = value
					Me.SendPropertyChanged("PayMethod")
					Me.OnPayMethodChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransLog", DbType:="NVarChar(MAX)")>  _
		Public Property TransLog() As String
			Get
				Return Me._TransLog
			End Get
			Set
				If (String.Equals(Me._TransLog, value) = false) Then
					Me.OnTransLogChanging(value)
					Me.SendPropertyChanging
					Me._TransLog = value
					Me.SendPropertyChanged("TransLog")
					Me.OnTransLogChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MerchantFee", DbType:="Money")>  _
		Public Property MerchantFee() As System.Nullable(Of Decimal)
			Get
				Return Me._MerchantFee
			End Get
			Set
				If (Me._MerchantFee.Equals(value) = false) Then
					Me.OnMerchantFeeChanging(value)
					Me.SendPropertyChanging
					Me._MerchantFee = value
					Me.SendPropertyChanged("MerchantFee")
					Me.OnMerchantFeeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreditFee", DbType:="Money")>  _
		Public Property CreditFee() As System.Nullable(Of Decimal)
			Get
				Return Me._CreditFee
			End Get
			Set
				If (Me._CreditFee.Equals(value) = false) Then
					Me.OnCreditFeeChanging(value)
					Me.SendPropertyChanging
					Me._CreditFee = value
					Me.SendPropertyChanged("CreditFee")
					Me.OnCreditFeeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Date", Storage:="_Date", DbType:="DateTime")>  _
		Public Property [Date]() As System.Nullable(Of Date)
			Get
				Return Me._Date
			End Get
			Set
				If (Me._Date.Equals(value) = false) Then
					Me.OnDateChanging(value)
					Me.SendPropertyChanging
					Me._Date = value
					Me.SendPropertyChanged("[Date]")
					Me.OnDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserComments", DbType:="NVarChar(MAX)")>  _
		Public Property UserComments() As String
			Get
				Return Me._UserComments
			End Get
			Set
				If (String.Equals(Me._UserComments, value) = false) Then
					Me.OnUserCommentsChanging(value)
					Me.SendPropertyChanging
					Me._UserComments = value
					Me.SendPropertyChanged("UserComments")
					Me.OnUserCommentsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffComments", DbType:="NVarChar(MAX)")>  _
		Public Property StaffComments() As String
			Get
				Return Me._StaffComments
			End Get
			Set
				If (String.Equals(Me._StaffComments, value) = false) Then
					Me.OnStaffCommentsChanging(value)
					Me.SendPropertyChanging
					Me._StaffComments = value
					Me.SendPropertyChanged("StaffComments")
					Me.OnStaffCommentsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderState", DbType:="TinyInt")>  _
		Public Property OrderState() As System.Nullable(Of Byte)
			Get
				Return Me._OrderState
			End Get
			Set
				If (Me._OrderState.Equals(value) = false) Then
					Me.OnOrderStateChanging(value)
					Me.SendPropertyChanging
					Me._OrderState = value
					Me.SendPropertyChanged("OrderState")
					Me.OnOrderStateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OrderStateDescription", DbType:="NVarChar(MAX)")>  _
		Public Property OrderStateDescription() As String
			Get
				Return Me._OrderStateDescription
			End Get
			Set
				If (String.Equals(Me._OrderStateDescription, value) = false) Then
					Me.OnOrderStateDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._OrderStateDescription = value
					Me.SendPropertyChanged("OrderStateDescription")
					Me.OnOrderStateDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShipCost", DbType:="Money")>  _
		Public Property ShipCost() As System.Nullable(Of Decimal)
			Get
				Return Me._ShipCost
			End Get
			Set
				If (Me._ShipCost.Equals(value) = false) Then
					Me.OnShipCostChanging(value)
					Me.SendPropertyChanging
					Me._ShipCost = value
					Me.SendPropertyChanged("ShipCost")
					Me.OnShipCostChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DeliveryInst", DbType:="NVarChar(MAX)")>  _
		Public Property DeliveryInst() As String
			Get
				Return Me._DeliveryInst
			End Get
			Set
				If (String.Equals(Me._DeliveryInst, value) = false) Then
					Me.OnDeliveryInstChanging(value)
					Me.SendPropertyChanging
					Me._DeliveryInst = value
					Me.SendPropertyChanged("DeliveryInst")
					Me.OnDeliveryInstChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalID", DbType:="Int")>  _
		Public Property PortalID() As System.Nullable(Of Integer)
			Get
				Return Me._PortalID
			End Get
			Set
				If (Me._PortalID.Equals(value) = false) Then
					Me.OnPortalIDChanging(value)
					Me.SendPropertyChanging
					Me._PortalID = value
					Me.SendPropertyChanged("PortalID")
					Me.OnPortalIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShipAddressBookID", DbType:="BigInt")>  _
		Public Property ShipAddressBookID() As System.Nullable(Of Long)
			Get
				Return Me._ShipAddressBookID
			End Get
			Set
				If (Me._ShipAddressBookID.Equals(value) = false) Then
					Me.OnShipAddressBookIDChanging(value)
					Me.SendPropertyChanging
					Me._ShipAddressBookID = value
					Me.SendPropertyChanged("ShipAddressBookID")
					Me.OnShipAddressBookIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShipCompany", DbType:="NVarChar(50)")>  _
		Public Property ShipCompany() As String
			Get
				Return Me._ShipCompany
			End Get
			Set
				If (String.Equals(Me._ShipCompany, value) = false) Then
					Me.OnShipCompanyChanging(value)
					Me.SendPropertyChanging
					Me._ShipCompany = value
					Me.SendPropertyChanged("ShipCompany")
					Me.OnShipCompanyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShipReference", DbType:="NVarChar(50)")>  _
		Public Property ShipReference() As String
			Get
				Return Me._ShipReference
			End Get
			Set
				If (String.Equals(Me._ShipReference, value) = false) Then
					Me.OnShipReferenceChanging(value)
					Me.SendPropertyChanging
					Me._ShipReference = value
					Me.SendPropertyChanged("ShipReference")
					Me.OnShipReferenceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreditNote", DbType:="Bit")>  _
		Public Property CreditNote() As System.Nullable(Of Boolean)
			Get
				Return Me._CreditNote
			End Get
			Set
				If (Me._CreditNote.Equals(value) = false) Then
					Me.OnCreditNoteChanging(value)
					Me.SendPropertyChanging
					Me._CreditNote = value
					Me.SendPropertyChanged("CreditNote")
					Me.OnCreditNoteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShipVAT", DbType:="Money")>  _
		Public Property ShipVAT() As System.Nullable(Of Decimal)
			Get
				Return Me._ShipVAT
			End Get
			Set
				If (Me._ShipVAT.Equals(value) = false) Then
					Me.OnShipVATChanging(value)
					Me.SendPropertyChanging
					Me._ShipVAT = value
					Me.SendPropertyChanged("ShipVAT")
					Me.OnShipVATChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillAddressBookID", DbType:="BigInt")>  _
		Public Property BillAddressBookID() As System.Nullable(Of Long)
			Get
				Return Me._BillAddressBookID
			End Get
			Set
				If (Me._BillAddressBookID.Equals(value) = false) Then
					Me.OnBillAddressBookIDChanging(value)
					Me.SendPropertyChanging
					Me._BillAddressBookID = value
					Me.SendPropertyChanged("BillAddressBookID")
					Me.OnBillAddressBookIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransactionId", DbType:="NVarChar(250)")>  _
		Public Property TransactionId() As String
			Get
				Return Me._TransactionId
			End Get
			Set
				If (String.Equals(Me._TransactionId, value) = false) Then
					Me.OnTransactionIdChanging(value)
					Me.SendPropertyChanging
					Me._TransactionId = value
					Me.SendPropertyChanged("TransactionId")
					Me.OnTransactionIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FR_Cart_FR_Cart_Content", Storage:="_FR_Cart_Contents", ThisKey:="CartID", OtherKey:="CartID")>  _
		Public Property FR_Cart_Contents() As EntitySet(Of FR_Cart_Content)
			Get
				Return Me._FR_Cart_Contents
			End Get
			Set
				Me._FR_Cart_Contents.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_FR_Cart_Contents(ByVal entity As FR_Cart_Content)
			Me.SendPropertyChanging
			entity.FR_Cart = Me
		End Sub
		
		Private Sub detach_FR_Cart_Contents(ByVal entity As FR_Cart_Content)
			Me.SendPropertyChanging
			entity.FR_Cart = Nothing
		End Sub
	End Class
End Namespace
