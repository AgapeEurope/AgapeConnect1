'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.17929
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection
Imports System.Runtime.Serialization

Namespace UK.AgapeStaff
	
	<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="agapeuk")>  _
	Partial Public Class AgapeStaffDataContext
		Inherits System.Data.Linq.DataContext
		
		Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertAgape_Staff_Budget_Global(instance As Agape_Staff_Budget_Global)
    End Sub
    Partial Private Sub UpdateAgape_Staff_Budget_Global(instance As Agape_Staff_Budget_Global)
    End Sub
    Partial Private Sub DeleteAgape_Staff_Budget_Global(instance As Agape_Staff_Budget_Global)
    End Sub
    Partial Private Sub InsertAgape_Staff_RepRel(instance As Agape_Staff_RepRel)
    End Sub
    Partial Private Sub UpdateAgape_Staff_RepRel(instance As Agape_Staff_RepRel)
    End Sub
    Partial Private Sub DeleteAgape_Staff_RepRel(instance As Agape_Staff_RepRel)
    End Sub
    Partial Private Sub InsertUser(instance As User)
    End Sub
    Partial Private Sub UpdateUser(instance As User)
    End Sub
    Partial Private Sub DeleteUser(instance As User)
    End Sub
    Partial Private Sub InsertAgape_Staff_SupSup(instance As Agape_Staff_SupSup)
    End Sub
    Partial Private Sub UpdateAgape_Staff_SupSup(instance As Agape_Staff_SupSup)
    End Sub
    Partial Private Sub DeleteAgape_Staff_SupSup(instance As Agape_Staff_SupSup)
    End Sub
    Partial Private Sub InsertAgape_Staff_Children(instance As Agape_Staff_Children)
    End Sub
    Partial Private Sub UpdateAgape_Staff_Children(instance As Agape_Staff_Children)
    End Sub
    Partial Private Sub DeleteAgape_Staff_Children(instance As Agape_Staff_Children)
    End Sub
    Partial Private Sub InsertAgape_Staff_JobTitle(instance As Agape_Staff_JobTitle)
    End Sub
    Partial Private Sub UpdateAgape_Staff_JobTitle(instance As Agape_Staff_JobTitle)
    End Sub
    Partial Private Sub DeleteAgape_Staff_JobTitle(instance As Agape_Staff_JobTitle)
    End Sub
    Partial Private Sub InsertAgape_Main_ProfileImage(instance As Agape_Main_ProfileImage)
    End Sub
    Partial Private Sub UpdateAgape_Main_ProfileImage(instance As Agape_Main_ProfileImage)
    End Sub
    Partial Private Sub DeleteAgape_Main_ProfileImage(instance As Agape_Main_ProfileImage)
    End Sub
    Partial Private Sub InsertAgape_Staff_Prayer(instance As Agape_Staff_Prayer)
    End Sub
    Partial Private Sub UpdateAgape_Staff_Prayer(instance As Agape_Staff_Prayer)
    End Sub
    Partial Private Sub DeleteAgape_Staff_Prayer(instance As Agape_Staff_Prayer)
    End Sub
    Partial Private Sub InsertAgape_GCX_Proxy(instance As Agape_GCX_Proxy)
    End Sub
    Partial Private Sub UpdateAgape_GCX_Proxy(instance As Agape_GCX_Proxy)
    End Sub
    Partial Private Sub DeleteAgape_GCX_Proxy(instance As Agape_GCX_Proxy)
    End Sub
    Partial Private Sub InsertAgape_Main_Give_PPlan(instance As Agape_Main_Give_PPlan)
    End Sub
    Partial Private Sub UpdateAgape_Main_Give_PPlan(instance As Agape_Main_Give_PPlan)
    End Sub
    Partial Private Sub DeleteAgape_Main_Give_PPlan(instance As Agape_Main_Give_PPlan)
    End Sub
    Partial Private Sub InsertAgape_Staff_Rmb_Status(instance As Agape_Staff_Rmb_Status)
    End Sub
    Partial Private Sub UpdateAgape_Staff_Rmb_Status(instance As Agape_Staff_Rmb_Status)
    End Sub
    Partial Private Sub DeleteAgape_Staff_Rmb_Status(instance As Agape_Staff_Rmb_Status)
    End Sub
    Partial Private Sub InsertAgape_Staff_RmbLineAddStaff(instance As Agape_Staff_RmbLineAddStaff)
    End Sub
    Partial Private Sub UpdateAgape_Staff_RmbLineAddStaff(instance As Agape_Staff_RmbLineAddStaff)
    End Sub
    Partial Private Sub DeleteAgape_Staff_RmbLineAddStaff(instance As Agape_Staff_RmbLineAddStaff)
    End Sub
    Partial Private Sub InsertAgape_Staff_RmbLineType(instance As Agape_Staff_RmbLineType)
    End Sub
    Partial Private Sub UpdateAgape_Staff_RmbLineType(instance As Agape_Staff_RmbLineType)
    End Sub
    Partial Private Sub DeleteAgape_Staff_RmbLineType(instance As Agape_Staff_RmbLineType)
    End Sub
    Partial Private Sub InsertAgape_Staff_Finance(instance As Agape_Staff_Finance)
    End Sub
    Partial Private Sub UpdateAgape_Staff_Finance(instance As Agape_Staff_Finance)
    End Sub
    Partial Private Sub DeleteAgape_Staff_Finance(instance As Agape_Staff_Finance)
    End Sub
    Partial Private Sub InsertAgape_Staff_Rmb(instance As Agape_Staff_Rmb)
    End Sub
    Partial Private Sub UpdateAgape_Staff_Rmb(instance As Agape_Staff_Rmb)
    End Sub
    Partial Private Sub DeleteAgape_Staff_Rmb(instance As Agape_Staff_Rmb)
    End Sub
    Partial Private Sub InsertAgape_Main_AvailableCostCentre(instance As Agape_Main_AvailableCostCentre)
    End Sub
    Partial Private Sub UpdateAgape_Main_AvailableCostCentre(instance As Agape_Main_AvailableCostCentre)
    End Sub
    Partial Private Sub DeleteAgape_Main_AvailableCostCentre(instance As Agape_Main_AvailableCostCentre)
    End Sub
    Partial Private Sub InsertAgape_Main_Projectee(instance As Agape_Main_Projectee)
    End Sub
    Partial Private Sub UpdateAgape_Main_Projectee(instance As Agape_Main_Projectee)
    End Sub
    Partial Private Sub DeleteAgape_Main_Projectee(instance As Agape_Main_Projectee)
    End Sub
    Partial Private Sub InsertAgape_Main_ProjectDonation(instance As Agape_Main_ProjectDonation)
    End Sub
    Partial Private Sub UpdateAgape_Main_ProjectDonation(instance As Agape_Main_ProjectDonation)
    End Sub
    Partial Private Sub DeleteAgape_Main_ProjectDonation(instance As Agape_Main_ProjectDonation)
    End Sub
    Partial Private Sub InsertAgape_Main_Project(instance As Agape_Main_Project)
    End Sub
    Partial Private Sub UpdateAgape_Main_Project(instance As Agape_Main_Project)
    End Sub
    Partial Private Sub DeleteAgape_Main_Project(instance As Agape_Main_Project)
    End Sub
    Partial Private Sub InsertAgape_Main_Give_SO(instance As Agape_Main_Give_SO)
    End Sub
    Partial Private Sub UpdateAgape_Main_Give_SO(instance As Agape_Main_Give_SO)
    End Sub
    Partial Private Sub DeleteAgape_Main_Give_SO(instance As Agape_Main_Give_SO)
    End Sub
    Partial Private Sub InsertTabModule(instance As TabModule)
    End Sub
    Partial Private Sub UpdateTabModule(instance As TabModule)
    End Sub
    Partial Private Sub DeleteTabModule(instance As TabModule)
    End Sub
    Partial Private Sub InsertModuleControl(instance As ModuleControl)
    End Sub
    Partial Private Sub UpdateModuleControl(instance As ModuleControl)
    End Sub
    Partial Private Sub DeleteModuleControl(instance As ModuleControl)
    End Sub
    Partial Private Sub InsertModule(instance As [Module])
    End Sub
    Partial Private Sub UpdateModule(instance As [Module])
    End Sub
    Partial Private Sub DeleteModule(instance As [Module])
    End Sub
    Partial Private Sub InsertTabModuleSetting(instance As TabModuleSetting)
    End Sub
    Partial Private Sub UpdateTabModuleSetting(instance As TabModuleSetting)
    End Sub
    Partial Private Sub DeleteTabModuleSetting(instance As TabModuleSetting)
    End Sub
    Partial Private Sub InsertAgape_Main_AdvanceRequest(instance As Agape_Main_AdvanceRequest)
    End Sub
    Partial Private Sub UpdateAgape_Main_AdvanceRequest(instance As Agape_Main_AdvanceRequest)
    End Sub
    Partial Private Sub DeleteAgape_Main_AdvanceRequest(instance As Agape_Main_AdvanceRequest)
    End Sub
    Partial Private Sub InsertAgape_Staff_Budgets_BudgetConference(instance As Agape_Staff_Budgets_BudgetConference)
    End Sub
    Partial Private Sub UpdateAgape_Staff_Budgets_BudgetConference(instance As Agape_Staff_Budgets_BudgetConference)
    End Sub
    Partial Private Sub DeleteAgape_Staff_Budgets_BudgetConference(instance As Agape_Staff_Budgets_BudgetConference)
    End Sub
    Partial Private Sub InsertAgape_Staff_Budget(instance As Agape_Staff_Budget)
    End Sub
    Partial Private Sub UpdateAgape_Staff_Budget(instance As Agape_Staff_Budget)
    End Sub
    Partial Private Sub DeleteAgape_Staff_Budget(instance As Agape_Staff_Budget)
    End Sub
    Partial Private Sub InsertAgape_Main_Project_Description(instance As Agape_Main_Project_Description)
    End Sub
    Partial Private Sub UpdateAgape_Main_Project_Description(instance As Agape_Main_Project_Description)
    End Sub
    Partial Private Sub DeleteAgape_Main_Project_Description(instance As Agape_Main_Project_Description)
    End Sub
    Partial Private Sub InsertAgape_Staff_RmbLine(instance As Agape_Staff_RmbLine)
    End Sub
    Partial Private Sub UpdateAgape_Staff_RmbLine(instance As Agape_Staff_RmbLine)
    End Sub
    Partial Private Sub DeleteAgape_Staff_RmbLine(instance As Agape_Staff_RmbLine)
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("SiteSqlServer").ConnectionString, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public ReadOnly Property Agape_Staff_Budget_Globals() As System.Data.Linq.Table(Of Agape_Staff_Budget_Global)
			Get
				Return Me.GetTable(Of Agape_Staff_Budget_Global)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Staff_RepRels() As System.Data.Linq.Table(Of Agape_Staff_RepRel)
			Get
				Return Me.GetTable(Of Agape_Staff_RepRel)
			End Get
		End Property
		
		Public ReadOnly Property Users() As System.Data.Linq.Table(Of User)
			Get
				Return Me.GetTable(Of User)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Staff_SupSups() As System.Data.Linq.Table(Of Agape_Staff_SupSup)
			Get
				Return Me.GetTable(Of Agape_Staff_SupSup)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Staff_Childrens() As System.Data.Linq.Table(Of Agape_Staff_Children)
			Get
				Return Me.GetTable(Of Agape_Staff_Children)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Staff_JobTitles() As System.Data.Linq.Table(Of Agape_Staff_JobTitle)
			Get
				Return Me.GetTable(Of Agape_Staff_JobTitle)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Main_ProfileImages() As System.Data.Linq.Table(Of Agape_Main_ProfileImage)
			Get
				Return Me.GetTable(Of Agape_Main_ProfileImage)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Staff_Prayers() As System.Data.Linq.Table(Of Agape_Staff_Prayer)
			Get
				Return Me.GetTable(Of Agape_Staff_Prayer)
			End Get
		End Property
		
		Public ReadOnly Property Agape_GCX_Proxies() As System.Data.Linq.Table(Of Agape_GCX_Proxy)
			Get
				Return Me.GetTable(Of Agape_GCX_Proxy)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Main_Give_PPlans() As System.Data.Linq.Table(Of Agape_Main_Give_PPlan)
			Get
				Return Me.GetTable(Of Agape_Main_Give_PPlan)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Staff_Rmb_Status() As System.Data.Linq.Table(Of Agape_Staff_Rmb_Status)
			Get
				Return Me.GetTable(Of Agape_Staff_Rmb_Status)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Staff_RmbLineAddStaffs() As System.Data.Linq.Table(Of Agape_Staff_RmbLineAddStaff)
			Get
				Return Me.GetTable(Of Agape_Staff_RmbLineAddStaff)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Staff_RmbLineTypes() As System.Data.Linq.Table(Of Agape_Staff_RmbLineType)
			Get
				Return Me.GetTable(Of Agape_Staff_RmbLineType)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Staff_Finances() As System.Data.Linq.Table(Of Agape_Staff_Finance)
			Get
				Return Me.GetTable(Of Agape_Staff_Finance)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Staff_Rmbs() As System.Data.Linq.Table(Of Agape_Staff_Rmb)
			Get
				Return Me.GetTable(Of Agape_Staff_Rmb)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Main_AvailableCostCentres() As System.Data.Linq.Table(Of Agape_Main_AvailableCostCentre)
			Get
				Return Me.GetTable(Of Agape_Main_AvailableCostCentre)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Main_Projectees() As System.Data.Linq.Table(Of Agape_Main_Projectee)
			Get
				Return Me.GetTable(Of Agape_Main_Projectee)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Main_ProjectDonations() As System.Data.Linq.Table(Of Agape_Main_ProjectDonation)
			Get
				Return Me.GetTable(Of Agape_Main_ProjectDonation)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Main_Projects() As System.Data.Linq.Table(Of Agape_Main_Project)
			Get
				Return Me.GetTable(Of Agape_Main_Project)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Main_Give_SOs() As System.Data.Linq.Table(Of Agape_Main_Give_SO)
			Get
				Return Me.GetTable(Of Agape_Main_Give_SO)
			End Get
		End Property
		
		Public ReadOnly Property TabModules() As System.Data.Linq.Table(Of TabModule)
			Get
				Return Me.GetTable(Of TabModule)
			End Get
		End Property
		
		Public ReadOnly Property ModuleControls() As System.Data.Linq.Table(Of ModuleControl)
			Get
				Return Me.GetTable(Of ModuleControl)
			End Get
		End Property
		
		Public ReadOnly Property Modules() As System.Data.Linq.Table(Of [Module])
			Get
				Return Me.GetTable(Of [Module])
			End Get
		End Property
		
		Public ReadOnly Property TabModuleSettings() As System.Data.Linq.Table(Of TabModuleSetting)
			Get
				Return Me.GetTable(Of TabModuleSetting)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Main_AdvanceRequests() As System.Data.Linq.Table(Of Agape_Main_AdvanceRequest)
			Get
				Return Me.GetTable(Of Agape_Main_AdvanceRequest)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Staff_Budgets_BudgetConferences() As System.Data.Linq.Table(Of Agape_Staff_Budgets_BudgetConference)
			Get
				Return Me.GetTable(Of Agape_Staff_Budgets_BudgetConference)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Staff_Budgets() As System.Data.Linq.Table(Of Agape_Staff_Budget)
			Get
				Return Me.GetTable(Of Agape_Staff_Budget)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Main_Project_Descriptions() As System.Data.Linq.Table(Of Agape_Main_Project_Description)
			Get
				Return Me.GetTable(Of Agape_Main_Project_Description)
			End Get
		End Property
		
		Public ReadOnly Property Agape_Staff_RmbLines() As System.Data.Linq.Table(Of Agape_Staff_RmbLine)
			Get
				Return Me.GetTable(Of Agape_Staff_RmbLine)
			End Get
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Staff_Budget_Global"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Staff_Budget_Global
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _BudgetGlobalID As Integer
		
		Private _Basic As System.Nullable(Of Decimal)
		
		Private _AgeFactor As System.Nullable(Of Double)
		
		Private _NonCTCFactor As System.Nullable(Of Decimal)
		
		Private _CopiesTo As String
		
		Private _ConferenceText As String
		
		Private _PrefixText As String
		
		Private _SuffixText As String
		
		Private _PortalId As System.Nullable(Of Integer)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBudgetGlobalIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnBudgetGlobalIDChanged()
    End Sub
    Partial Private Sub OnBasicChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBasicChanged()
    End Sub
    Partial Private Sub OnAgeFactorChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnAgeFactorChanged()
    End Sub
    Partial Private Sub OnNonCTCFactorChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNonCTCFactorChanged()
    End Sub
    Partial Private Sub OnCopiesToChanging(value As String)
    End Sub
    Partial Private Sub OnCopiesToChanged()
    End Sub
    Partial Private Sub OnConferenceTextChanging(value As String)
    End Sub
    Partial Private Sub OnConferenceTextChanged()
    End Sub
    Partial Private Sub OnPrefixTextChanging(value As String)
    End Sub
    Partial Private Sub OnPrefixTextChanged()
    End Sub
    Partial Private Sub OnSuffixTextChanging(value As String)
    End Sub
    Partial Private Sub OnSuffixTextChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BudgetGlobalID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property BudgetGlobalID() As Integer
			Get
				Return Me._BudgetGlobalID
			End Get
			Set
				If ((Me._BudgetGlobalID = value)  _
							= false) Then
					Me.OnBudgetGlobalIDChanging(value)
					Me.SendPropertyChanging
					Me._BudgetGlobalID = value
					Me.SendPropertyChanged("BudgetGlobalID")
					Me.OnBudgetGlobalIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Basic", DbType:="SmallMoney"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Basic() As System.Nullable(Of Decimal)
			Get
				Return Me._Basic
			End Get
			Set
				If (Me._Basic.Equals(value) = false) Then
					Me.OnBasicChanging(value)
					Me.SendPropertyChanging
					Me._Basic = value
					Me.SendPropertyChanged("Basic")
					Me.OnBasicChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AgeFactor", DbType:="Float"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property AgeFactor() As System.Nullable(Of Double)
			Get
				Return Me._AgeFactor
			End Get
			Set
				If (Me._AgeFactor.Equals(value) = false) Then
					Me.OnAgeFactorChanging(value)
					Me.SendPropertyChanging
					Me._AgeFactor = value
					Me.SendPropertyChanged("AgeFactor")
					Me.OnAgeFactorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NonCTCFactor", DbType:="SmallMoney"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property NonCTCFactor() As System.Nullable(Of Decimal)
			Get
				Return Me._NonCTCFactor
			End Get
			Set
				If (Me._NonCTCFactor.Equals(value) = false) Then
					Me.OnNonCTCFactorChanging(value)
					Me.SendPropertyChanging
					Me._NonCTCFactor = value
					Me.SendPropertyChanged("NonCTCFactor")
					Me.OnNonCTCFactorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CopiesTo", DbType:="NVarChar(80)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property CopiesTo() As String
			Get
				Return Me._CopiesTo
			End Get
			Set
				If (String.Equals(Me._CopiesTo, value) = false) Then
					Me.OnCopiesToChanging(value)
					Me.SendPropertyChanging
					Me._CopiesTo = value
					Me.SendPropertyChanged("CopiesTo")
					Me.OnCopiesToChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ConferenceText", DbType:="NVarChar(MAX)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property ConferenceText() As String
			Get
				Return Me._ConferenceText
			End Get
			Set
				If (String.Equals(Me._ConferenceText, value) = false) Then
					Me.OnConferenceTextChanging(value)
					Me.SendPropertyChanging
					Me._ConferenceText = value
					Me.SendPropertyChanged("ConferenceText")
					Me.OnConferenceTextChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrefixText", DbType:="NVarChar(MAX)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property PrefixText() As String
			Get
				Return Me._PrefixText
			End Get
			Set
				If (String.Equals(Me._PrefixText, value) = false) Then
					Me.OnPrefixTextChanging(value)
					Me.SendPropertyChanging
					Me._PrefixText = value
					Me.SendPropertyChanged("PrefixText")
					Me.OnPrefixTextChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SuffixText", DbType:="NVarChar(MAX)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property SuffixText() As String
			Get
				Return Me._SuffixText
			End Get
			Set
				If (String.Equals(Me._SuffixText, value) = false) Then
					Me.OnSuffixTextChanging(value)
					Me.SendPropertyChanging
					Me._SuffixText = value
					Me.SendPropertyChanged("SuffixText")
					Me.OnSuffixTextChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property PortalId() As System.Nullable(Of Integer)
			Get
				Return Me._PortalId
			End Get
			Set
				If (Me._PortalId.Equals(value) = false) Then
					Me.OnPortalIdChanging(value)
					Me.SendPropertyChanging
					Me._PortalId = value
					Me.SendPropertyChanged("PortalId")
					Me.OnPortalIdChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Staff_RepRels"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Staff_RepRel
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _RepRelId As Long
		
		Private _UserId As System.Nullable(Of Integer)
		
		Private _LeaderId As System.Nullable(Of Integer)
		
		Private _User As EntityRef(Of User)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRepRelIdChanging(value As Long)
    End Sub
    Partial Private Sub OnRepRelIdChanged()
    End Sub
    Partial Private Sub OnUserIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUserIdChanged()
    End Sub
    Partial Private Sub OnLeaderIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLeaderIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RepRelId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property RepRelId() As Long
			Get
				Return Me._RepRelId
			End Get
			Set
				If ((Me._RepRelId = value)  _
							= false) Then
					Me.OnRepRelIdChanging(value)
					Me.SendPropertyChanging
					Me._RepRelId = value
					Me.SendPropertyChanged("RepRelId")
					Me.OnRepRelIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property UserId() As System.Nullable(Of Integer)
			Get
				Return Me._UserId
			End Get
			Set
				If (Me._UserId.Equals(value) = false) Then
					Me.OnUserIdChanging(value)
					Me.SendPropertyChanging
					Me._UserId = value
					Me.SendPropertyChanged("UserId")
					Me.OnUserIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeaderId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property LeaderId() As System.Nullable(Of Integer)
			Get
				Return Me._LeaderId
			End Get
			Set
				If (Me._LeaderId.Equals(value) = false) Then
					If Me._User.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnLeaderIdChanging(value)
					Me.SendPropertyChanging
					Me._LeaderId = value
					Me.SendPropertyChanged("LeaderId")
					Me.OnLeaderIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="User_Agape_Staff_RepRel", Storage:="_User", ThisKey:="LeaderId", OtherKey:="UserID", IsForeignKey:=true)>  _
		Public Property User() As User
			Get
				Return Me._User.Entity
			End Get
			Set
				Dim previousValue As User = Me._User.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._User.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._User.Entity = Nothing
						previousValue.Agape_Staff_RepRels.Remove(Me)
					End If
					Me._User.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.Agape_Staff_RepRels.Add(Me)
						Me._LeaderId = value.UserID
					Else
						Me._LeaderId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("User")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			Me._User = CType(Nothing, EntityRef(Of User))
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Users"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class User
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _UserID As Integer
		
		Private _Username As String
		
		Private _FirstName As String
		
		Private _LastName As String
		
		Private _IsSuperUser As Boolean
		
		Private _AffiliateId As System.Nullable(Of Integer)
		
		Private _Email As String
		
		Private _DisplayName As String
		
		Private _UpdatePassword As Boolean
		
		Private _Agape_Staff_RepRels As EntitySet(Of Agape_Staff_RepRel)
		
		Private _Agape_Staff_SupSups As EntitySet(Of Agape_Staff_SupSup)
		
		Private _Agape_Staff_Prayers As EntitySet(Of Agape_Staff_Prayer)
		
		Private serializing As Boolean
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUserIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnUsernameChanging(value As String)
    End Sub
    Partial Private Sub OnUsernameChanged()
    End Sub
    Partial Private Sub OnFirstNameChanging(value As String)
    End Sub
    Partial Private Sub OnFirstNameChanged()
    End Sub
    Partial Private Sub OnLastNameChanging(value As String)
    End Sub
    Partial Private Sub OnLastNameChanged()
    End Sub
    Partial Private Sub OnIsSuperUserChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsSuperUserChanged()
    End Sub
    Partial Private Sub OnAffiliateIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAffiliateIdChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnDisplayNameChanging(value As String)
    End Sub
    Partial Private Sub OnDisplayNameChanged()
    End Sub
    Partial Private Sub OnUpdatePasswordChanging(value As Boolean)
    End Sub
    Partial Private Sub OnUpdatePasswordChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property UserID() As Integer
			Get
				Return Me._UserID
			End Get
			Set
				If ((Me._UserID = value)  _
							= false) Then
					Me.OnUserIDChanging(value)
					Me.SendPropertyChanging
					Me._UserID = value
					Me.SendPropertyChanged("UserID")
					Me.OnUserIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Username", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Username() As String
			Get
				Return Me._Username
			End Get
			Set
				If (String.Equals(Me._Username, value) = false) Then
					Me.OnUsernameChanging(value)
					Me.SendPropertyChanging
					Me._Username = value
					Me.SendPropertyChanged("Username")
					Me.OnUsernameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property FirstName() As String
			Get
				Return Me._FirstName
			End Get
			Set
				If (String.Equals(Me._FirstName, value) = false) Then
					Me.OnFirstNameChanging(value)
					Me.SendPropertyChanging
					Me._FirstName = value
					Me.SendPropertyChanged("FirstName")
					Me.OnFirstNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property LastName() As String
			Get
				Return Me._LastName
			End Get
			Set
				If (String.Equals(Me._LastName, value) = false) Then
					Me.OnLastNameChanging(value)
					Me.SendPropertyChanging
					Me._LastName = value
					Me.SendPropertyChanged("LastName")
					Me.OnLastNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsSuperUser", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property IsSuperUser() As Boolean
			Get
				Return Me._IsSuperUser
			End Get
			Set
				If ((Me._IsSuperUser = value)  _
							= false) Then
					Me.OnIsSuperUserChanging(value)
					Me.SendPropertyChanging
					Me._IsSuperUser = value
					Me.SendPropertyChanged("IsSuperUser")
					Me.OnIsSuperUserChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AffiliateId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property AffiliateId() As System.Nullable(Of Integer)
			Get
				Return Me._AffiliateId
			End Get
			Set
				If (Me._AffiliateId.Equals(value) = false) Then
					Me.OnAffiliateIdChanging(value)
					Me.SendPropertyChanging
					Me._AffiliateId = value
					Me.SendPropertyChanged("AffiliateId")
					Me.OnAffiliateIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(256)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Email() As String
			Get
				Return Me._Email
			End Get
			Set
				If (String.Equals(Me._Email, value) = false) Then
					Me.OnEmailChanging(value)
					Me.SendPropertyChanging
					Me._Email = value
					Me.SendPropertyChanged("Email")
					Me.OnEmailChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayName", DbType:="NVarChar(128) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property DisplayName() As String
			Get
				Return Me._DisplayName
			End Get
			Set
				If (String.Equals(Me._DisplayName, value) = false) Then
					Me.OnDisplayNameChanging(value)
					Me.SendPropertyChanging
					Me._DisplayName = value
					Me.SendPropertyChanged("DisplayName")
					Me.OnDisplayNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdatePassword", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property UpdatePassword() As Boolean
			Get
				Return Me._UpdatePassword
			End Get
			Set
				If ((Me._UpdatePassword = value)  _
							= false) Then
					Me.OnUpdatePasswordChanging(value)
					Me.SendPropertyChanging
					Me._UpdatePassword = value
					Me.SendPropertyChanged("UpdatePassword")
					Me.OnUpdatePasswordChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="User_Agape_Staff_RepRel", Storage:="_Agape_Staff_RepRels", ThisKey:="UserID", OtherKey:="LeaderId"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10, EmitDefaultValue:=false)>  _
		Public Property Agape_Staff_RepRels() As EntitySet(Of Agape_Staff_RepRel)
			Get
				If (Me.serializing  _
							AndAlso (Me._Agape_Staff_RepRels.HasLoadedOrAssignedValues = false)) Then
					Return Nothing
				End If
				Return Me._Agape_Staff_RepRels
			End Get
			Set
				Me._Agape_Staff_RepRels.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="User_Agape_Staff_SupSup", Storage:="_Agape_Staff_SupSups", ThisKey:="UserID", OtherKey:="LeaderId"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11, EmitDefaultValue:=false)>  _
		Public Property Agape_Staff_SupSups() As EntitySet(Of Agape_Staff_SupSup)
			Get
				If (Me.serializing  _
							AndAlso (Me._Agape_Staff_SupSups.HasLoadedOrAssignedValues = false)) Then
					Return Nothing
				End If
				Return Me._Agape_Staff_SupSups
			End Get
			Set
				Me._Agape_Staff_SupSups.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="User_Agape_Staff_Prayer", Storage:="_Agape_Staff_Prayers", ThisKey:="UserID", OtherKey:="SubmittedBy"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12, EmitDefaultValue:=false)>  _
		Public Property Agape_Staff_Prayers() As EntitySet(Of Agape_Staff_Prayer)
			Get
				If (Me.serializing  _
							AndAlso (Me._Agape_Staff_Prayers.HasLoadedOrAssignedValues = false)) Then
					Return Nothing
				End If
				Return Me._Agape_Staff_Prayers
			End Get
			Set
				Me._Agape_Staff_Prayers.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_Agape_Staff_RepRels(ByVal entity As Agape_Staff_RepRel)
			Me.SendPropertyChanging
			entity.User = Me
		End Sub
		
		Private Sub detach_Agape_Staff_RepRels(ByVal entity As Agape_Staff_RepRel)
			Me.SendPropertyChanging
			entity.User = Nothing
		End Sub
		
		Private Sub attach_Agape_Staff_SupSups(ByVal entity As Agape_Staff_SupSup)
			Me.SendPropertyChanging
			entity.User = Me
		End Sub
		
		Private Sub detach_Agape_Staff_SupSups(ByVal entity As Agape_Staff_SupSup)
			Me.SendPropertyChanging
			entity.User = Nothing
		End Sub
		
		Private Sub attach_Agape_Staff_Prayers(ByVal entity As Agape_Staff_Prayer)
			Me.SendPropertyChanging
			entity.User = Me
		End Sub
		
		Private Sub detach_Agape_Staff_Prayers(ByVal entity As Agape_Staff_Prayer)
			Me.SendPropertyChanging
			entity.User = Nothing
		End Sub
		
		Private Sub Initialize()
			Me._Agape_Staff_RepRels = New EntitySet(Of Agape_Staff_RepRel)(AddressOf Me.attach_Agape_Staff_RepRels, AddressOf Me.detach_Agape_Staff_RepRels)
			Me._Agape_Staff_SupSups = New EntitySet(Of Agape_Staff_SupSup)(AddressOf Me.attach_Agape_Staff_SupSups, AddressOf Me.detach_Agape_Staff_SupSups)
			Me._Agape_Staff_Prayers = New EntitySet(Of Agape_Staff_Prayer)(AddressOf Me.attach_Agape_Staff_Prayers, AddressOf Me.detach_Agape_Staff_Prayers)
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerializing(ByVal context As StreamingContext)
			Me.serializing = true
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializedAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerialized(ByVal context As StreamingContext)
			Me.serializing = false
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Staff_SupSup"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Staff_SupSup
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _SupSupId As Long
		
		Private _UserId As System.Nullable(Of Integer)
		
		Private _LeaderId As System.Nullable(Of Integer)
		
		Private _User As EntityRef(Of User)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSupSupIdChanging(value As Long)
    End Sub
    Partial Private Sub OnSupSupIdChanged()
    End Sub
    Partial Private Sub OnUserIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUserIdChanged()
    End Sub
    Partial Private Sub OnLeaderIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLeaderIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SupSupId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property SupSupId() As Long
			Get
				Return Me._SupSupId
			End Get
			Set
				If ((Me._SupSupId = value)  _
							= false) Then
					Me.OnSupSupIdChanging(value)
					Me.SendPropertyChanging
					Me._SupSupId = value
					Me.SendPropertyChanged("SupSupId")
					Me.OnSupSupIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property UserId() As System.Nullable(Of Integer)
			Get
				Return Me._UserId
			End Get
			Set
				If (Me._UserId.Equals(value) = false) Then
					Me.OnUserIdChanging(value)
					Me.SendPropertyChanging
					Me._UserId = value
					Me.SendPropertyChanged("UserId")
					Me.OnUserIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LeaderId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property LeaderId() As System.Nullable(Of Integer)
			Get
				Return Me._LeaderId
			End Get
			Set
				If (Me._LeaderId.Equals(value) = false) Then
					If Me._User.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnLeaderIdChanging(value)
					Me.SendPropertyChanging
					Me._LeaderId = value
					Me.SendPropertyChanged("LeaderId")
					Me.OnLeaderIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="User_Agape_Staff_SupSup", Storage:="_User", ThisKey:="LeaderId", OtherKey:="UserID", IsForeignKey:=true)>  _
		Public Property User() As User
			Get
				Return Me._User.Entity
			End Get
			Set
				Dim previousValue As User = Me._User.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._User.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._User.Entity = Nothing
						previousValue.Agape_Staff_SupSups.Remove(Me)
					End If
					Me._User.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.Agape_Staff_SupSups.Add(Me)
						Me._LeaderId = value.UserID
					Else
						Me._LeaderId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("User")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			Me._User = CType(Nothing, EntityRef(Of User))
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Staff_Children"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Staff_Children
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ChildId As Long
		
		Private _FamilyId As System.Nullable(Of Integer)
		
		Private _FirstName As String
		
		Private _LastName As String
		
		Private _Gender As String
		
		Private _DOB As System.Nullable(Of Date)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnChildIdChanging(value As Long)
    End Sub
    Partial Private Sub OnChildIdChanged()
    End Sub
    Partial Private Sub OnFamilyIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFamilyIdChanged()
    End Sub
    Partial Private Sub OnFirstNameChanging(value As String)
    End Sub
    Partial Private Sub OnFirstNameChanged()
    End Sub
    Partial Private Sub OnLastNameChanging(value As String)
    End Sub
    Partial Private Sub OnLastNameChanged()
    End Sub
    Partial Private Sub OnGenderChanging(value As String)
    End Sub
    Partial Private Sub OnGenderChanged()
    End Sub
    Partial Private Sub OnDOBChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDOBChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChildId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property ChildId() As Long
			Get
				Return Me._ChildId
			End Get
			Set
				If ((Me._ChildId = value)  _
							= false) Then
					Me.OnChildIdChanging(value)
					Me.SendPropertyChanging
					Me._ChildId = value
					Me.SendPropertyChanged("ChildId")
					Me.OnChildIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FamilyId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property FamilyId() As System.Nullable(Of Integer)
			Get
				Return Me._FamilyId
			End Get
			Set
				If (Me._FamilyId.Equals(value) = false) Then
					Me.OnFamilyIdChanging(value)
					Me.SendPropertyChanging
					Me._FamilyId = value
					Me.SendPropertyChanged("FamilyId")
					Me.OnFamilyIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstName", DbType:="NVarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property FirstName() As String
			Get
				Return Me._FirstName
			End Get
			Set
				If (String.Equals(Me._FirstName, value) = false) Then
					Me.OnFirstNameChanging(value)
					Me.SendPropertyChanging
					Me._FirstName = value
					Me.SendPropertyChanged("FirstName")
					Me.OnFirstNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastName", DbType:="NVarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property LastName() As String
			Get
				Return Me._LastName
			End Get
			Set
				If (String.Equals(Me._LastName, value) = false) Then
					Me.OnLastNameChanging(value)
					Me.SendPropertyChanging
					Me._LastName = value
					Me.SendPropertyChanged("LastName")
					Me.OnLastNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Gender", DbType:="VarChar(6)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Gender() As String
			Get
				Return Me._Gender
			End Get
			Set
				If (String.Equals(Me._Gender, value) = false) Then
					Me.OnGenderChanging(value)
					Me.SendPropertyChanging
					Me._Gender = value
					Me.SendPropertyChanged("Gender")
					Me.OnGenderChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOB", DbType:="Date"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property DOB() As System.Nullable(Of Date)
			Get
				Return Me._DOB
			End Get
			Set
				If (Me._DOB.Equals(value) = false) Then
					Me.OnDOBChanging(value)
					Me.SendPropertyChanging
					Me._DOB = value
					Me.SendPropertyChanged("DOB")
					Me.OnDOBChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Staff_JobTitles"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Staff_JobTitle
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _JobTitleId As Integer
		
		Private _Name As String
		
		Private _PortalId As System.Nullable(Of Integer)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnJobTitleIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnJobTitleIdChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobTitleId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property JobTitleId() As Integer
			Get
				Return Me._JobTitleId
			End Get
			Set
				If ((Me._JobTitleId = value)  _
							= false) Then
					Me.OnJobTitleIdChanging(value)
					Me.SendPropertyChanging
					Me._JobTitleId = value
					Me.SendPropertyChanged("JobTitleId")
					Me.OnJobTitleIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Name() As String
			Get
				Return Me._Name
			End Get
			Set
				If (String.Equals(Me._Name, value) = false) Then
					Me.OnNameChanging(value)
					Me.SendPropertyChanging
					Me._Name = value
					Me.SendPropertyChanged("Name")
					Me.OnNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property PortalId() As System.Nullable(Of Integer)
			Get
				Return Me._PortalId
			End Get
			Set
				If (Me._PortalId.Equals(value) = false) Then
					Me.OnPortalIdChanging(value)
					Me.SendPropertyChanging
					Me._PortalId = value
					Me.SendPropertyChanged("PortalId")
					Me.OnPortalIdChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Main_ProfileImage"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Main_ProfileImage
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ImageId As Integer
		
		Private _UserId As Integer
		
		Private _Content As System.Data.Linq.Binary
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnImageIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnImageIdChanged()
    End Sub
    Partial Private Sub OnUserIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnUserIdChanged()
    End Sub
    Partial Private Sub OnContentChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnContentChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImageId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property ImageId() As Integer
			Get
				Return Me._ImageId
			End Get
			Set
				If ((Me._ImageId = value)  _
							= false) Then
					Me.OnImageIdChanging(value)
					Me.SendPropertyChanging
					Me._ImageId = value
					Me.SendPropertyChanged("ImageId")
					Me.OnImageIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="Int NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property UserId() As Integer
			Get
				Return Me._UserId
			End Get
			Set
				If ((Me._UserId = value)  _
							= false) Then
					Me.OnUserIdChanging(value)
					Me.SendPropertyChanging
					Me._UserId = value
					Me.SendPropertyChanged("UserId")
					Me.OnUserIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Content", DbType:="Image", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Content() As System.Data.Linq.Binary
			Get
				Return Me._Content
			End Get
			Set
				If (Object.Equals(Me._Content, value) = false) Then
					Me.OnContentChanging(value)
					Me.SendPropertyChanging
					Me._Content = value
					Me.SendPropertyChanged("Content")
					Me.OnContentChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Staff_Prayers"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Staff_Prayer
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _StaffPrayerId As Long
		
		Private _PrayerTitle As String
		
		Private _PrayerText As String
		
		Private _SubmittedBy As System.Nullable(Of Integer)
		
		Private _SubmittedDate As System.Nullable(Of Date)
		
		Private _PortalId As System.Nullable(Of Integer)
		
		Private _User As EntityRef(Of User)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStaffPrayerIdChanging(value As Long)
    End Sub
    Partial Private Sub OnStaffPrayerIdChanged()
    End Sub
    Partial Private Sub OnPrayerTitleChanging(value As String)
    End Sub
    Partial Private Sub OnPrayerTitleChanged()
    End Sub
    Partial Private Sub OnPrayerTextChanging(value As String)
    End Sub
    Partial Private Sub OnPrayerTextChanged()
    End Sub
    Partial Private Sub OnSubmittedByChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSubmittedByChanged()
    End Sub
    Partial Private Sub OnSubmittedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmittedDateChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffPrayerId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property StaffPrayerId() As Long
			Get
				Return Me._StaffPrayerId
			End Get
			Set
				If ((Me._StaffPrayerId = value)  _
							= false) Then
					Me.OnStaffPrayerIdChanging(value)
					Me.SendPropertyChanging
					Me._StaffPrayerId = value
					Me.SendPropertyChanged("StaffPrayerId")
					Me.OnStaffPrayerIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrayerTitle", DbType:="NVarChar(80)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property PrayerTitle() As String
			Get
				Return Me._PrayerTitle
			End Get
			Set
				If (String.Equals(Me._PrayerTitle, value) = false) Then
					Me.OnPrayerTitleChanging(value)
					Me.SendPropertyChanging
					Me._PrayerTitle = value
					Me.SendPropertyChanged("PrayerTitle")
					Me.OnPrayerTitleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrayerText", DbType:="NVarChar(MAX)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property PrayerText() As String
			Get
				Return Me._PrayerText
			End Get
			Set
				If (String.Equals(Me._PrayerText, value) = false) Then
					Me.OnPrayerTextChanging(value)
					Me.SendPropertyChanging
					Me._PrayerText = value
					Me.SendPropertyChanged("PrayerText")
					Me.OnPrayerTextChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedBy", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property SubmittedBy() As System.Nullable(Of Integer)
			Get
				Return Me._SubmittedBy
			End Get
			Set
				If (Me._SubmittedBy.Equals(value) = false) Then
					If Me._User.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnSubmittedByChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedBy = value
					Me.SendPropertyChanged("SubmittedBy")
					Me.OnSubmittedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedDate", DbType:="DateTime"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property SubmittedDate() As System.Nullable(Of Date)
			Get
				Return Me._SubmittedDate
			End Get
			Set
				If (Me._SubmittedDate.Equals(value) = false) Then
					Me.OnSubmittedDateChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedDate = value
					Me.SendPropertyChanged("SubmittedDate")
					Me.OnSubmittedDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property PortalId() As System.Nullable(Of Integer)
			Get
				Return Me._PortalId
			End Get
			Set
				If (Me._PortalId.Equals(value) = false) Then
					Me.OnPortalIdChanging(value)
					Me.SendPropertyChanging
					Me._PortalId = value
					Me.SendPropertyChanged("PortalId")
					Me.OnPortalIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="User_Agape_Staff_Prayer", Storage:="_User", ThisKey:="SubmittedBy", OtherKey:="UserID", IsForeignKey:=true)>  _
		Public Property User() As User
			Get
				Return Me._User.Entity
			End Get
			Set
				Dim previousValue As User = Me._User.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._User.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._User.Entity = Nothing
						previousValue.Agape_Staff_Prayers.Remove(Me)
					End If
					Me._User.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.Agape_Staff_Prayers.Add(Me)
						Me._SubmittedBy = value.UserID
					Else
						Me._SubmittedBy = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("User")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			Me._User = CType(Nothing, EntityRef(Of User))
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_GCX_Proxy"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_GCX_Proxy
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _GCXId As Long
		
		Private _PGTIOU As String
		
		Private _PGTID As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnGCXIdChanging(value As Long)
    End Sub
    Partial Private Sub OnGCXIdChanged()
    End Sub
    Partial Private Sub OnPGTIOUChanging(value As String)
    End Sub
    Partial Private Sub OnPGTIOUChanged()
    End Sub
    Partial Private Sub OnPGTIDChanging(value As String)
    End Sub
    Partial Private Sub OnPGTIDChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GCXId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property GCXId() As Long
			Get
				Return Me._GCXId
			End Get
			Set
				If ((Me._GCXId = value)  _
							= false) Then
					Me.OnGCXIdChanging(value)
					Me.SendPropertyChanging
					Me._GCXId = value
					Me.SendPropertyChanged("GCXId")
					Me.OnGCXIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PGTIOU", DbType:="VarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property PGTIOU() As String
			Get
				Return Me._PGTIOU
			End Get
			Set
				If (String.Equals(Me._PGTIOU, value) = false) Then
					Me.OnPGTIOUChanging(value)
					Me.SendPropertyChanging
					Me._PGTIOU = value
					Me.SendPropertyChanged("PGTIOU")
					Me.OnPGTIOUChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PGTID", DbType:="VarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property PGTID() As String
			Get
				Return Me._PGTID
			End Get
			Set
				If (String.Equals(Me._PGTID, value) = false) Then
					Me.OnPGTIDChanging(value)
					Me.SendPropertyChanging
					Me._PGTID = value
					Me.SendPropertyChanged("PGTID")
					Me.OnPGTIDChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Main_Give_PPlans"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Main_Give_PPlan
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _PPID As Long
		
		Private _PPKEY As System.Nullable(Of Integer)
		
		Private _BANKKEY As System.Nullable(Of Integer)
		
		Private _StaffFinanceId As System.Nullable(Of Integer)
		
		Private _Amount As System.Nullable(Of Decimal)
		
		Private _Frequency As System.Nullable(Of Short)
		
		Private _StartDate As System.Nullable(Of Date)
		
		Private _EndDate As System.Nullable(Of Date)
		
		Private _Status As System.Nullable(Of Byte)
		
		Private _GiftAid As System.Nullable(Of Boolean)
		
		Private _Type As String
		
		Private _LastPaymentDate As System.Nullable(Of Date)
		
		Private _DonorName As String
		
		Private _PVKEY As System.Nullable(Of Integer)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPPIDChanging(value As Long)
    End Sub
    Partial Private Sub OnPPIDChanged()
    End Sub
    Partial Private Sub OnPPKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPPKEYChanged()
    End Sub
    Partial Private Sub OnBANKKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnBANKKEYChanged()
    End Sub
    Partial Private Sub OnStaffFinanceIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStaffFinanceIdChanged()
    End Sub
    Partial Private Sub OnAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAmountChanged()
    End Sub
    Partial Private Sub OnFrequencyChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnFrequencyChanged()
    End Sub
    Partial Private Sub OnStartDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStartDateChanged()
    End Sub
    Partial Private Sub OnEndDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEndDateChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnGiftAidChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnGiftAidChanged()
    End Sub
    Partial Private Sub OnTypeChanging(value As String)
    End Sub
    Partial Private Sub OnTypeChanged()
    End Sub
    Partial Private Sub OnLastPaymentDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastPaymentDateChanged()
    End Sub
    Partial Private Sub OnDonorNameChanging(value As String)
    End Sub
    Partial Private Sub OnDonorNameChanged()
    End Sub
    Partial Private Sub OnPVKEYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPVKEYChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PPID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property PPID() As Long
			Get
				Return Me._PPID
			End Get
			Set
				If ((Me._PPID = value)  _
							= false) Then
					Me.OnPPIDChanging(value)
					Me.SendPropertyChanging
					Me._PPID = value
					Me.SendPropertyChanged("PPID")
					Me.OnPPIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PPKEY", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property PPKEY() As System.Nullable(Of Integer)
			Get
				Return Me._PPKEY
			End Get
			Set
				If (Me._PPKEY.Equals(value) = false) Then
					Me.OnPPKEYChanging(value)
					Me.SendPropertyChanging
					Me._PPKEY = value
					Me.SendPropertyChanged("PPKEY")
					Me.OnPPKEYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BANKKEY", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property BANKKEY() As System.Nullable(Of Integer)
			Get
				Return Me._BANKKEY
			End Get
			Set
				If (Me._BANKKEY.Equals(value) = false) Then
					Me.OnBANKKEYChanging(value)
					Me.SendPropertyChanging
					Me._BANKKEY = value
					Me.SendPropertyChanged("BANKKEY")
					Me.OnBANKKEYChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffFinanceId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property StaffFinanceId() As System.Nullable(Of Integer)
			Get
				Return Me._StaffFinanceId
			End Get
			Set
				If (Me._StaffFinanceId.Equals(value) = false) Then
					Me.OnStaffFinanceIdChanging(value)
					Me.SendPropertyChanging
					Me._StaffFinanceId = value
					Me.SendPropertyChanged("StaffFinanceId")
					Me.OnStaffFinanceIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount", DbType:="Money"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Amount() As System.Nullable(Of Decimal)
			Get
				Return Me._Amount
			End Get
			Set
				If (Me._Amount.Equals(value) = false) Then
					Me.OnAmountChanging(value)
					Me.SendPropertyChanging
					Me._Amount = value
					Me.SendPropertyChanged("Amount")
					Me.OnAmountChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Frequency", DbType:="SmallInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Frequency() As System.Nullable(Of Short)
			Get
				Return Me._Frequency
			End Get
			Set
				If (Me._Frequency.Equals(value) = false) Then
					Me.OnFrequencyChanging(value)
					Me.SendPropertyChanging
					Me._Frequency = value
					Me.SendPropertyChanged("Frequency")
					Me.OnFrequencyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="Date"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property StartDate() As System.Nullable(Of Date)
			Get
				Return Me._StartDate
			End Get
			Set
				If (Me._StartDate.Equals(value) = false) Then
					Me.OnStartDateChanging(value)
					Me.SendPropertyChanging
					Me._StartDate = value
					Me.SendPropertyChanged("StartDate")
					Me.OnStartDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="Date"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property EndDate() As System.Nullable(Of Date)
			Get
				Return Me._EndDate
			End Get
			Set
				If (Me._EndDate.Equals(value) = false) Then
					Me.OnEndDateChanging(value)
					Me.SendPropertyChanging
					Me._EndDate = value
					Me.SendPropertyChanged("EndDate")
					Me.OnEndDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="TinyInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Status() As System.Nullable(Of Byte)
			Get
				Return Me._Status
			End Get
			Set
				If (Me._Status.Equals(value) = false) Then
					Me.OnStatusChanging(value)
					Me.SendPropertyChanging
					Me._Status = value
					Me.SendPropertyChanged("Status")
					Me.OnStatusChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GiftAid", DbType:="Bit"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property GiftAid() As System.Nullable(Of Boolean)
			Get
				Return Me._GiftAid
			End Get
			Set
				If (Me._GiftAid.Equals(value) = false) Then
					Me.OnGiftAidChanging(value)
					Me.SendPropertyChanging
					Me._GiftAid = value
					Me.SendPropertyChanged("GiftAid")
					Me.OnGiftAidChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="VarChar(15)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property Type() As String
			Get
				Return Me._Type
			End Get
			Set
				If (String.Equals(Me._Type, value) = false) Then
					Me.OnTypeChanging(value)
					Me.SendPropertyChanging
					Me._Type = value
					Me.SendPropertyChanged("Type")
					Me.OnTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastPaymentDate", DbType:="Date"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property LastPaymentDate() As System.Nullable(Of Date)
			Get
				Return Me._LastPaymentDate
			End Get
			Set
				If (Me._LastPaymentDate.Equals(value) = false) Then
					Me.OnLastPaymentDateChanging(value)
					Me.SendPropertyChanging
					Me._LastPaymentDate = value
					Me.SendPropertyChanged("LastPaymentDate")
					Me.OnLastPaymentDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DonorName", DbType:="VarChar(80)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property DonorName() As String
			Get
				Return Me._DonorName
			End Get
			Set
				If (String.Equals(Me._DonorName, value) = false) Then
					Me.OnDonorNameChanging(value)
					Me.SendPropertyChanging
					Me._DonorName = value
					Me.SendPropertyChanged("DonorName")
					Me.OnDonorNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PVKEY", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property PVKEY() As System.Nullable(Of Integer)
			Get
				Return Me._PVKEY
			End Get
			Set
				If (Me._PVKEY.Equals(value) = false) Then
					Me.OnPVKEYChanging(value)
					Me.SendPropertyChanging
					Me._PVKEY = value
					Me.SendPropertyChanged("PVKEY")
					Me.OnPVKEYChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Staff_Rmb_Status"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Staff_Rmb_Status
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _StatusId As Integer
		
		Private _Status As String
		
		Private _StatusNo As System.Nullable(Of Byte)
		
		Private _Agape_Staff_Rmbs As EntitySet(Of Agape_Staff_Rmb)
		
		Private serializing As Boolean
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStatusIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnStatusIdChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnStatusNoChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnStatusNoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StatusId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property StatusId() As Integer
			Get
				Return Me._StatusId
			End Get
			Set
				If ((Me._StatusId = value)  _
							= false) Then
					Me.OnStatusIdChanging(value)
					Me.SendPropertyChanging
					Me._StatusId = value
					Me.SendPropertyChanged("StatusId")
					Me.OnStatusIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="NVarChar(30)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property Status() As String
			Get
				Return Me._Status
			End Get
			Set
				If (String.Equals(Me._Status, value) = false) Then
					Me.OnStatusChanging(value)
					Me.SendPropertyChanging
					Me._Status = value
					Me.SendPropertyChanged("Status")
					Me.OnStatusChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StatusNo", DbType:="TinyInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property StatusNo() As System.Nullable(Of Byte)
			Get
				Return Me._StatusNo
			End Get
			Set
				If (Me._StatusNo.Equals(value) = false) Then
					Me.OnStatusNoChanging(value)
					Me.SendPropertyChanging
					Me._StatusNo = value
					Me.SendPropertyChanged("StatusNo")
					Me.OnStatusNoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Agape_Staff_Rmb_Status_Agape_Staff_Rmb", Storage:="_Agape_Staff_Rmbs", ThisKey:="StatusId", OtherKey:="Status"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4, EmitDefaultValue:=false)>  _
		Public Property Agape_Staff_Rmbs() As EntitySet(Of Agape_Staff_Rmb)
			Get
				If (Me.serializing  _
							AndAlso (Me._Agape_Staff_Rmbs.HasLoadedOrAssignedValues = false)) Then
					Return Nothing
				End If
				Return Me._Agape_Staff_Rmbs
			End Get
			Set
				Me._Agape_Staff_Rmbs.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_Agape_Staff_Rmbs(ByVal entity As Agape_Staff_Rmb)
			Me.SendPropertyChanging
			entity.Agape_Staff_Rmb_Status = Me
		End Sub
		
		Private Sub detach_Agape_Staff_Rmbs(ByVal entity As Agape_Staff_Rmb)
			Me.SendPropertyChanging
			entity.Agape_Staff_Rmb_Status = Nothing
		End Sub
		
		Private Sub Initialize()
			Me._Agape_Staff_Rmbs = New EntitySet(Of Agape_Staff_Rmb)(AddressOf Me.attach_Agape_Staff_Rmbs, AddressOf Me.detach_Agape_Staff_Rmbs)
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerializing(ByVal context As StreamingContext)
			Me.serializing = true
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializedAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerialized(ByVal context As StreamingContext)
			Me.serializing = false
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Staff_RmbLineAddStaff"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Staff_RmbLineAddStaff
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _AddStaffId As Long
		
		Private _UserId As System.Nullable(Of Integer)
		
		Private _Name As String
		
		Private _RmbLineId As System.Nullable(Of Long)
		
		Private _Agape_Staff_RmbLine As EntityRef(Of Agape_Staff_RmbLine)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAddStaffIdChanging(value As Long)
    End Sub
    Partial Private Sub OnAddStaffIdChanged()
    End Sub
    Partial Private Sub OnUserIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUserIdChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnRmbLineIdChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnRmbLineIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AddStaffId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property AddStaffId() As Long
			Get
				Return Me._AddStaffId
			End Get
			Set
				If ((Me._AddStaffId = value)  _
							= false) Then
					Me.OnAddStaffIdChanging(value)
					Me.SendPropertyChanging
					Me._AddStaffId = value
					Me.SendPropertyChanged("AddStaffId")
					Me.OnAddStaffIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property UserId() As System.Nullable(Of Integer)
			Get
				Return Me._UserId
			End Get
			Set
				If (Me._UserId.Equals(value) = false) Then
					Me.OnUserIdChanging(value)
					Me.SendPropertyChanging
					Me._UserId = value
					Me.SendPropertyChanged("UserId")
					Me.OnUserIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="NVarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Name() As String
			Get
				Return Me._Name
			End Get
			Set
				If (String.Equals(Me._Name, value) = false) Then
					Me.OnNameChanging(value)
					Me.SendPropertyChanging
					Me._Name = value
					Me.SendPropertyChanged("Name")
					Me.OnNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RmbLineId", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property RmbLineId() As System.Nullable(Of Long)
			Get
				Return Me._RmbLineId
			End Get
			Set
				If (Me._RmbLineId.Equals(value) = false) Then
					If Me._Agape_Staff_RmbLine.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnRmbLineIdChanging(value)
					Me.SendPropertyChanging
					Me._RmbLineId = value
					Me.SendPropertyChanged("RmbLineId")
					Me.OnRmbLineIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Agape_Staff_RmbLine_Agape_Staff_RmbLineAddStaff", Storage:="_Agape_Staff_RmbLine", ThisKey:="RmbLineId", OtherKey:="RmbLineNo", IsForeignKey:=true)>  _
		Public Property Agape_Staff_RmbLine() As Agape_Staff_RmbLine
			Get
				Return Me._Agape_Staff_RmbLine.Entity
			End Get
			Set
				Dim previousValue As Agape_Staff_RmbLine = Me._Agape_Staff_RmbLine.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Agape_Staff_RmbLine.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Agape_Staff_RmbLine.Entity = Nothing
						previousValue.Agape_Staff_RmbLineAddStaffs.Remove(Me)
					End If
					Me._Agape_Staff_RmbLine.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.Agape_Staff_RmbLineAddStaffs.Add(Me)
						Me._RmbLineId = value.RmbLineNo
					Else
						Me._RmbLineId = CType(Nothing, Nullable(Of Long))
					End If
					Me.SendPropertyChanged("Agape_Staff_RmbLine")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			Me._Agape_Staff_RmbLine = CType(Nothing, EntityRef(Of Agape_Staff_RmbLine))
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Staff_RmbLineType"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Staff_RmbLineType
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _LineTypeId As Short
		
		Private _TypeName As String
		
		Private _TypeNo As System.Nullable(Of Short)
		
		Private _ControlPath As String
		
		Private _PCode As String
		
		Private _DCode As String
		
		Private _Agape_Staff_RmbLines As EntitySet(Of Agape_Staff_RmbLine)
		
		Private serializing As Boolean
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnLineTypeIdChanging(value As Short)
    End Sub
    Partial Private Sub OnLineTypeIdChanged()
    End Sub
    Partial Private Sub OnTypeNameChanging(value As String)
    End Sub
    Partial Private Sub OnTypeNameChanged()
    End Sub
    Partial Private Sub OnTypeNoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnTypeNoChanged()
    End Sub
    Partial Private Sub OnControlPathChanging(value As String)
    End Sub
    Partial Private Sub OnControlPathChanged()
    End Sub
    Partial Private Sub OnPCodeChanging(value As String)
    End Sub
    Partial Private Sub OnPCodeChanged()
    End Sub
    Partial Private Sub OnDCodeChanging(value As String)
    End Sub
    Partial Private Sub OnDCodeChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineTypeId", AutoSync:=AutoSync.OnInsert, DbType:="SmallInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property LineTypeId() As Short
			Get
				Return Me._LineTypeId
			End Get
			Set
				If ((Me._LineTypeId = value)  _
							= false) Then
					Me.OnLineTypeIdChanging(value)
					Me.SendPropertyChanging
					Me._LineTypeId = value
					Me.SendPropertyChanged("LineTypeId")
					Me.OnLineTypeIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TypeName", DbType:="NVarChar(30)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property TypeName() As String
			Get
				Return Me._TypeName
			End Get
			Set
				If (String.Equals(Me._TypeName, value) = false) Then
					Me.OnTypeNameChanging(value)
					Me.SendPropertyChanging
					Me._TypeName = value
					Me.SendPropertyChanged("TypeName")
					Me.OnTypeNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TypeNo", DbType:="SmallInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property TypeNo() As System.Nullable(Of Short)
			Get
				Return Me._TypeNo
			End Get
			Set
				If (Me._TypeNo.Equals(value) = false) Then
					Me.OnTypeNoChanging(value)
					Me.SendPropertyChanging
					Me._TypeNo = value
					Me.SendPropertyChanged("TypeNo")
					Me.OnTypeNoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ControlPath", DbType:="VarChar(150)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property ControlPath() As String
			Get
				Return Me._ControlPath
			End Get
			Set
				If (String.Equals(Me._ControlPath, value) = false) Then
					Me.OnControlPathChanging(value)
					Me.SendPropertyChanging
					Me._ControlPath = value
					Me.SendPropertyChanged("ControlPath")
					Me.OnControlPathChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PCode", DbType:="VarChar(4)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property PCode() As String
			Get
				Return Me._PCode
			End Get
			Set
				If (String.Equals(Me._PCode, value) = false) Then
					Me.OnPCodeChanging(value)
					Me.SendPropertyChanging
					Me._PCode = value
					Me.SendPropertyChanged("PCode")
					Me.OnPCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DCode", DbType:="VarChar(4)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property DCode() As String
			Get
				Return Me._DCode
			End Get
			Set
				If (String.Equals(Me._DCode, value) = false) Then
					Me.OnDCodeChanging(value)
					Me.SendPropertyChanging
					Me._DCode = value
					Me.SendPropertyChanged("DCode")
					Me.OnDCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Agape_Staff_RmbLineType_Agape_Staff_RmbLine", Storage:="_Agape_Staff_RmbLines", ThisKey:="TypeNo", OtherKey:="LineType"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7, EmitDefaultValue:=false)>  _
		Public Property Agape_Staff_RmbLines() As EntitySet(Of Agape_Staff_RmbLine)
			Get
				If (Me.serializing  _
							AndAlso (Me._Agape_Staff_RmbLines.HasLoadedOrAssignedValues = false)) Then
					Return Nothing
				End If
				Return Me._Agape_Staff_RmbLines
			End Get
			Set
				Me._Agape_Staff_RmbLines.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_Agape_Staff_RmbLines(ByVal entity As Agape_Staff_RmbLine)
			Me.SendPropertyChanging
			entity.Agape_Staff_RmbLineType = Me
		End Sub
		
		Private Sub detach_Agape_Staff_RmbLines(ByVal entity As Agape_Staff_RmbLine)
			Me.SendPropertyChanging
			entity.Agape_Staff_RmbLineType = Nothing
		End Sub
		
		Private Sub Initialize()
			Me._Agape_Staff_RmbLines = New EntitySet(Of Agape_Staff_RmbLine)(AddressOf Me.attach_Agape_Staff_RmbLines, AddressOf Me.detach_Agape_Staff_RmbLines)
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerializing(ByVal context As StreamingContext)
			Me.serializing = true
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializedAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerialized(ByVal context As StreamingContext)
			Me.serializing = false
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Staff_Finance"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Staff_Finance
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _StaffFinanceId As Long
		
		Private _FamilyId As System.Nullable(Of Integer)
		
		Private _PrimeGetsEmails As Boolean
		
		Private _OnlineGiving As Boolean
		
		Private _GivingShortcut As String
		
		Private _DoNotContact As Boolean
		
		Private _Hours1 As Short
		
		Private _Hours2 As System.Nullable(Of Short)
		
		Private _LondonFactor As System.Nullable(Of Double)
		
		Private _Single As System.Nullable(Of Boolean)
		
		Private _CostCentre As String
		
		Private _GivingText As String
		
		Private _PortalId As System.Nullable(Of Short)
		
		Private _NonCTC As System.Nullable(Of Byte)
		
		Private _PrimeUserId As System.Nullable(Of Integer)
		
		Private _DisplayName As String
		
		Private _JobTitle1 As System.Nullable(Of Integer)
		
		Private _JobTitle2 As System.Nullable(Of Integer)
		
		Private _UserId1 As System.Nullable(Of Integer)
		
		Private _USerId2 As System.Nullable(Of Integer)
		
		Private _SpouseName As String
		
		Private _SpouseDOB As System.Nullable(Of Date)
		
		Private _MaritalStatus As String
		
		Private _StaffType As String
		
		Private _UnNamedStaff As Boolean
		
		Private _ExStaff As System.Nullable(Of Boolean)
		
		Private _PersonalCostCentre As String
		
		Private _Leader11Id As System.Nullable(Of Integer)
		
		Private _Leader21Id As System.Nullable(Of Integer)
		
		Private _Delegate11Id As System.Nullable(Of Integer)
		
		Private _Delegate21Id As System.Nullable(Of Integer)
		
		Private _Leader12Id As System.Nullable(Of Integer)
		
		Private _Leader22Id As System.Nullable(Of Integer)
		
		Private _Delegate12Id As System.Nullable(Of Integer)
		
		Private _Delegate22Id As System.Nullable(Of Integer)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStaffFinanceIdChanging(value As Long)
    End Sub
    Partial Private Sub OnStaffFinanceIdChanged()
    End Sub
    Partial Private Sub OnFamilyIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFamilyIdChanged()
    End Sub
    Partial Private Sub OnPrimeGetsEmailsChanging(value As Boolean)
    End Sub
    Partial Private Sub OnPrimeGetsEmailsChanged()
    End Sub
    Partial Private Sub OnOnlineGivingChanging(value As Boolean)
    End Sub
    Partial Private Sub OnOnlineGivingChanged()
    End Sub
    Partial Private Sub OnGivingShortcutChanging(value As String)
    End Sub
    Partial Private Sub OnGivingShortcutChanged()
    End Sub
    Partial Private Sub OnDoNotContactChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDoNotContactChanged()
    End Sub
    Partial Private Sub OnHours1Changing(value As Short)
    End Sub
    Partial Private Sub OnHours1Changed()
    End Sub
    Partial Private Sub OnHours2Changing(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnHours2Changed()
    End Sub
    Partial Private Sub OnLondonFactorChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnLondonFactorChanged()
    End Sub
    Partial Private Sub OnSingleChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSingleChanged()
    End Sub
    Partial Private Sub OnCostCentreChanging(value As String)
    End Sub
    Partial Private Sub OnCostCentreChanged()
    End Sub
    Partial Private Sub OnGivingTextChanging(value As String)
    End Sub
    Partial Private Sub OnGivingTextChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    Partial Private Sub OnNonCTCChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnNonCTCChanged()
    End Sub
    Partial Private Sub OnPrimeUserIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPrimeUserIdChanged()
    End Sub
    Partial Private Sub OnDisplayNameChanging(value As String)
    End Sub
    Partial Private Sub OnDisplayNameChanged()
    End Sub
    Partial Private Sub OnJobTitle1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnJobTitle1Changed()
    End Sub
    Partial Private Sub OnJobTitle2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnJobTitle2Changed()
    End Sub
    Partial Private Sub OnUserId1Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUserId1Changed()
    End Sub
    Partial Private Sub OnUSerId2Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUSerId2Changed()
    End Sub
    Partial Private Sub OnSpouseNameChanging(value As String)
    End Sub
    Partial Private Sub OnSpouseNameChanged()
    End Sub
    Partial Private Sub OnSpouseDOBChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSpouseDOBChanged()
    End Sub
    Partial Private Sub OnMaritalStatusChanging(value As String)
    End Sub
    Partial Private Sub OnMaritalStatusChanged()
    End Sub
    Partial Private Sub OnStaffTypeChanging(value As String)
    End Sub
    Partial Private Sub OnStaffTypeChanged()
    End Sub
    Partial Private Sub OnUnNamedStaffChanging(value As Boolean)
    End Sub
    Partial Private Sub OnUnNamedStaffChanged()
    End Sub
    Partial Private Sub OnExStaffChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnExStaffChanged()
    End Sub
    Partial Private Sub OnPersonalCostCentreChanging(value As String)
    End Sub
    Partial Private Sub OnPersonalCostCentreChanged()
    End Sub
    Partial Private Sub OnLeader11IdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLeader11IdChanged()
    End Sub
    Partial Private Sub OnLeader21IdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLeader21IdChanged()
    End Sub
    Partial Private Sub OnDelegate11IdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDelegate11IdChanged()
    End Sub
    Partial Private Sub OnDelegate21IdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDelegate21IdChanged()
    End Sub
    Partial Private Sub OnLeader12IdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLeader12IdChanged()
    End Sub
    Partial Private Sub OnLeader22IdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLeader22IdChanged()
    End Sub
    Partial Private Sub OnDelegate12IdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDelegate12IdChanged()
    End Sub
    Partial Private Sub OnDelegate22IdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDelegate22IdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffFinanceId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property StaffFinanceId() As Long
			Get
				Return Me._StaffFinanceId
			End Get
			Set
				If ((Me._StaffFinanceId = value)  _
							= false) Then
					Me.OnStaffFinanceIdChanging(value)
					Me.SendPropertyChanging
					Me._StaffFinanceId = value
					Me.SendPropertyChanged("StaffFinanceId")
					Me.OnStaffFinanceIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FamilyId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property FamilyId() As System.Nullable(Of Integer)
			Get
				Return Me._FamilyId
			End Get
			Set
				If (Me._FamilyId.Equals(value) = false) Then
					Me.OnFamilyIdChanging(value)
					Me.SendPropertyChanging
					Me._FamilyId = value
					Me.SendPropertyChanged("FamilyId")
					Me.OnFamilyIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrimeGetsEmails", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property PrimeGetsEmails() As Boolean
			Get
				Return Me._PrimeGetsEmails
			End Get
			Set
				If ((Me._PrimeGetsEmails = value)  _
							= false) Then
					Me.OnPrimeGetsEmailsChanging(value)
					Me.SendPropertyChanging
					Me._PrimeGetsEmails = value
					Me.SendPropertyChanged("PrimeGetsEmails")
					Me.OnPrimeGetsEmailsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OnlineGiving", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property OnlineGiving() As Boolean
			Get
				Return Me._OnlineGiving
			End Get
			Set
				If ((Me._OnlineGiving = value)  _
							= false) Then
					Me.OnOnlineGivingChanging(value)
					Me.SendPropertyChanging
					Me._OnlineGiving = value
					Me.SendPropertyChanged("OnlineGiving")
					Me.OnOnlineGivingChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GivingShortcut", DbType:="NVarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property GivingShortcut() As String
			Get
				Return Me._GivingShortcut
			End Get
			Set
				If (String.Equals(Me._GivingShortcut, value) = false) Then
					Me.OnGivingShortcutChanging(value)
					Me.SendPropertyChanging
					Me._GivingShortcut = value
					Me.SendPropertyChanged("GivingShortcut")
					Me.OnGivingShortcutChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DoNotContact", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property DoNotContact() As Boolean
			Get
				Return Me._DoNotContact
			End Get
			Set
				If ((Me._DoNotContact = value)  _
							= false) Then
					Me.OnDoNotContactChanging(value)
					Me.SendPropertyChanging
					Me._DoNotContact = value
					Me.SendPropertyChanged("DoNotContact")
					Me.OnDoNotContactChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hours1", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Hours1() As Short
			Get
				Return Me._Hours1
			End Get
			Set
				If ((Me._Hours1 = value)  _
							= false) Then
					Me.OnHours1Changing(value)
					Me.SendPropertyChanging
					Me._Hours1 = value
					Me.SendPropertyChanged("Hours1")
					Me.OnHours1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hours2", DbType:="SmallInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Hours2() As System.Nullable(Of Short)
			Get
				Return Me._Hours2
			End Get
			Set
				If (Me._Hours2.Equals(value) = false) Then
					Me.OnHours2Changing(value)
					Me.SendPropertyChanging
					Me._Hours2 = value
					Me.SendPropertyChanged("Hours2")
					Me.OnHours2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LondonFactor", DbType:="Float"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property LondonFactor() As System.Nullable(Of Double)
			Get
				Return Me._LondonFactor
			End Get
			Set
				If (Me._LondonFactor.Equals(value) = false) Then
					Me.OnLondonFactorChanging(value)
					Me.SendPropertyChanging
					Me._LondonFactor = value
					Me.SendPropertyChanged("LondonFactor")
					Me.OnLondonFactorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Single", Storage:="_Single", DbType:="Bit"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property [Single]() As System.Nullable(Of Boolean)
			Get
				Return Me._Single
			End Get
			Set
				If (Me._Single.Equals(value) = false) Then
					Me.OnSingleChanging(value)
					Me.SendPropertyChanging
					Me._Single = value
					Me.SendPropertyChanged("[Single]")
					Me.OnSingleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCentre", DbType:="VarChar(4)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property CostCentre() As String
			Get
				Return Me._CostCentre
			End Get
			Set
				If (String.Equals(Me._CostCentre, value) = false) Then
					Me.OnCostCentreChanging(value)
					Me.SendPropertyChanging
					Me._CostCentre = value
					Me.SendPropertyChanged("CostCentre")
					Me.OnCostCentreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GivingText", DbType:="NVarChar(MAX)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property GivingText() As String
			Get
				Return Me._GivingText
			End Get
			Set
				If (String.Equals(Me._GivingText, value) = false) Then
					Me.OnGivingTextChanging(value)
					Me.SendPropertyChanging
					Me._GivingText = value
					Me.SendPropertyChanged("GivingText")
					Me.OnGivingTextChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="SmallInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property PortalId() As System.Nullable(Of Short)
			Get
				Return Me._PortalId
			End Get
			Set
				If (Me._PortalId.Equals(value) = false) Then
					Me.OnPortalIdChanging(value)
					Me.SendPropertyChanging
					Me._PortalId = value
					Me.SendPropertyChanged("PortalId")
					Me.OnPortalIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NonCTC", DbType:="TinyInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property NonCTC() As System.Nullable(Of Byte)
			Get
				Return Me._NonCTC
			End Get
			Set
				If (Me._NonCTC.Equals(value) = false) Then
					Me.OnNonCTCChanging(value)
					Me.SendPropertyChanging
					Me._NonCTC = value
					Me.SendPropertyChanged("NonCTC")
					Me.OnNonCTCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrimeUserId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
		Public Property PrimeUserId() As System.Nullable(Of Integer)
			Get
				Return Me._PrimeUserId
			End Get
			Set
				If (Me._PrimeUserId.Equals(value) = false) Then
					Me.OnPrimeUserIdChanging(value)
					Me.SendPropertyChanging
					Me._PrimeUserId = value
					Me.SendPropertyChanged("PrimeUserId")
					Me.OnPrimeUserIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayName", DbType:="NVarChar(60)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16)>  _
		Public Property DisplayName() As String
			Get
				Return Me._DisplayName
			End Get
			Set
				If (String.Equals(Me._DisplayName, value) = false) Then
					Me.OnDisplayNameChanging(value)
					Me.SendPropertyChanging
					Me._DisplayName = value
					Me.SendPropertyChanged("DisplayName")
					Me.OnDisplayNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobTitle1", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=17)>  _
		Public Property JobTitle1() As System.Nullable(Of Integer)
			Get
				Return Me._JobTitle1
			End Get
			Set
				If (Me._JobTitle1.Equals(value) = false) Then
					Me.OnJobTitle1Changing(value)
					Me.SendPropertyChanging
					Me._JobTitle1 = value
					Me.SendPropertyChanged("JobTitle1")
					Me.OnJobTitle1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JobTitle2", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=18)>  _
		Public Property JobTitle2() As System.Nullable(Of Integer)
			Get
				Return Me._JobTitle2
			End Get
			Set
				If (Me._JobTitle2.Equals(value) = false) Then
					Me.OnJobTitle2Changing(value)
					Me.SendPropertyChanging
					Me._JobTitle2 = value
					Me.SendPropertyChanged("JobTitle2")
					Me.OnJobTitle2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId1", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=19)>  _
		Public Property UserId1() As System.Nullable(Of Integer)
			Get
				Return Me._UserId1
			End Get
			Set
				If (Me._UserId1.Equals(value) = false) Then
					Me.OnUserId1Changing(value)
					Me.SendPropertyChanging
					Me._UserId1 = value
					Me.SendPropertyChanged("UserId1")
					Me.OnUserId1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_USerId2", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=20)>  _
		Public Property USerId2() As System.Nullable(Of Integer)
			Get
				Return Me._USerId2
			End Get
			Set
				If (Me._USerId2.Equals(value) = false) Then
					Me.OnUSerId2Changing(value)
					Me.SendPropertyChanging
					Me._USerId2 = value
					Me.SendPropertyChanged("USerId2")
					Me.OnUSerId2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpouseName", DbType:="NVarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=21)>  _
		Public Property SpouseName() As String
			Get
				Return Me._SpouseName
			End Get
			Set
				If (String.Equals(Me._SpouseName, value) = false) Then
					Me.OnSpouseNameChanging(value)
					Me.SendPropertyChanging
					Me._SpouseName = value
					Me.SendPropertyChanged("SpouseName")
					Me.OnSpouseNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpouseDOB", DbType:="Date"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=22)>  _
		Public Property SpouseDOB() As System.Nullable(Of Date)
			Get
				Return Me._SpouseDOB
			End Get
			Set
				If (Me._SpouseDOB.Equals(value) = false) Then
					Me.OnSpouseDOBChanging(value)
					Me.SendPropertyChanging
					Me._SpouseDOB = value
					Me.SendPropertyChanged("SpouseDOB")
					Me.OnSpouseDOBChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MaritalStatus", DbType:="VarChar(8)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=23)>  _
		Public Property MaritalStatus() As String
			Get
				Return Me._MaritalStatus
			End Get
			Set
				If (String.Equals(Me._MaritalStatus, value) = false) Then
					Me.OnMaritalStatusChanging(value)
					Me.SendPropertyChanging
					Me._MaritalStatus = value
					Me.SendPropertyChanged("MaritalStatus")
					Me.OnMaritalStatusChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffType", DbType:="VarChar(20)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=24)>  _
		Public Property StaffType() As String
			Get
				Return Me._StaffType
			End Get
			Set
				If (String.Equals(Me._StaffType, value) = false) Then
					Me.OnStaffTypeChanging(value)
					Me.SendPropertyChanging
					Me._StaffType = value
					Me.SendPropertyChanged("StaffType")
					Me.OnStaffTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UnNamedStaff", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=25)>  _
		Public Property UnNamedStaff() As Boolean
			Get
				Return Me._UnNamedStaff
			End Get
			Set
				If ((Me._UnNamedStaff = value)  _
							= false) Then
					Me.OnUnNamedStaffChanging(value)
					Me.SendPropertyChanging
					Me._UnNamedStaff = value
					Me.SendPropertyChanged("UnNamedStaff")
					Me.OnUnNamedStaffChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExStaff", DbType:="Bit"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=26)>  _
		Public Property ExStaff() As System.Nullable(Of Boolean)
			Get
				Return Me._ExStaff
			End Get
			Set
				If (Me._ExStaff.Equals(value) = false) Then
					Me.OnExStaffChanging(value)
					Me.SendPropertyChanging
					Me._ExStaff = value
					Me.SendPropertyChanged("ExStaff")
					Me.OnExStaffChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PersonalCostCentre", DbType:="VarChar(3)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=27)>  _
		Public Property PersonalCostCentre() As String
			Get
				Return Me._PersonalCostCentre
			End Get
			Set
				If (String.Equals(Me._PersonalCostCentre, value) = false) Then
					Me.OnPersonalCostCentreChanging(value)
					Me.SendPropertyChanging
					Me._PersonalCostCentre = value
					Me.SendPropertyChanged("PersonalCostCentre")
					Me.OnPersonalCostCentreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Leader11Id", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=28)>  _
		Public Property Leader11Id() As System.Nullable(Of Integer)
			Get
				Return Me._Leader11Id
			End Get
			Set
				If (Me._Leader11Id.Equals(value) = false) Then
					Me.OnLeader11IdChanging(value)
					Me.SendPropertyChanging
					Me._Leader11Id = value
					Me.SendPropertyChanged("Leader11Id")
					Me.OnLeader11IdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Leader21Id", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=29)>  _
		Public Property Leader21Id() As System.Nullable(Of Integer)
			Get
				Return Me._Leader21Id
			End Get
			Set
				If (Me._Leader21Id.Equals(value) = false) Then
					Me.OnLeader21IdChanging(value)
					Me.SendPropertyChanging
					Me._Leader21Id = value
					Me.SendPropertyChanged("Leader21Id")
					Me.OnLeader21IdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Delegate11Id", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=30)>  _
		Public Property Delegate11Id() As System.Nullable(Of Integer)
			Get
				Return Me._Delegate11Id
			End Get
			Set
				If (Me._Delegate11Id.Equals(value) = false) Then
					Me.OnDelegate11IdChanging(value)
					Me.SendPropertyChanging
					Me._Delegate11Id = value
					Me.SendPropertyChanged("Delegate11Id")
					Me.OnDelegate11IdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Delegate21Id", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=31)>  _
		Public Property Delegate21Id() As System.Nullable(Of Integer)
			Get
				Return Me._Delegate21Id
			End Get
			Set
				If (Me._Delegate21Id.Equals(value) = false) Then
					Me.OnDelegate21IdChanging(value)
					Me.SendPropertyChanging
					Me._Delegate21Id = value
					Me.SendPropertyChanged("Delegate21Id")
					Me.OnDelegate21IdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Leader12Id", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=32)>  _
		Public Property Leader12Id() As System.Nullable(Of Integer)
			Get
				Return Me._Leader12Id
			End Get
			Set
				If (Me._Leader12Id.Equals(value) = false) Then
					Me.OnLeader12IdChanging(value)
					Me.SendPropertyChanging
					Me._Leader12Id = value
					Me.SendPropertyChanged("Leader12Id")
					Me.OnLeader12IdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Leader22Id", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=33)>  _
		Public Property Leader22Id() As System.Nullable(Of Integer)
			Get
				Return Me._Leader22Id
			End Get
			Set
				If (Me._Leader22Id.Equals(value) = false) Then
					Me.OnLeader22IdChanging(value)
					Me.SendPropertyChanging
					Me._Leader22Id = value
					Me.SendPropertyChanged("Leader22Id")
					Me.OnLeader22IdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Delegate12Id", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=34)>  _
		Public Property Delegate12Id() As System.Nullable(Of Integer)
			Get
				Return Me._Delegate12Id
			End Get
			Set
				If (Me._Delegate12Id.Equals(value) = false) Then
					Me.OnDelegate12IdChanging(value)
					Me.SendPropertyChanging
					Me._Delegate12Id = value
					Me.SendPropertyChanged("Delegate12Id")
					Me.OnDelegate12IdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Delegate22Id", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=35)>  _
		Public Property Delegate22Id() As System.Nullable(Of Integer)
			Get
				Return Me._Delegate22Id
			End Get
			Set
				If (Me._Delegate22Id.Equals(value) = false) Then
					Me.OnDelegate22IdChanging(value)
					Me.SendPropertyChanging
					Me._Delegate22Id = value
					Me.SendPropertyChanged("Delegate22Id")
					Me.OnDelegate22IdChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Staff_Rmb"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Staff_Rmb
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _RMBNo As Long
		
		Private _UserId As System.Nullable(Of Integer)
		
		Private _CostCenter As String
		
		Private _UserRef As String
		
		Private _RmbDate As System.Nullable(Of Date)
		
		Private _Status As System.Nullable(Of Integer)
		
		Private _UserComment As String
		
		Private _ApprComment As String
		
		Private _AcctComment As String
		
		Private _ApprUserId As System.Nullable(Of Integer)
		
		Private _Locked As System.Nullable(Of Boolean)
		
		Private _PortalId As System.Nullable(Of Integer)
		
		Private _ApprDate As System.Nullable(Of Date)
		
		Private _ProcDate As System.Nullable(Of Date)
		
		Private _Period As System.Nullable(Of Byte)
		
		Private _Year As System.Nullable(Of Short)
		
		Private _SupplierCode As String
		
		Private _EmailSent As System.Nullable(Of Boolean)
		
		Private _Changed As System.Nullable(Of Boolean)
		
		Private _PersonalCC As String
		
		Private _AdvanceRequest As System.Nullable(Of Decimal)
		
		Private _Agape_Staff_RmbLines As EntitySet(Of Agape_Staff_RmbLine)
		
		Private _Agape_Staff_Rmb_Status As EntityRef(Of Agape_Staff_Rmb_Status)
		
		Private serializing As Boolean
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRMBNoChanging(value As Long)
    End Sub
    Partial Private Sub OnRMBNoChanged()
    End Sub
    Partial Private Sub OnUserIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUserIdChanged()
    End Sub
    Partial Private Sub OnCostCenterChanging(value As String)
    End Sub
    Partial Private Sub OnCostCenterChanged()
    End Sub
    Partial Private Sub OnUserRefChanging(value As String)
    End Sub
    Partial Private Sub OnUserRefChanged()
    End Sub
    Partial Private Sub OnRmbDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRmbDateChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnUserCommentChanging(value As String)
    End Sub
    Partial Private Sub OnUserCommentChanged()
    End Sub
    Partial Private Sub OnApprCommentChanging(value As String)
    End Sub
    Partial Private Sub OnApprCommentChanged()
    End Sub
    Partial Private Sub OnAcctCommentChanging(value As String)
    End Sub
    Partial Private Sub OnAcctCommentChanged()
    End Sub
    Partial Private Sub OnApprUserIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnApprUserIdChanged()
    End Sub
    Partial Private Sub OnLockedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnLockedChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    Partial Private Sub OnApprDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnApprDateChanged()
    End Sub
    Partial Private Sub OnProcDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnProcDateChanged()
    End Sub
    Partial Private Sub OnPeriodChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnPeriodChanged()
    End Sub
    Partial Private Sub OnYearChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnYearChanged()
    End Sub
    Partial Private Sub OnSupplierCodeChanging(value As String)
    End Sub
    Partial Private Sub OnSupplierCodeChanged()
    End Sub
    Partial Private Sub OnEmailSentChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnEmailSentChanged()
    End Sub
    Partial Private Sub OnChangedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnChangedChanged()
    End Sub
    Partial Private Sub OnPersonalCCChanging(value As String)
    End Sub
    Partial Private Sub OnPersonalCCChanged()
    End Sub
    Partial Private Sub OnAdvanceRequestChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAdvanceRequestChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RMBNo", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property RMBNo() As Long
			Get
				Return Me._RMBNo
			End Get
			Set
				If ((Me._RMBNo = value)  _
							= false) Then
					Me.OnRMBNoChanging(value)
					Me.SendPropertyChanging
					Me._RMBNo = value
					Me.SendPropertyChanged("RMBNo")
					Me.OnRMBNoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property UserId() As System.Nullable(Of Integer)
			Get
				Return Me._UserId
			End Get
			Set
				If (Me._UserId.Equals(value) = false) Then
					Me.OnUserIdChanging(value)
					Me.SendPropertyChanging
					Me._UserId = value
					Me.SendPropertyChanged("UserId")
					Me.OnUserIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCenter", DbType:="NVarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property CostCenter() As String
			Get
				Return Me._CostCenter
			End Get
			Set
				If (String.Equals(Me._CostCenter, value) = false) Then
					Me.OnCostCenterChanging(value)
					Me.SendPropertyChanging
					Me._CostCenter = value
					Me.SendPropertyChanged("CostCenter")
					Me.OnCostCenterChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserRef", DbType:="NVarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property UserRef() As String
			Get
				Return Me._UserRef
			End Get
			Set
				If (String.Equals(Me._UserRef, value) = false) Then
					Me.OnUserRefChanging(value)
					Me.SendPropertyChanging
					Me._UserRef = value
					Me.SendPropertyChanged("UserRef")
					Me.OnUserRefChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RmbDate", DbType:="DateTime"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property RmbDate() As System.Nullable(Of Date)
			Get
				Return Me._RmbDate
			End Get
			Set
				If (Me._RmbDate.Equals(value) = false) Then
					Me.OnRmbDateChanging(value)
					Me.SendPropertyChanging
					Me._RmbDate = value
					Me.SendPropertyChanged("RmbDate")
					Me.OnRmbDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Status() As System.Nullable(Of Integer)
			Get
				Return Me._Status
			End Get
			Set
				If (Me._Status.Equals(value) = false) Then
					If Me._Agape_Staff_Rmb_Status.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnStatusChanging(value)
					Me.SendPropertyChanging
					Me._Status = value
					Me.SendPropertyChanged("Status")
					Me.OnStatusChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserComment", DbType:="NVarChar(MAX)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property UserComment() As String
			Get
				Return Me._UserComment
			End Get
			Set
				If (String.Equals(Me._UserComment, value) = false) Then
					Me.OnUserCommentChanging(value)
					Me.SendPropertyChanging
					Me._UserComment = value
					Me.SendPropertyChanged("UserComment")
					Me.OnUserCommentChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprComment", DbType:="NVarChar(MAX)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property ApprComment() As String
			Get
				Return Me._ApprComment
			End Get
			Set
				If (String.Equals(Me._ApprComment, value) = false) Then
					Me.OnApprCommentChanging(value)
					Me.SendPropertyChanging
					Me._ApprComment = value
					Me.SendPropertyChanged("ApprComment")
					Me.OnApprCommentChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AcctComment", DbType:="NVarChar(MAX)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property AcctComment() As String
			Get
				Return Me._AcctComment
			End Get
			Set
				If (String.Equals(Me._AcctComment, value) = false) Then
					Me.OnAcctCommentChanging(value)
					Me.SendPropertyChanging
					Me._AcctComment = value
					Me.SendPropertyChanged("AcctComment")
					Me.OnAcctCommentChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprUserId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property ApprUserId() As System.Nullable(Of Integer)
			Get
				Return Me._ApprUserId
			End Get
			Set
				If (Me._ApprUserId.Equals(value) = false) Then
					Me.OnApprUserIdChanging(value)
					Me.SendPropertyChanging
					Me._ApprUserId = value
					Me.SendPropertyChanged("ApprUserId")
					Me.OnApprUserIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Locked", DbType:="Bit"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property Locked() As System.Nullable(Of Boolean)
			Get
				Return Me._Locked
			End Get
			Set
				If (Me._Locked.Equals(value) = false) Then
					Me.OnLockedChanging(value)
					Me.SendPropertyChanging
					Me._Locked = value
					Me.SendPropertyChanged("Locked")
					Me.OnLockedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property PortalId() As System.Nullable(Of Integer)
			Get
				Return Me._PortalId
			End Get
			Set
				If (Me._PortalId.Equals(value) = false) Then
					Me.OnPortalIdChanging(value)
					Me.SendPropertyChanging
					Me._PortalId = value
					Me.SendPropertyChanged("PortalId")
					Me.OnPortalIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprDate", DbType:="Date"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property ApprDate() As System.Nullable(Of Date)
			Get
				Return Me._ApprDate
			End Get
			Set
				If (Me._ApprDate.Equals(value) = false) Then
					Me.OnApprDateChanging(value)
					Me.SendPropertyChanging
					Me._ApprDate = value
					Me.SendPropertyChanged("ApprDate")
					Me.OnApprDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProcDate", DbType:="Date"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property ProcDate() As System.Nullable(Of Date)
			Get
				Return Me._ProcDate
			End Get
			Set
				If (Me._ProcDate.Equals(value) = false) Then
					Me.OnProcDateChanging(value)
					Me.SendPropertyChanging
					Me._ProcDate = value
					Me.SendPropertyChanged("ProcDate")
					Me.OnProcDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Period", DbType:="TinyInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
		Public Property Period() As System.Nullable(Of Byte)
			Get
				Return Me._Period
			End Get
			Set
				If (Me._Period.Equals(value) = false) Then
					Me.OnPeriodChanging(value)
					Me.SendPropertyChanging
					Me._Period = value
					Me.SendPropertyChanged("Period")
					Me.OnPeriodChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year", DbType:="SmallInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16)>  _
		Public Property Year() As System.Nullable(Of Short)
			Get
				Return Me._Year
			End Get
			Set
				If (Me._Year.Equals(value) = false) Then
					Me.OnYearChanging(value)
					Me.SendPropertyChanging
					Me._Year = value
					Me.SendPropertyChanged("Year")
					Me.OnYearChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SupplierCode", DbType:="VarChar(8)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=17)>  _
		Public Property SupplierCode() As String
			Get
				Return Me._SupplierCode
			End Get
			Set
				If (String.Equals(Me._SupplierCode, value) = false) Then
					Me.OnSupplierCodeChanging(value)
					Me.SendPropertyChanging
					Me._SupplierCode = value
					Me.SendPropertyChanged("SupplierCode")
					Me.OnSupplierCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmailSent", DbType:="Bit"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=18)>  _
		Public Property EmailSent() As System.Nullable(Of Boolean)
			Get
				Return Me._EmailSent
			End Get
			Set
				If (Me._EmailSent.Equals(value) = false) Then
					Me.OnEmailSentChanging(value)
					Me.SendPropertyChanging
					Me._EmailSent = value
					Me.SendPropertyChanged("EmailSent")
					Me.OnEmailSentChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Changed", DbType:="Bit"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=19)>  _
		Public Property Changed() As System.Nullable(Of Boolean)
			Get
				Return Me._Changed
			End Get
			Set
				If (Me._Changed.Equals(value) = false) Then
					Me.OnChangedChanging(value)
					Me.SendPropertyChanging
					Me._Changed = value
					Me.SendPropertyChanged("Changed")
					Me.OnChangedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PersonalCC", DbType:="VarChar(4)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=20)>  _
		Public Property PersonalCC() As String
			Get
				Return Me._PersonalCC
			End Get
			Set
				If (String.Equals(Me._PersonalCC, value) = false) Then
					Me.OnPersonalCCChanging(value)
					Me.SendPropertyChanging
					Me._PersonalCC = value
					Me.SendPropertyChanged("PersonalCC")
					Me.OnPersonalCCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdvanceRequest", DbType:="Money"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=21)>  _
		Public Property AdvanceRequest() As System.Nullable(Of Decimal)
			Get
				Return Me._AdvanceRequest
			End Get
			Set
				If (Me._AdvanceRequest.Equals(value) = false) Then
					Me.OnAdvanceRequestChanging(value)
					Me.SendPropertyChanging
					Me._AdvanceRequest = value
					Me.SendPropertyChanged("AdvanceRequest")
					Me.OnAdvanceRequestChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Agape_Staff_Rmb_Agape_Staff_RmbLine", Storage:="_Agape_Staff_RmbLines", ThisKey:="RMBNo", OtherKey:="RmbNo"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=22, EmitDefaultValue:=false)>  _
		Public Property Agape_Staff_RmbLines() As EntitySet(Of Agape_Staff_RmbLine)
			Get
				If (Me.serializing  _
							AndAlso (Me._Agape_Staff_RmbLines.HasLoadedOrAssignedValues = false)) Then
					Return Nothing
				End If
				Return Me._Agape_Staff_RmbLines
			End Get
			Set
				Me._Agape_Staff_RmbLines.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Agape_Staff_Rmb_Status_Agape_Staff_Rmb", Storage:="_Agape_Staff_Rmb_Status", ThisKey:="Status", OtherKey:="StatusId", IsForeignKey:=true)>  _
		Public Property Agape_Staff_Rmb_Status() As Agape_Staff_Rmb_Status
			Get
				Return Me._Agape_Staff_Rmb_Status.Entity
			End Get
			Set
				Dim previousValue As Agape_Staff_Rmb_Status = Me._Agape_Staff_Rmb_Status.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Agape_Staff_Rmb_Status.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Agape_Staff_Rmb_Status.Entity = Nothing
						previousValue.Agape_Staff_Rmbs.Remove(Me)
					End If
					Me._Agape_Staff_Rmb_Status.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.Agape_Staff_Rmbs.Add(Me)
						Me._Status = value.StatusId
					Else
						Me._Status = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("Agape_Staff_Rmb_Status")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_Agape_Staff_RmbLines(ByVal entity As Agape_Staff_RmbLine)
			Me.SendPropertyChanging
			entity.Agape_Staff_Rmb = Me
		End Sub
		
		Private Sub detach_Agape_Staff_RmbLines(ByVal entity As Agape_Staff_RmbLine)
			Me.SendPropertyChanging
			entity.Agape_Staff_Rmb = Nothing
		End Sub
		
		Private Sub Initialize()
			Me._Agape_Staff_RmbLines = New EntitySet(Of Agape_Staff_RmbLine)(AddressOf Me.attach_Agape_Staff_RmbLines, AddressOf Me.detach_Agape_Staff_RmbLines)
			Me._Agape_Staff_Rmb_Status = CType(Nothing, EntityRef(Of Agape_Staff_Rmb_Status))
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerializing(ByVal context As StreamingContext)
			Me.serializing = true
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializedAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerialized(ByVal context As StreamingContext)
			Me.serializing = false
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Main_AvailableCostCentre"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Main_AvailableCostCentre
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _AvailableCostCentreId As Integer
		
		Private _CostCentreName As String
		
		Private _CostCentreCode As String
		
		Private _CostCentreManagerId As System.Nullable(Of Integer)
		
		Private _DonateTo As System.Nullable(Of Boolean)
		
		Private _PayType As String
		
		Private _GivingShortcut As String
		
		Private _GivingText As String
		
		Private _CostCentreManagerLocalId As System.Nullable(Of Integer)
		
		Private _ChargeTo As System.Nullable(Of Boolean)
		
		Private _BudgetCurrentYear As System.Nullable(Of Decimal)
		
		Private _BalanceYTD As System.Nullable(Of Decimal)
		
		Private _CanRmb As System.Nullable(Of Boolean)
		
		Private _DelegateManagerId As System.Nullable(Of Integer)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAvailableCostCentreIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnAvailableCostCentreIdChanged()
    End Sub
    Partial Private Sub OnCostCentreNameChanging(value As String)
    End Sub
    Partial Private Sub OnCostCentreNameChanged()
    End Sub
    Partial Private Sub OnCostCentreCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCostCentreCodeChanged()
    End Sub
    Partial Private Sub OnCostCentreManagerIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCostCentreManagerIdChanged()
    End Sub
    Partial Private Sub OnDonateToChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnDonateToChanged()
    End Sub
    Partial Private Sub OnPayTypeChanging(value As String)
    End Sub
    Partial Private Sub OnPayTypeChanged()
    End Sub
    Partial Private Sub OnGivingShortcutChanging(value As String)
    End Sub
    Partial Private Sub OnGivingShortcutChanged()
    End Sub
    Partial Private Sub OnGivingTextChanging(value As String)
    End Sub
    Partial Private Sub OnGivingTextChanged()
    End Sub
    Partial Private Sub OnCostCentreManagerLocalIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCostCentreManagerLocalIdChanged()
    End Sub
    Partial Private Sub OnChargeToChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnChargeToChanged()
    End Sub
    Partial Private Sub OnBudgetCurrentYearChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBudgetCurrentYearChanged()
    End Sub
    Partial Private Sub OnBalanceYTDChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnBalanceYTDChanged()
    End Sub
    Partial Private Sub OnCanRmbChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnCanRmbChanged()
    End Sub
    Partial Private Sub OnDelegateManagerIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDelegateManagerIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AvailableCostCentreId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property AvailableCostCentreId() As Integer
			Get
				Return Me._AvailableCostCentreId
			End Get
			Set
				If ((Me._AvailableCostCentreId = value)  _
							= false) Then
					Me.OnAvailableCostCentreIdChanging(value)
					Me.SendPropertyChanging
					Me._AvailableCostCentreId = value
					Me.SendPropertyChanged("AvailableCostCentreId")
					Me.OnAvailableCostCentreIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCentreName", DbType:="VarChar(400)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property CostCentreName() As String
			Get
				Return Me._CostCentreName
			End Get
			Set
				If (String.Equals(Me._CostCentreName, value) = false) Then
					Me.OnCostCentreNameChanging(value)
					Me.SendPropertyChanging
					Me._CostCentreName = value
					Me.SendPropertyChanged("CostCentreName")
					Me.OnCostCentreNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCentreCode", DbType:="VarChar(4)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property CostCentreCode() As String
			Get
				Return Me._CostCentreCode
			End Get
			Set
				If (String.Equals(Me._CostCentreCode, value) = false) Then
					Me.OnCostCentreCodeChanging(value)
					Me.SendPropertyChanging
					Me._CostCentreCode = value
					Me.SendPropertyChanged("CostCentreCode")
					Me.OnCostCentreCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCentreManagerId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property CostCentreManagerId() As System.Nullable(Of Integer)
			Get
				Return Me._CostCentreManagerId
			End Get
			Set
				If (Me._CostCentreManagerId.Equals(value) = false) Then
					Me.OnCostCentreManagerIdChanging(value)
					Me.SendPropertyChanging
					Me._CostCentreManagerId = value
					Me.SendPropertyChanged("CostCentreManagerId")
					Me.OnCostCentreManagerIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DonateTo", DbType:="Bit"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property DonateTo() As System.Nullable(Of Boolean)
			Get
				Return Me._DonateTo
			End Get
			Set
				If (Me._DonateTo.Equals(value) = false) Then
					Me.OnDonateToChanging(value)
					Me.SendPropertyChanging
					Me._DonateTo = value
					Me.SendPropertyChanged("DonateTo")
					Me.OnDonateToChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayType", DbType:="VarChar(10)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property PayType() As String
			Get
				Return Me._PayType
			End Get
			Set
				If (String.Equals(Me._PayType, value) = false) Then
					Me.OnPayTypeChanging(value)
					Me.SendPropertyChanging
					Me._PayType = value
					Me.SendPropertyChanged("PayType")
					Me.OnPayTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GivingShortcut", DbType:="VarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property GivingShortcut() As String
			Get
				Return Me._GivingShortcut
			End Get
			Set
				If (String.Equals(Me._GivingShortcut, value) = false) Then
					Me.OnGivingShortcutChanging(value)
					Me.SendPropertyChanging
					Me._GivingShortcut = value
					Me.SendPropertyChanged("GivingShortcut")
					Me.OnGivingShortcutChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GivingText", DbType:="VarChar(MAX)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property GivingText() As String
			Get
				Return Me._GivingText
			End Get
			Set
				If (String.Equals(Me._GivingText, value) = false) Then
					Me.OnGivingTextChanging(value)
					Me.SendPropertyChanging
					Me._GivingText = value
					Me.SendPropertyChanged("GivingText")
					Me.OnGivingTextChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCentreManagerLocalId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property CostCentreManagerLocalId() As System.Nullable(Of Integer)
			Get
				Return Me._CostCentreManagerLocalId
			End Get
			Set
				If (Me._CostCentreManagerLocalId.Equals(value) = false) Then
					Me.OnCostCentreManagerLocalIdChanging(value)
					Me.SendPropertyChanging
					Me._CostCentreManagerLocalId = value
					Me.SendPropertyChanged("CostCentreManagerLocalId")
					Me.OnCostCentreManagerLocalIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChargeTo", DbType:="Bit"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property ChargeTo() As System.Nullable(Of Boolean)
			Get
				Return Me._ChargeTo
			End Get
			Set
				If (Me._ChargeTo.Equals(value) = false) Then
					Me.OnChargeToChanging(value)
					Me.SendPropertyChanging
					Me._ChargeTo = value
					Me.SendPropertyChanged("ChargeTo")
					Me.OnChargeToChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BudgetCurrentYear", DbType:="Money"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property BudgetCurrentYear() As System.Nullable(Of Decimal)
			Get
				Return Me._BudgetCurrentYear
			End Get
			Set
				If (Me._BudgetCurrentYear.Equals(value) = false) Then
					Me.OnBudgetCurrentYearChanging(value)
					Me.SendPropertyChanging
					Me._BudgetCurrentYear = value
					Me.SendPropertyChanged("BudgetCurrentYear")
					Me.OnBudgetCurrentYearChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BalanceYTD", DbType:="Money"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property BalanceYTD() As System.Nullable(Of Decimal)
			Get
				Return Me._BalanceYTD
			End Get
			Set
				If (Me._BalanceYTD.Equals(value) = false) Then
					Me.OnBalanceYTDChanging(value)
					Me.SendPropertyChanging
					Me._BalanceYTD = value
					Me.SendPropertyChanged("BalanceYTD")
					Me.OnBalanceYTDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CanRmb", DbType:="Bit"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property CanRmb() As System.Nullable(Of Boolean)
			Get
				Return Me._CanRmb
			End Get
			Set
				If (Me._CanRmb.Equals(value) = false) Then
					Me.OnCanRmbChanging(value)
					Me.SendPropertyChanging
					Me._CanRmb = value
					Me.SendPropertyChanged("CanRmb")
					Me.OnCanRmbChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DelegateManagerId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property DelegateManagerId() As System.Nullable(Of Integer)
			Get
				Return Me._DelegateManagerId
			End Get
			Set
				If (Me._DelegateManagerId.Equals(value) = false) Then
					Me.OnDelegateManagerIdChanging(value)
					Me.SendPropertyChanging
					Me._DelegateManagerId = value
					Me.SendPropertyChanged("DelegateManagerId")
					Me.OnDelegateManagerIdChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Main_Projectee"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Main_Projectee
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ProjecteeId As Integer
		
		Private _UserId As System.Nullable(Of Integer)
		
		Private _DisplayName As String
		
		Private _Paytype As String
		
		Private _Target As System.Nullable(Of Decimal)
		
		Private _Active As System.Nullable(Of Boolean)
		
		Private _ProjectId As System.Nullable(Of Integer)
		
		Private _Agape_Main_ProjectDonations As EntitySet(Of Agape_Main_ProjectDonation)
		
		Private _Agape_Main_Project As EntityRef(Of Agape_Main_Project)
		
		Private serializing As Boolean
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnProjecteeIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnProjecteeIdChanged()
    End Sub
    Partial Private Sub OnUserIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUserIdChanged()
    End Sub
    Partial Private Sub OnDisplayNameChanging(value As String)
    End Sub
    Partial Private Sub OnDisplayNameChanged()
    End Sub
    Partial Private Sub OnPaytypeChanging(value As String)
    End Sub
    Partial Private Sub OnPaytypeChanged()
    End Sub
    Partial Private Sub OnTargetChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTargetChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnProjectIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProjectIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjecteeId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property ProjecteeId() As Integer
			Get
				Return Me._ProjecteeId
			End Get
			Set
				If ((Me._ProjecteeId = value)  _
							= false) Then
					Me.OnProjecteeIdChanging(value)
					Me.SendPropertyChanging
					Me._ProjecteeId = value
					Me.SendPropertyChanged("ProjecteeId")
					Me.OnProjecteeIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property UserId() As System.Nullable(Of Integer)
			Get
				Return Me._UserId
			End Get
			Set
				If (Me._UserId.Equals(value) = false) Then
					Me.OnUserIdChanging(value)
					Me.SendPropertyChanging
					Me._UserId = value
					Me.SendPropertyChanged("UserId")
					Me.OnUserIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayName", DbType:="NVarChar(150)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property DisplayName() As String
			Get
				Return Me._DisplayName
			End Get
			Set
				If (String.Equals(Me._DisplayName, value) = false) Then
					Me.OnDisplayNameChanging(value)
					Me.SendPropertyChanging
					Me._DisplayName = value
					Me.SendPropertyChanged("DisplayName")
					Me.OnDisplayNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Paytype", DbType:="NVarChar(30)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Paytype() As String
			Get
				Return Me._Paytype
			End Get
			Set
				If (String.Equals(Me._Paytype, value) = false) Then
					Me.OnPaytypeChanging(value)
					Me.SendPropertyChanging
					Me._Paytype = value
					Me.SendPropertyChanged("Paytype")
					Me.OnPaytypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Target", DbType:="Money"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Target() As System.Nullable(Of Decimal)
			Get
				Return Me._Target
			End Get
			Set
				If (Me._Target.Equals(value) = false) Then
					Me.OnTargetChanging(value)
					Me.SendPropertyChanging
					Me._Target = value
					Me.SendPropertyChanged("Target")
					Me.OnTargetChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="Bit"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Active() As System.Nullable(Of Boolean)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property ProjectId() As System.Nullable(Of Integer)
			Get
				Return Me._ProjectId
			End Get
			Set
				If (Me._ProjectId.Equals(value) = false) Then
					If Me._Agape_Main_Project.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnProjectIdChanging(value)
					Me.SendPropertyChanging
					Me._ProjectId = value
					Me.SendPropertyChanged("ProjectId")
					Me.OnProjectIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Agape_Main_Projectee_Agape_Main_ProjectDonation", Storage:="_Agape_Main_ProjectDonations", ThisKey:="ProjecteeId", OtherKey:="ProjecteeId"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8, EmitDefaultValue:=false)>  _
		Public Property Agape_Main_ProjectDonations() As EntitySet(Of Agape_Main_ProjectDonation)
			Get
				If (Me.serializing  _
							AndAlso (Me._Agape_Main_ProjectDonations.HasLoadedOrAssignedValues = false)) Then
					Return Nothing
				End If
				Return Me._Agape_Main_ProjectDonations
			End Get
			Set
				Me._Agape_Main_ProjectDonations.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Agape_Main_Project_Agape_Main_Projectee", Storage:="_Agape_Main_Project", ThisKey:="ProjectId", OtherKey:="ProjectID", IsForeignKey:=true)>  _
		Public Property Agape_Main_Project() As Agape_Main_Project
			Get
				Return Me._Agape_Main_Project.Entity
			End Get
			Set
				Dim previousValue As Agape_Main_Project = Me._Agape_Main_Project.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Agape_Main_Project.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Agape_Main_Project.Entity = Nothing
						previousValue.Agape_Main_Projectees.Remove(Me)
					End If
					Me._Agape_Main_Project.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.Agape_Main_Projectees.Add(Me)
						Me._ProjectId = value.ProjectID
					Else
						Me._ProjectId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("Agape_Main_Project")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_Agape_Main_ProjectDonations(ByVal entity As Agape_Main_ProjectDonation)
			Me.SendPropertyChanging
			entity.Agape_Main_Projectee = Me
		End Sub
		
		Private Sub detach_Agape_Main_ProjectDonations(ByVal entity As Agape_Main_ProjectDonation)
			Me.SendPropertyChanging
			entity.Agape_Main_Projectee = Nothing
		End Sub
		
		Private Sub Initialize()
			Me._Agape_Main_ProjectDonations = New EntitySet(Of Agape_Main_ProjectDonation)(AddressOf Me.attach_Agape_Main_ProjectDonations, AddressOf Me.detach_Agape_Main_ProjectDonations)
			Me._Agape_Main_Project = CType(Nothing, EntityRef(Of Agape_Main_Project))
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerializing(ByVal context As StreamingContext)
			Me.serializing = true
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializedAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerialized(ByVal context As StreamingContext)
			Me.serializing = false
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Main_ProjectDonation"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Main_ProjectDonation
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ProjectDonationId As Long
		
		Private _ProjecteeId As System.Nullable(Of Integer)
		
		Private _DonorName As String
		
		Private _Amount As System.Nullable(Of Decimal)
		
		Private _GiftAid As System.Nullable(Of Boolean)
		
		Private _PaymentMethod As String
		
		Private _DimensionsKey As System.Nullable(Of Integer)
		
		Private _DonationDate As System.Nullable(Of Date)
		
		Private _Agape_Main_Projectee As EntityRef(Of Agape_Main_Projectee)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnProjectDonationIdChanging(value As Long)
    End Sub
    Partial Private Sub OnProjectDonationIdChanged()
    End Sub
    Partial Private Sub OnProjecteeIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProjecteeIdChanged()
    End Sub
    Partial Private Sub OnDonorNameChanging(value As String)
    End Sub
    Partial Private Sub OnDonorNameChanged()
    End Sub
    Partial Private Sub OnAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAmountChanged()
    End Sub
    Partial Private Sub OnGiftAidChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnGiftAidChanged()
    End Sub
    Partial Private Sub OnPaymentMethodChanging(value As String)
    End Sub
    Partial Private Sub OnPaymentMethodChanged()
    End Sub
    Partial Private Sub OnDimensionsKeyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDimensionsKeyChanged()
    End Sub
    Partial Private Sub OnDonationDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDonationDateChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectDonationId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property ProjectDonationId() As Long
			Get
				Return Me._ProjectDonationId
			End Get
			Set
				If ((Me._ProjectDonationId = value)  _
							= false) Then
					Me.OnProjectDonationIdChanging(value)
					Me.SendPropertyChanging
					Me._ProjectDonationId = value
					Me.SendPropertyChanged("ProjectDonationId")
					Me.OnProjectDonationIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjecteeId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property ProjecteeId() As System.Nullable(Of Integer)
			Get
				Return Me._ProjecteeId
			End Get
			Set
				If (Me._ProjecteeId.Equals(value) = false) Then
					If Me._Agape_Main_Projectee.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnProjecteeIdChanging(value)
					Me.SendPropertyChanging
					Me._ProjecteeId = value
					Me.SendPropertyChanged("ProjecteeId")
					Me.OnProjecteeIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DonorName", DbType:="NVarChar(150)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property DonorName() As String
			Get
				Return Me._DonorName
			End Get
			Set
				If (String.Equals(Me._DonorName, value) = false) Then
					Me.OnDonorNameChanging(value)
					Me.SendPropertyChanging
					Me._DonorName = value
					Me.SendPropertyChanged("DonorName")
					Me.OnDonorNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount", DbType:="Money"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Amount() As System.Nullable(Of Decimal)
			Get
				Return Me._Amount
			End Get
			Set
				If (Me._Amount.Equals(value) = false) Then
					Me.OnAmountChanging(value)
					Me.SendPropertyChanging
					Me._Amount = value
					Me.SendPropertyChanged("Amount")
					Me.OnAmountChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GiftAid", DbType:="Bit"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property GiftAid() As System.Nullable(Of Boolean)
			Get
				Return Me._GiftAid
			End Get
			Set
				If (Me._GiftAid.Equals(value) = false) Then
					Me.OnGiftAidChanging(value)
					Me.SendPropertyChanging
					Me._GiftAid = value
					Me.SendPropertyChanged("GiftAid")
					Me.OnGiftAidChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaymentMethod", DbType:="NVarChar(20)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property PaymentMethod() As String
			Get
				Return Me._PaymentMethod
			End Get
			Set
				If (String.Equals(Me._PaymentMethod, value) = false) Then
					Me.OnPaymentMethodChanging(value)
					Me.SendPropertyChanging
					Me._PaymentMethod = value
					Me.SendPropertyChanged("PaymentMethod")
					Me.OnPaymentMethodChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DimensionsKey", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property DimensionsKey() As System.Nullable(Of Integer)
			Get
				Return Me._DimensionsKey
			End Get
			Set
				If (Me._DimensionsKey.Equals(value) = false) Then
					Me.OnDimensionsKeyChanging(value)
					Me.SendPropertyChanging
					Me._DimensionsKey = value
					Me.SendPropertyChanged("DimensionsKey")
					Me.OnDimensionsKeyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DonationDate", DbType:="SmallDateTime"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property DonationDate() As System.Nullable(Of Date)
			Get
				Return Me._DonationDate
			End Get
			Set
				If (Me._DonationDate.Equals(value) = false) Then
					Me.OnDonationDateChanging(value)
					Me.SendPropertyChanging
					Me._DonationDate = value
					Me.SendPropertyChanged("DonationDate")
					Me.OnDonationDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Agape_Main_Projectee_Agape_Main_ProjectDonation", Storage:="_Agape_Main_Projectee", ThisKey:="ProjecteeId", OtherKey:="ProjecteeId", IsForeignKey:=true)>  _
		Public Property Agape_Main_Projectee() As Agape_Main_Projectee
			Get
				Return Me._Agape_Main_Projectee.Entity
			End Get
			Set
				Dim previousValue As Agape_Main_Projectee = Me._Agape_Main_Projectee.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Agape_Main_Projectee.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Agape_Main_Projectee.Entity = Nothing
						previousValue.Agape_Main_ProjectDonations.Remove(Me)
					End If
					Me._Agape_Main_Projectee.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.Agape_Main_ProjectDonations.Add(Me)
						Me._ProjecteeId = value.ProjecteeId
					Else
						Me._ProjecteeId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("Agape_Main_Projectee")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			Me._Agape_Main_Projectee = CType(Nothing, EntityRef(Of Agape_Main_Projectee))
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Main_Projects"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Main_Project
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ProjectID As Integer
		
		Private _ProjectName As String
		
		Private _CostCentre As String
		
		Private _StartDate As System.Nullable(Of Date)
		
		Private _EndDate As System.Nullable(Of Date)
		
		Private _DisplayUntil As System.Nullable(Of Date)
		
		Private _NormalTarget As System.Nullable(Of Decimal)
		
		Private _ProjectDirector As System.Nullable(Of Integer)
		
		Private _ProjectAdmin As System.Nullable(Of Integer)
		
		Private _Description As String
		
		Private _Active As System.Nullable(Of Boolean)
		
		Private _GivingShortcut As String
		
		Private _Agape_Main_Projectees As EntitySet(Of Agape_Main_Projectee)
		
		Private serializing As Boolean
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnProjectIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnProjectIDChanged()
    End Sub
    Partial Private Sub OnProjectNameChanging(value As String)
    End Sub
    Partial Private Sub OnProjectNameChanged()
    End Sub
    Partial Private Sub OnCostCentreChanging(value As String)
    End Sub
    Partial Private Sub OnCostCentreChanged()
    End Sub
    Partial Private Sub OnStartDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStartDateChanged()
    End Sub
    Partial Private Sub OnEndDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEndDateChanged()
    End Sub
    Partial Private Sub OnDisplayUntilChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDisplayUntilChanged()
    End Sub
    Partial Private Sub OnNormalTargetChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNormalTargetChanged()
    End Sub
    Partial Private Sub OnProjectDirectorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProjectDirectorChanged()
    End Sub
    Partial Private Sub OnProjectAdminChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProjectAdminChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    Partial Private Sub OnGivingShortcutChanging(value As String)
    End Sub
    Partial Private Sub OnGivingShortcutChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property ProjectID() As Integer
			Get
				Return Me._ProjectID
			End Get
			Set
				If ((Me._ProjectID = value)  _
							= false) Then
					Me.OnProjectIDChanging(value)
					Me.SendPropertyChanging
					Me._ProjectID = value
					Me.SendPropertyChanged("ProjectID")
					Me.OnProjectIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectName", DbType:="NVarChar(150)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property ProjectName() As String
			Get
				Return Me._ProjectName
			End Get
			Set
				If (String.Equals(Me._ProjectName, value) = false) Then
					Me.OnProjectNameChanging(value)
					Me.SendPropertyChanging
					Me._ProjectName = value
					Me.SendPropertyChanged("ProjectName")
					Me.OnProjectNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCentre", DbType:="Char(4)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property CostCentre() As String
			Get
				Return Me._CostCentre
			End Get
			Set
				If (String.Equals(Me._CostCentre, value) = false) Then
					Me.OnCostCentreChanging(value)
					Me.SendPropertyChanging
					Me._CostCentre = value
					Me.SendPropertyChanged("CostCentre")
					Me.OnCostCentreChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="Date"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property StartDate() As System.Nullable(Of Date)
			Get
				Return Me._StartDate
			End Get
			Set
				If (Me._StartDate.Equals(value) = false) Then
					Me.OnStartDateChanging(value)
					Me.SendPropertyChanging
					Me._StartDate = value
					Me.SendPropertyChanged("StartDate")
					Me.OnStartDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="Date"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property EndDate() As System.Nullable(Of Date)
			Get
				Return Me._EndDate
			End Get
			Set
				If (Me._EndDate.Equals(value) = false) Then
					Me.OnEndDateChanging(value)
					Me.SendPropertyChanging
					Me._EndDate = value
					Me.SendPropertyChanged("EndDate")
					Me.OnEndDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayUntil", DbType:="Date"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property DisplayUntil() As System.Nullable(Of Date)
			Get
				Return Me._DisplayUntil
			End Get
			Set
				If (Me._DisplayUntil.Equals(value) = false) Then
					Me.OnDisplayUntilChanging(value)
					Me.SendPropertyChanging
					Me._DisplayUntil = value
					Me.SendPropertyChanged("DisplayUntil")
					Me.OnDisplayUntilChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NormalTarget", DbType:="Money"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property NormalTarget() As System.Nullable(Of Decimal)
			Get
				Return Me._NormalTarget
			End Get
			Set
				If (Me._NormalTarget.Equals(value) = false) Then
					Me.OnNormalTargetChanging(value)
					Me.SendPropertyChanging
					Me._NormalTarget = value
					Me.SendPropertyChanged("NormalTarget")
					Me.OnNormalTargetChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectDirector", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property ProjectDirector() As System.Nullable(Of Integer)
			Get
				Return Me._ProjectDirector
			End Get
			Set
				If (Me._ProjectDirector.Equals(value) = false) Then
					Me.OnProjectDirectorChanging(value)
					Me.SendPropertyChanging
					Me._ProjectDirector = value
					Me.SendPropertyChanged("ProjectDirector")
					Me.OnProjectDirectorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectAdmin", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property ProjectAdmin() As System.Nullable(Of Integer)
			Get
				Return Me._ProjectAdmin
			End Get
			Set
				If (Me._ProjectAdmin.Equals(value) = false) Then
					Me.OnProjectAdminChanging(value)
					Me.SendPropertyChanging
					Me._ProjectAdmin = value
					Me.SendPropertyChanged("ProjectAdmin")
					Me.OnProjectAdminChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(MAX)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="Bit"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property Active() As System.Nullable(Of Boolean)
			Get
				Return Me._Active
			End Get
			Set
				If (Me._Active.Equals(value) = false) Then
					Me.OnActiveChanging(value)
					Me.SendPropertyChanging
					Me._Active = value
					Me.SendPropertyChanged("Active")
					Me.OnActiveChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GivingShortcut", DbType:="NVarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property GivingShortcut() As String
			Get
				Return Me._GivingShortcut
			End Get
			Set
				If (String.Equals(Me._GivingShortcut, value) = false) Then
					Me.OnGivingShortcutChanging(value)
					Me.SendPropertyChanging
					Me._GivingShortcut = value
					Me.SendPropertyChanged("GivingShortcut")
					Me.OnGivingShortcutChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Agape_Main_Project_Agape_Main_Projectee", Storage:="_Agape_Main_Projectees", ThisKey:="ProjectID", OtherKey:="ProjectId"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13, EmitDefaultValue:=false)>  _
		Public Property Agape_Main_Projectees() As EntitySet(Of Agape_Main_Projectee)
			Get
				If (Me.serializing  _
							AndAlso (Me._Agape_Main_Projectees.HasLoadedOrAssignedValues = false)) Then
					Return Nothing
				End If
				Return Me._Agape_Main_Projectees
			End Get
			Set
				Me._Agape_Main_Projectees.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_Agape_Main_Projectees(ByVal entity As Agape_Main_Projectee)
			Me.SendPropertyChanging
			entity.Agape_Main_Project = Me
		End Sub
		
		Private Sub detach_Agape_Main_Projectees(ByVal entity As Agape_Main_Projectee)
			Me.SendPropertyChanging
			entity.Agape_Main_Project = Nothing
		End Sub
		
		Private Sub Initialize()
			Me._Agape_Main_Projectees = New EntitySet(Of Agape_Main_Projectee)(AddressOf Me.attach_Agape_Main_Projectees, AddressOf Me.detach_Agape_Main_Projectees)
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerializing(ByVal context As StreamingContext)
			Me.serializing = true
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializedAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerialized(ByVal context As StreamingContext)
			Me.serializing = false
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Main_Give_SO"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Main_Give_SO
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _SOID As Long
		
		Private _UserId As System.Nullable(Of Integer)
		
		Private _RefId As System.Nullable(Of Long)
		
		Private _Amount As System.Nullable(Of Decimal)
		
		Private _GiftAid As System.Nullable(Of Boolean)
		
		Private _StartDate As System.Nullable(Of Date)
		
		Private _EndDate As System.Nullable(Of Date)
		
		Private _Frequency As System.Nullable(Of Byte)
		
		Private _Status As System.Nullable(Of Byte)
		
		Private _Comment As String
		
		Private _SortCode As String
		
		Private _AccountNo As String
		
		Private _Reference As String
		
		Private _GivetoType As String
		
		Private _PPKey As System.Nullable(Of Integer)
		
		Private _SetupDate As System.Nullable(Of Date)
		
		Private _LastPaidDate As System.Nullable(Of Date)
		
		Private _SoGuid As String
		
		Private _Changed As System.Nullable(Of Boolean)
		
		Private _Related As System.Nullable(Of Boolean)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSOIDChanging(value As Long)
    End Sub
    Partial Private Sub OnSOIDChanged()
    End Sub
    Partial Private Sub OnUserIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUserIdChanged()
    End Sub
    Partial Private Sub OnRefIdChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnRefIdChanged()
    End Sub
    Partial Private Sub OnAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAmountChanged()
    End Sub
    Partial Private Sub OnGiftAidChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnGiftAidChanged()
    End Sub
    Partial Private Sub OnStartDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStartDateChanged()
    End Sub
    Partial Private Sub OnEndDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEndDateChanged()
    End Sub
    Partial Private Sub OnFrequencyChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnFrequencyChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnCommentChanging(value As String)
    End Sub
    Partial Private Sub OnCommentChanged()
    End Sub
    Partial Private Sub OnSortCodeChanging(value As String)
    End Sub
    Partial Private Sub OnSortCodeChanged()
    End Sub
    Partial Private Sub OnAccountNoChanging(value As String)
    End Sub
    Partial Private Sub OnAccountNoChanged()
    End Sub
    Partial Private Sub OnReferenceChanging(value As String)
    End Sub
    Partial Private Sub OnReferenceChanged()
    End Sub
    Partial Private Sub OnGivetoTypeChanging(value As String)
    End Sub
    Partial Private Sub OnGivetoTypeChanged()
    End Sub
    Partial Private Sub OnPPKeyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPPKeyChanged()
    End Sub
    Partial Private Sub OnSetupDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSetupDateChanged()
    End Sub
    Partial Private Sub OnLastPaidDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastPaidDateChanged()
    End Sub
    Partial Private Sub OnSoGuidChanging(value As String)
    End Sub
    Partial Private Sub OnSoGuidChanged()
    End Sub
    Partial Private Sub OnChangedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnChangedChanged()
    End Sub
    Partial Private Sub OnRelatedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnRelatedChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property SOID() As Long
			Get
				Return Me._SOID
			End Get
			Set
				If ((Me._SOID = value)  _
							= false) Then
					Me.OnSOIDChanging(value)
					Me.SendPropertyChanging
					Me._SOID = value
					Me.SendPropertyChanged("SOID")
					Me.OnSOIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property UserId() As System.Nullable(Of Integer)
			Get
				Return Me._UserId
			End Get
			Set
				If (Me._UserId.Equals(value) = false) Then
					Me.OnUserIdChanging(value)
					Me.SendPropertyChanging
					Me._UserId = value
					Me.SendPropertyChanged("UserId")
					Me.OnUserIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RefId", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property RefId() As System.Nullable(Of Long)
			Get
				Return Me._RefId
			End Get
			Set
				If (Me._RefId.Equals(value) = false) Then
					Me.OnRefIdChanging(value)
					Me.SendPropertyChanging
					Me._RefId = value
					Me.SendPropertyChanged("RefId")
					Me.OnRefIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount", DbType:="Money"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Amount() As System.Nullable(Of Decimal)
			Get
				Return Me._Amount
			End Get
			Set
				If (Me._Amount.Equals(value) = false) Then
					Me.OnAmountChanging(value)
					Me.SendPropertyChanging
					Me._Amount = value
					Me.SendPropertyChanged("Amount")
					Me.OnAmountChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GiftAid", DbType:="Bit"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property GiftAid() As System.Nullable(Of Boolean)
			Get
				Return Me._GiftAid
			End Get
			Set
				If (Me._GiftAid.Equals(value) = false) Then
					Me.OnGiftAidChanging(value)
					Me.SendPropertyChanging
					Me._GiftAid = value
					Me.SendPropertyChanged("GiftAid")
					Me.OnGiftAidChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="Date"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property StartDate() As System.Nullable(Of Date)
			Get
				Return Me._StartDate
			End Get
			Set
				If (Me._StartDate.Equals(value) = false) Then
					Me.OnStartDateChanging(value)
					Me.SendPropertyChanging
					Me._StartDate = value
					Me.SendPropertyChanged("StartDate")
					Me.OnStartDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="Date"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property EndDate() As System.Nullable(Of Date)
			Get
				Return Me._EndDate
			End Get
			Set
				If (Me._EndDate.Equals(value) = false) Then
					Me.OnEndDateChanging(value)
					Me.SendPropertyChanging
					Me._EndDate = value
					Me.SendPropertyChanged("EndDate")
					Me.OnEndDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Frequency", DbType:="TinyInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Frequency() As System.Nullable(Of Byte)
			Get
				Return Me._Frequency
			End Get
			Set
				If (Me._Frequency.Equals(value) = false) Then
					Me.OnFrequencyChanging(value)
					Me.SendPropertyChanging
					Me._Frequency = value
					Me.SendPropertyChanged("Frequency")
					Me.OnFrequencyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="TinyInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Status() As System.Nullable(Of Byte)
			Get
				Return Me._Status
			End Get
			Set
				If (Me._Status.Equals(value) = false) Then
					Me.OnStatusChanging(value)
					Me.SendPropertyChanging
					Me._Status = value
					Me.SendPropertyChanged("Status")
					Me.OnStatusChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comment", DbType:="NVarChar(MAX)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Comment() As String
			Get
				Return Me._Comment
			End Get
			Set
				If (String.Equals(Me._Comment, value) = false) Then
					Me.OnCommentChanging(value)
					Me.SendPropertyChanging
					Me._Comment = value
					Me.SendPropertyChanged("Comment")
					Me.OnCommentChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SortCode", DbType:="NVarChar(8)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property SortCode() As String
			Get
				Return Me._SortCode
			End Get
			Set
				If (String.Equals(Me._SortCode, value) = false) Then
					Me.OnSortCodeChanging(value)
					Me.SendPropertyChanging
					Me._SortCode = value
					Me.SendPropertyChanged("SortCode")
					Me.OnSortCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountNo", DbType:="NVarChar(16)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property AccountNo() As String
			Get
				Return Me._AccountNo
			End Get
			Set
				If (String.Equals(Me._AccountNo, value) = false) Then
					Me.OnAccountNoChanging(value)
					Me.SendPropertyChanging
					Me._AccountNo = value
					Me.SendPropertyChanged("AccountNo")
					Me.OnAccountNoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Reference", DbType:="NVarChar(20)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property Reference() As String
			Get
				Return Me._Reference
			End Get
			Set
				If (String.Equals(Me._Reference, value) = false) Then
					Me.OnReferenceChanging(value)
					Me.SendPropertyChanging
					Me._Reference = value
					Me.SendPropertyChanged("Reference")
					Me.OnReferenceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GivetoType", DbType:="VarChar(10)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property GivetoType() As String
			Get
				Return Me._GivetoType
			End Get
			Set
				If (String.Equals(Me._GivetoType, value) = false) Then
					Me.OnGivetoTypeChanging(value)
					Me.SendPropertyChanging
					Me._GivetoType = value
					Me.SendPropertyChanged("GivetoType")
					Me.OnGivetoTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PPKey", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
		Public Property PPKey() As System.Nullable(Of Integer)
			Get
				Return Me._PPKey
			End Get
			Set
				If (Me._PPKey.Equals(value) = false) Then
					Me.OnPPKeyChanging(value)
					Me.SendPropertyChanging
					Me._PPKey = value
					Me.SendPropertyChanged("PPKey")
					Me.OnPPKeyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SetupDate", DbType:="Date"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16)>  _
		Public Property SetupDate() As System.Nullable(Of Date)
			Get
				Return Me._SetupDate
			End Get
			Set
				If (Me._SetupDate.Equals(value) = false) Then
					Me.OnSetupDateChanging(value)
					Me.SendPropertyChanging
					Me._SetupDate = value
					Me.SendPropertyChanged("SetupDate")
					Me.OnSetupDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastPaidDate", DbType:="Date"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=17)>  _
		Public Property LastPaidDate() As System.Nullable(Of Date)
			Get
				Return Me._LastPaidDate
			End Get
			Set
				If (Me._LastPaidDate.Equals(value) = false) Then
					Me.OnLastPaidDateChanging(value)
					Me.SendPropertyChanging
					Me._LastPaidDate = value
					Me.SendPropertyChanged("LastPaidDate")
					Me.OnLastPaidDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SoGuid", DbType:="VarChar(60)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=18)>  _
		Public Property SoGuid() As String
			Get
				Return Me._SoGuid
			End Get
			Set
				If (String.Equals(Me._SoGuid, value) = false) Then
					Me.OnSoGuidChanging(value)
					Me.SendPropertyChanging
					Me._SoGuid = value
					Me.SendPropertyChanged("SoGuid")
					Me.OnSoGuidChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Changed", DbType:="Bit"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=19)>  _
		Public Property Changed() As System.Nullable(Of Boolean)
			Get
				Return Me._Changed
			End Get
			Set
				If (Me._Changed.Equals(value) = false) Then
					Me.OnChangedChanging(value)
					Me.SendPropertyChanging
					Me._Changed = value
					Me.SendPropertyChanged("Changed")
					Me.OnChangedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Related", DbType:="Bit"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=20)>  _
		Public Property Related() As System.Nullable(Of Boolean)
			Get
				Return Me._Related
			End Get
			Set
				If (Me._Related.Equals(value) = false) Then
					Me.OnRelatedChanging(value)
					Me.SendPropertyChanging
					Me._Related = value
					Me.SendPropertyChanged("Related")
					Me.OnRelatedChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TabModules"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class TabModule
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _TabModuleID As Integer
		
		Private _TabID As Integer
		
		Private _ModuleID As Integer
		
		Private _PaneName As String
		
		Private _ModuleOrder As Integer
		
		Private _CacheTime As Integer
		
		Private _Alignment As String
		
		Private _Color As String
		
		Private _Border As String
		
		Private _IconFile As String
		
		Private _Visibility As Integer
		
		Private _ContainerSrc As String
		
		Private _DisplayTitle As Boolean
		
		Private _DisplayPrint As Boolean
		
		Private _DisplaySyndicate As Boolean
		
		Private _TabModuleSettings As EntitySet(Of TabModuleSetting)
		
		Private _Module As EntityRef(Of [Module])
		
		Private serializing As Boolean
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTabModuleIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTabModuleIDChanged()
    End Sub
    Partial Private Sub OnTabIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTabIDChanged()
    End Sub
    Partial Private Sub OnModuleIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnModuleIDChanged()
    End Sub
    Partial Private Sub OnPaneNameChanging(value As String)
    End Sub
    Partial Private Sub OnPaneNameChanged()
    End Sub
    Partial Private Sub OnModuleOrderChanging(value As Integer)
    End Sub
    Partial Private Sub OnModuleOrderChanged()
    End Sub
    Partial Private Sub OnCacheTimeChanging(value As Integer)
    End Sub
    Partial Private Sub OnCacheTimeChanged()
    End Sub
    Partial Private Sub OnAlignmentChanging(value As String)
    End Sub
    Partial Private Sub OnAlignmentChanged()
    End Sub
    Partial Private Sub OnColorChanging(value As String)
    End Sub
    Partial Private Sub OnColorChanged()
    End Sub
    Partial Private Sub OnBorderChanging(value As String)
    End Sub
    Partial Private Sub OnBorderChanged()
    End Sub
    Partial Private Sub OnIconFileChanging(value As String)
    End Sub
    Partial Private Sub OnIconFileChanged()
    End Sub
    Partial Private Sub OnVisibilityChanging(value As Integer)
    End Sub
    Partial Private Sub OnVisibilityChanged()
    End Sub
    Partial Private Sub OnContainerSrcChanging(value As String)
    End Sub
    Partial Private Sub OnContainerSrcChanged()
    End Sub
    Partial Private Sub OnDisplayTitleChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDisplayTitleChanged()
    End Sub
    Partial Private Sub OnDisplayPrintChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDisplayPrintChanged()
    End Sub
    Partial Private Sub OnDisplaySyndicateChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDisplaySyndicateChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TabModuleID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property TabModuleID() As Integer
			Get
				Return Me._TabModuleID
			End Get
			Set
				If ((Me._TabModuleID = value)  _
							= false) Then
					Me.OnTabModuleIDChanging(value)
					Me.SendPropertyChanging
					Me._TabModuleID = value
					Me.SendPropertyChanged("TabModuleID")
					Me.OnTabModuleIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TabID", DbType:="Int NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property TabID() As Integer
			Get
				Return Me._TabID
			End Get
			Set
				If ((Me._TabID = value)  _
							= false) Then
					Me.OnTabIDChanging(value)
					Me.SendPropertyChanging
					Me._TabID = value
					Me.SendPropertyChanged("TabID")
					Me.OnTabIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModuleID", DbType:="Int NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property ModuleID() As Integer
			Get
				Return Me._ModuleID
			End Get
			Set
				If ((Me._ModuleID = value)  _
							= false) Then
					If Me._Module.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnModuleIDChanging(value)
					Me.SendPropertyChanging
					Me._ModuleID = value
					Me.SendPropertyChanged("ModuleID")
					Me.OnModuleIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PaneName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property PaneName() As String
			Get
				Return Me._PaneName
			End Get
			Set
				If (String.Equals(Me._PaneName, value) = false) Then
					Me.OnPaneNameChanging(value)
					Me.SendPropertyChanging
					Me._PaneName = value
					Me.SendPropertyChanged("PaneName")
					Me.OnPaneNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModuleOrder", DbType:="Int NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property ModuleOrder() As Integer
			Get
				Return Me._ModuleOrder
			End Get
			Set
				If ((Me._ModuleOrder = value)  _
							= false) Then
					Me.OnModuleOrderChanging(value)
					Me.SendPropertyChanging
					Me._ModuleOrder = value
					Me.SendPropertyChanged("ModuleOrder")
					Me.OnModuleOrderChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CacheTime", DbType:="Int NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property CacheTime() As Integer
			Get
				Return Me._CacheTime
			End Get
			Set
				If ((Me._CacheTime = value)  _
							= false) Then
					Me.OnCacheTimeChanging(value)
					Me.SendPropertyChanging
					Me._CacheTime = value
					Me.SendPropertyChanged("CacheTime")
					Me.OnCacheTimeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Alignment", DbType:="NVarChar(10)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Alignment() As String
			Get
				Return Me._Alignment
			End Get
			Set
				If (String.Equals(Me._Alignment, value) = false) Then
					Me.OnAlignmentChanging(value)
					Me.SendPropertyChanging
					Me._Alignment = value
					Me.SendPropertyChanged("Alignment")
					Me.OnAlignmentChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Color", DbType:="NVarChar(20)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Color() As String
			Get
				Return Me._Color
			End Get
			Set
				If (String.Equals(Me._Color, value) = false) Then
					Me.OnColorChanging(value)
					Me.SendPropertyChanging
					Me._Color = value
					Me.SendPropertyChanged("Color")
					Me.OnColorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Border", DbType:="NVarChar(1)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Border() As String
			Get
				Return Me._Border
			End Get
			Set
				If (String.Equals(Me._Border, value) = false) Then
					Me.OnBorderChanging(value)
					Me.SendPropertyChanging
					Me._Border = value
					Me.SendPropertyChanged("Border")
					Me.OnBorderChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IconFile", DbType:="NVarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property IconFile() As String
			Get
				Return Me._IconFile
			End Get
			Set
				If (String.Equals(Me._IconFile, value) = false) Then
					Me.OnIconFileChanging(value)
					Me.SendPropertyChanging
					Me._IconFile = value
					Me.SendPropertyChanged("IconFile")
					Me.OnIconFileChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Visibility", DbType:="Int NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property Visibility() As Integer
			Get
				Return Me._Visibility
			End Get
			Set
				If ((Me._Visibility = value)  _
							= false) Then
					Me.OnVisibilityChanging(value)
					Me.SendPropertyChanging
					Me._Visibility = value
					Me.SendPropertyChanged("Visibility")
					Me.OnVisibilityChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContainerSrc", DbType:="NVarChar(200)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property ContainerSrc() As String
			Get
				Return Me._ContainerSrc
			End Get
			Set
				If (String.Equals(Me._ContainerSrc, value) = false) Then
					Me.OnContainerSrcChanging(value)
					Me.SendPropertyChanging
					Me._ContainerSrc = value
					Me.SendPropertyChanged("ContainerSrc")
					Me.OnContainerSrcChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayTitle", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property DisplayTitle() As Boolean
			Get
				Return Me._DisplayTitle
			End Get
			Set
				If ((Me._DisplayTitle = value)  _
							= false) Then
					Me.OnDisplayTitleChanging(value)
					Me.SendPropertyChanging
					Me._DisplayTitle = value
					Me.SendPropertyChanged("DisplayTitle")
					Me.OnDisplayTitleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayPrint", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property DisplayPrint() As Boolean
			Get
				Return Me._DisplayPrint
			End Get
			Set
				If ((Me._DisplayPrint = value)  _
							= false) Then
					Me.OnDisplayPrintChanging(value)
					Me.SendPropertyChanging
					Me._DisplayPrint = value
					Me.SendPropertyChanged("DisplayPrint")
					Me.OnDisplayPrintChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplaySyndicate", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
		Public Property DisplaySyndicate() As Boolean
			Get
				Return Me._DisplaySyndicate
			End Get
			Set
				If ((Me._DisplaySyndicate = value)  _
							= false) Then
					Me.OnDisplaySyndicateChanging(value)
					Me.SendPropertyChanging
					Me._DisplaySyndicate = value
					Me.SendPropertyChanged("DisplaySyndicate")
					Me.OnDisplaySyndicateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TabModule_TabModuleSetting", Storage:="_TabModuleSettings", ThisKey:="TabModuleID", OtherKey:="TabModuleID"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16, EmitDefaultValue:=false)>  _
		Public Property TabModuleSettings() As EntitySet(Of TabModuleSetting)
			Get
				If (Me.serializing  _
							AndAlso (Me._TabModuleSettings.HasLoadedOrAssignedValues = false)) Then
					Return Nothing
				End If
				Return Me._TabModuleSettings
			End Get
			Set
				Me._TabModuleSettings.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Module_TabModule", Storage:="_Module", ThisKey:="ModuleID", OtherKey:="ModuleID", IsForeignKey:=true, DeleteOnNull:=true, DeleteRule:="CASCADE")>  _
		Public Property [Module]() As [Module]
			Get
				Return Me._Module.Entity
			End Get
			Set
				Dim previousValue As [Module] = Me._Module.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Module.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Module.Entity = Nothing
						previousValue.TabModules.Remove(Me)
					End If
					Me._Module.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.TabModules.Add(Me)
						Me._ModuleID = value.ModuleID
					Else
						Me._ModuleID = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("[Module]")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_TabModuleSettings(ByVal entity As TabModuleSetting)
			Me.SendPropertyChanging
			entity.TabModule = Me
		End Sub
		
		Private Sub detach_TabModuleSettings(ByVal entity As TabModuleSetting)
			Me.SendPropertyChanging
			entity.TabModule = Nothing
		End Sub
		
		Private Sub Initialize()
			Me._TabModuleSettings = New EntitySet(Of TabModuleSetting)(AddressOf Me.attach_TabModuleSettings, AddressOf Me.detach_TabModuleSettings)
			Me._Module = CType(Nothing, EntityRef(Of [Module]))
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerializing(ByVal context As StreamingContext)
			Me.serializing = true
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializedAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerialized(ByVal context As StreamingContext)
			Me.serializing = false
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ModuleControls"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class ModuleControl
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ModuleControlID As Integer
		
		Private _ModuleDefID As System.Nullable(Of Integer)
		
		Private _ControlKey As String
		
		Private _ControlTitle As String
		
		Private _ControlSrc As String
		
		Private _IconFile As String
		
		Private _ControlType As Integer
		
		Private _ViewOrder As System.Nullable(Of Integer)
		
		Private _HelpUrl As String
		
		Private _SupportsPartialRendering As Boolean
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnModuleControlIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnModuleControlIDChanged()
    End Sub
    Partial Private Sub OnModuleDefIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnModuleDefIDChanged()
    End Sub
    Partial Private Sub OnControlKeyChanging(value As String)
    End Sub
    Partial Private Sub OnControlKeyChanged()
    End Sub
    Partial Private Sub OnControlTitleChanging(value As String)
    End Sub
    Partial Private Sub OnControlTitleChanged()
    End Sub
    Partial Private Sub OnControlSrcChanging(value As String)
    End Sub
    Partial Private Sub OnControlSrcChanged()
    End Sub
    Partial Private Sub OnIconFileChanging(value As String)
    End Sub
    Partial Private Sub OnIconFileChanged()
    End Sub
    Partial Private Sub OnControlTypeChanging(value As Integer)
    End Sub
    Partial Private Sub OnControlTypeChanged()
    End Sub
    Partial Private Sub OnViewOrderChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnViewOrderChanged()
    End Sub
    Partial Private Sub OnHelpUrlChanging(value As String)
    End Sub
    Partial Private Sub OnHelpUrlChanged()
    End Sub
    Partial Private Sub OnSupportsPartialRenderingChanging(value As Boolean)
    End Sub
    Partial Private Sub OnSupportsPartialRenderingChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModuleControlID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property ModuleControlID() As Integer
			Get
				Return Me._ModuleControlID
			End Get
			Set
				If ((Me._ModuleControlID = value)  _
							= false) Then
					Me.OnModuleControlIDChanging(value)
					Me.SendPropertyChanging
					Me._ModuleControlID = value
					Me.SendPropertyChanged("ModuleControlID")
					Me.OnModuleControlIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModuleDefID", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property ModuleDefID() As System.Nullable(Of Integer)
			Get
				Return Me._ModuleDefID
			End Get
			Set
				If (Me._ModuleDefID.Equals(value) = false) Then
					Me.OnModuleDefIDChanging(value)
					Me.SendPropertyChanging
					Me._ModuleDefID = value
					Me.SendPropertyChanged("ModuleDefID")
					Me.OnModuleDefIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ControlKey", DbType:="NVarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property ControlKey() As String
			Get
				Return Me._ControlKey
			End Get
			Set
				If (String.Equals(Me._ControlKey, value) = false) Then
					Me.OnControlKeyChanging(value)
					Me.SendPropertyChanging
					Me._ControlKey = value
					Me.SendPropertyChanged("ControlKey")
					Me.OnControlKeyChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ControlTitle", DbType:="NVarChar(50)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property ControlTitle() As String
			Get
				Return Me._ControlTitle
			End Get
			Set
				If (String.Equals(Me._ControlTitle, value) = false) Then
					Me.OnControlTitleChanging(value)
					Me.SendPropertyChanging
					Me._ControlTitle = value
					Me.SendPropertyChanged("ControlTitle")
					Me.OnControlTitleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ControlSrc", DbType:="NVarChar(256)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property ControlSrc() As String
			Get
				Return Me._ControlSrc
			End Get
			Set
				If (String.Equals(Me._ControlSrc, value) = false) Then
					Me.OnControlSrcChanging(value)
					Me.SendPropertyChanging
					Me._ControlSrc = value
					Me.SendPropertyChanged("ControlSrc")
					Me.OnControlSrcChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IconFile", DbType:="NVarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property IconFile() As String
			Get
				Return Me._IconFile
			End Get
			Set
				If (String.Equals(Me._IconFile, value) = false) Then
					Me.OnIconFileChanging(value)
					Me.SendPropertyChanging
					Me._IconFile = value
					Me.SendPropertyChanged("IconFile")
					Me.OnIconFileChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ControlType", DbType:="Int NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property ControlType() As Integer
			Get
				Return Me._ControlType
			End Get
			Set
				If ((Me._ControlType = value)  _
							= false) Then
					Me.OnControlTypeChanging(value)
					Me.SendPropertyChanging
					Me._ControlType = value
					Me.SendPropertyChanged("ControlType")
					Me.OnControlTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ViewOrder", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property ViewOrder() As System.Nullable(Of Integer)
			Get
				Return Me._ViewOrder
			End Get
			Set
				If (Me._ViewOrder.Equals(value) = false) Then
					Me.OnViewOrderChanging(value)
					Me.SendPropertyChanging
					Me._ViewOrder = value
					Me.SendPropertyChanged("ViewOrder")
					Me.OnViewOrderChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HelpUrl", DbType:="NVarChar(200)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property HelpUrl() As String
			Get
				Return Me._HelpUrl
			End Get
			Set
				If (String.Equals(Me._HelpUrl, value) = false) Then
					Me.OnHelpUrlChanging(value)
					Me.SendPropertyChanging
					Me._HelpUrl = value
					Me.SendPropertyChanged("HelpUrl")
					Me.OnHelpUrlChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SupportsPartialRendering", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property SupportsPartialRendering() As Boolean
			Get
				Return Me._SupportsPartialRendering
			End Get
			Set
				If ((Me._SupportsPartialRendering = value)  _
							= false) Then
					Me.OnSupportsPartialRenderingChanging(value)
					Me.SendPropertyChanging
					Me._SupportsPartialRendering = value
					Me.SendPropertyChanged("SupportsPartialRendering")
					Me.OnSupportsPartialRenderingChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Modules"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class [Module]
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ModuleID As Integer
		
		Private _ModuleDefID As Integer
		
		Private _ModuleTitle As String
		
		Private _AllTabs As Boolean
		
		Private _IsDeleted As Boolean
		
		Private _InheritViewPermissions As System.Nullable(Of Boolean)
		
		Private _Header As String
		
		Private _Footer As String
		
		Private _StartDate As System.Nullable(Of Date)
		
		Private _EndDate As System.Nullable(Of Date)
		
		Private _PortalID As System.Nullable(Of Integer)
		
		Private _TabModules As EntitySet(Of TabModule)
		
		Private serializing As Boolean
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnModuleIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnModuleIDChanged()
    End Sub
    Partial Private Sub OnModuleDefIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnModuleDefIDChanged()
    End Sub
    Partial Private Sub OnModuleTitleChanging(value As String)
    End Sub
    Partial Private Sub OnModuleTitleChanged()
    End Sub
    Partial Private Sub OnAllTabsChanging(value As Boolean)
    End Sub
    Partial Private Sub OnAllTabsChanged()
    End Sub
    Partial Private Sub OnIsDeletedChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsDeletedChanged()
    End Sub
    Partial Private Sub OnInheritViewPermissionsChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnInheritViewPermissionsChanged()
    End Sub
    Partial Private Sub OnHeaderChanging(value As String)
    End Sub
    Partial Private Sub OnHeaderChanged()
    End Sub
    Partial Private Sub OnFooterChanging(value As String)
    End Sub
    Partial Private Sub OnFooterChanged()
    End Sub
    Partial Private Sub OnStartDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnStartDateChanged()
    End Sub
    Partial Private Sub OnEndDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEndDateChanged()
    End Sub
    Partial Private Sub OnPortalIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIDChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModuleID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property ModuleID() As Integer
			Get
				Return Me._ModuleID
			End Get
			Set
				If ((Me._ModuleID = value)  _
							= false) Then
					Me.OnModuleIDChanging(value)
					Me.SendPropertyChanging
					Me._ModuleID = value
					Me.SendPropertyChanged("ModuleID")
					Me.OnModuleIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModuleDefID", DbType:="Int NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property ModuleDefID() As Integer
			Get
				Return Me._ModuleDefID
			End Get
			Set
				If ((Me._ModuleDefID = value)  _
							= false) Then
					Me.OnModuleDefIDChanging(value)
					Me.SendPropertyChanging
					Me._ModuleDefID = value
					Me.SendPropertyChanged("ModuleDefID")
					Me.OnModuleDefIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModuleTitle", DbType:="NVarChar(256)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property ModuleTitle() As String
			Get
				Return Me._ModuleTitle
			End Get
			Set
				If (String.Equals(Me._ModuleTitle, value) = false) Then
					Me.OnModuleTitleChanging(value)
					Me.SendPropertyChanging
					Me._ModuleTitle = value
					Me.SendPropertyChanged("ModuleTitle")
					Me.OnModuleTitleChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AllTabs", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property AllTabs() As Boolean
			Get
				Return Me._AllTabs
			End Get
			Set
				If ((Me._AllTabs = value)  _
							= false) Then
					Me.OnAllTabsChanging(value)
					Me.SendPropertyChanging
					Me._AllTabs = value
					Me.SendPropertyChanged("AllTabs")
					Me.OnAllTabsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsDeleted", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property IsDeleted() As Boolean
			Get
				Return Me._IsDeleted
			End Get
			Set
				If ((Me._IsDeleted = value)  _
							= false) Then
					Me.OnIsDeletedChanging(value)
					Me.SendPropertyChanging
					Me._IsDeleted = value
					Me.SendPropertyChanged("IsDeleted")
					Me.OnIsDeletedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InheritViewPermissions", DbType:="Bit"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property InheritViewPermissions() As System.Nullable(Of Boolean)
			Get
				Return Me._InheritViewPermissions
			End Get
			Set
				If (Me._InheritViewPermissions.Equals(value) = false) Then
					Me.OnInheritViewPermissionsChanging(value)
					Me.SendPropertyChanging
					Me._InheritViewPermissions = value
					Me.SendPropertyChanged("InheritViewPermissions")
					Me.OnInheritViewPermissionsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Header", DbType:="NText", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Header() As String
			Get
				Return Me._Header
			End Get
			Set
				If (String.Equals(Me._Header, value) = false) Then
					Me.OnHeaderChanging(value)
					Me.SendPropertyChanging
					Me._Header = value
					Me.SendPropertyChanged("Header")
					Me.OnHeaderChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Footer", DbType:="NText", UpdateCheck:=UpdateCheck.Never),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Footer() As String
			Get
				Return Me._Footer
			End Get
			Set
				If (String.Equals(Me._Footer, value) = false) Then
					Me.OnFooterChanging(value)
					Me.SendPropertyChanging
					Me._Footer = value
					Me.SendPropertyChanged("Footer")
					Me.OnFooterChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="DateTime"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property StartDate() As System.Nullable(Of Date)
			Get
				Return Me._StartDate
			End Get
			Set
				If (Me._StartDate.Equals(value) = false) Then
					Me.OnStartDateChanging(value)
					Me.SendPropertyChanging
					Me._StartDate = value
					Me.SendPropertyChanged("StartDate")
					Me.OnStartDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="DateTime"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property EndDate() As System.Nullable(Of Date)
			Get
				Return Me._EndDate
			End Get
			Set
				If (Me._EndDate.Equals(value) = false) Then
					Me.OnEndDateChanging(value)
					Me.SendPropertyChanging
					Me._EndDate = value
					Me.SendPropertyChanged("EndDate")
					Me.OnEndDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalID", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property PortalID() As System.Nullable(Of Integer)
			Get
				Return Me._PortalID
			End Get
			Set
				If (Me._PortalID.Equals(value) = false) Then
					Me.OnPortalIDChanging(value)
					Me.SendPropertyChanging
					Me._PortalID = value
					Me.SendPropertyChanged("PortalID")
					Me.OnPortalIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Module_TabModule", Storage:="_TabModules", ThisKey:="ModuleID", OtherKey:="ModuleID"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12, EmitDefaultValue:=false)>  _
		Public Property TabModules() As EntitySet(Of TabModule)
			Get
				If (Me.serializing  _
							AndAlso (Me._TabModules.HasLoadedOrAssignedValues = false)) Then
					Return Nothing
				End If
				Return Me._TabModules
			End Get
			Set
				Me._TabModules.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_TabModules(ByVal entity As TabModule)
			Me.SendPropertyChanging
			entity.[Module] = Me
		End Sub
		
		Private Sub detach_TabModules(ByVal entity As TabModule)
			Me.SendPropertyChanging
			entity.[Module] = Nothing
		End Sub
		
		Private Sub Initialize()
			Me._TabModules = New EntitySet(Of TabModule)(AddressOf Me.attach_TabModules, AddressOf Me.detach_TabModules)
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerializing(ByVal context As StreamingContext)
			Me.serializing = true
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializedAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerialized(ByVal context As StreamingContext)
			Me.serializing = false
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TabModuleSettings"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class TabModuleSetting
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _TabModuleID As Integer
		
		Private _SettingName As String
		
		Private _SettingValue As String
		
		Private _TabModule As EntityRef(Of TabModule)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTabModuleIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnTabModuleIDChanged()
    End Sub
    Partial Private Sub OnSettingNameChanging(value As String)
    End Sub
    Partial Private Sub OnSettingNameChanged()
    End Sub
    Partial Private Sub OnSettingValueChanging(value As String)
    End Sub
    Partial Private Sub OnSettingValueChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TabModuleID", DbType:="Int NOT NULL", IsPrimaryKey:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property TabModuleID() As Integer
			Get
				Return Me._TabModuleID
			End Get
			Set
				If ((Me._TabModuleID = value)  _
							= false) Then
					If Me._TabModule.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnTabModuleIDChanging(value)
					Me.SendPropertyChanging
					Me._TabModuleID = value
					Me.SendPropertyChanged("TabModuleID")
					Me.OnTabModuleIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SettingName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property SettingName() As String
			Get
				Return Me._SettingName
			End Get
			Set
				If (String.Equals(Me._SettingName, value) = false) Then
					Me.OnSettingNameChanging(value)
					Me.SendPropertyChanging
					Me._SettingName = value
					Me.SendPropertyChanged("SettingName")
					Me.OnSettingNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SettingValue", DbType:="NVarChar(2000) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property SettingValue() As String
			Get
				Return Me._SettingValue
			End Get
			Set
				If (String.Equals(Me._SettingValue, value) = false) Then
					Me.OnSettingValueChanging(value)
					Me.SendPropertyChanging
					Me._SettingValue = value
					Me.SendPropertyChanged("SettingValue")
					Me.OnSettingValueChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TabModule_TabModuleSetting", Storage:="_TabModule", ThisKey:="TabModuleID", OtherKey:="TabModuleID", IsForeignKey:=true, DeleteOnNull:=true, DeleteRule:="CASCADE")>  _
		Public Property TabModule() As TabModule
			Get
				Return Me._TabModule.Entity
			End Get
			Set
				Dim previousValue As TabModule = Me._TabModule.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._TabModule.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._TabModule.Entity = Nothing
						previousValue.TabModuleSettings.Remove(Me)
					End If
					Me._TabModule.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.TabModuleSettings.Add(Me)
						Me._TabModuleID = value.TabModuleID
					Else
						Me._TabModuleID = CType(Nothing, Integer)
					End If
					Me.SendPropertyChanged("TabModule")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			Me._TabModule = CType(Nothing, EntityRef(Of TabModule))
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Main_AdvanceRequest"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Main_AdvanceRequest
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _AdvanceId As Integer
		
		Private _StaffId As System.Nullable(Of Integer)
		
		Private _RequestStatus As System.Nullable(Of Short)
		
		Private _RequestAmount As System.Nullable(Of Decimal)
		
		Private _RequestText As String
		
		Private _RequestDate As System.Nullable(Of Date)
		
		Private _ApproverId As System.Nullable(Of Integer)
		
		Private _ApprovedDate As System.Nullable(Of Date)
		
		Private _ProcessedDate As System.Nullable(Of Date)
		
		Private _Period As System.Nullable(Of Byte)
		
		Private _Year As System.Nullable(Of Short)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAdvanceIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnAdvanceIdChanged()
    End Sub
    Partial Private Sub OnStaffIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStaffIdChanged()
    End Sub
    Partial Private Sub OnRequestStatusChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnRequestStatusChanged()
    End Sub
    Partial Private Sub OnRequestAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnRequestAmountChanged()
    End Sub
    Partial Private Sub OnRequestTextChanging(value As String)
    End Sub
    Partial Private Sub OnRequestTextChanged()
    End Sub
    Partial Private Sub OnRequestDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRequestDateChanged()
    End Sub
    Partial Private Sub OnApproverIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnApproverIdChanged()
    End Sub
    Partial Private Sub OnApprovedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnApprovedDateChanged()
    End Sub
    Partial Private Sub OnProcessedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnProcessedDateChanged()
    End Sub
    Partial Private Sub OnPeriodChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnPeriodChanged()
    End Sub
    Partial Private Sub OnYearChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnYearChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdvanceId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property AdvanceId() As Integer
			Get
				Return Me._AdvanceId
			End Get
			Set
				If ((Me._AdvanceId = value)  _
							= false) Then
					Me.OnAdvanceIdChanging(value)
					Me.SendPropertyChanging
					Me._AdvanceId = value
					Me.SendPropertyChanged("AdvanceId")
					Me.OnAdvanceIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property StaffId() As System.Nullable(Of Integer)
			Get
				Return Me._StaffId
			End Get
			Set
				If (Me._StaffId.Equals(value) = false) Then
					Me.OnStaffIdChanging(value)
					Me.SendPropertyChanging
					Me._StaffId = value
					Me.SendPropertyChanged("StaffId")
					Me.OnStaffIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestStatus", DbType:="SmallInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property RequestStatus() As System.Nullable(Of Short)
			Get
				Return Me._RequestStatus
			End Get
			Set
				If (Me._RequestStatus.Equals(value) = false) Then
					Me.OnRequestStatusChanging(value)
					Me.SendPropertyChanging
					Me._RequestStatus = value
					Me.SendPropertyChanged("RequestStatus")
					Me.OnRequestStatusChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestAmount", DbType:="Money"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property RequestAmount() As System.Nullable(Of Decimal)
			Get
				Return Me._RequestAmount
			End Get
			Set
				If (Me._RequestAmount.Equals(value) = false) Then
					Me.OnRequestAmountChanging(value)
					Me.SendPropertyChanging
					Me._RequestAmount = value
					Me.SendPropertyChanged("RequestAmount")
					Me.OnRequestAmountChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestText", DbType:="NVarChar(MAX)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property RequestText() As String
			Get
				Return Me._RequestText
			End Get
			Set
				If (String.Equals(Me._RequestText, value) = false) Then
					Me.OnRequestTextChanging(value)
					Me.SendPropertyChanging
					Me._RequestText = value
					Me.SendPropertyChanged("RequestText")
					Me.OnRequestTextChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RequestDate", DbType:="Date"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property RequestDate() As System.Nullable(Of Date)
			Get
				Return Me._RequestDate
			End Get
			Set
				If (Me._RequestDate.Equals(value) = false) Then
					Me.OnRequestDateChanging(value)
					Me.SendPropertyChanging
					Me._RequestDate = value
					Me.SendPropertyChanged("RequestDate")
					Me.OnRequestDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApproverId", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property ApproverId() As System.Nullable(Of Integer)
			Get
				Return Me._ApproverId
			End Get
			Set
				If (Me._ApproverId.Equals(value) = false) Then
					Me.OnApproverIdChanging(value)
					Me.SendPropertyChanging
					Me._ApproverId = value
					Me.SendPropertyChanged("ApproverId")
					Me.OnApproverIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprovedDate", DbType:="Date"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property ApprovedDate() As System.Nullable(Of Date)
			Get
				Return Me._ApprovedDate
			End Get
			Set
				If (Me._ApprovedDate.Equals(value) = false) Then
					Me.OnApprovedDateChanging(value)
					Me.SendPropertyChanging
					Me._ApprovedDate = value
					Me.SendPropertyChanged("ApprovedDate")
					Me.OnApprovedDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProcessedDate", DbType:="Date"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property ProcessedDate() As System.Nullable(Of Date)
			Get
				Return Me._ProcessedDate
			End Get
			Set
				If (Me._ProcessedDate.Equals(value) = false) Then
					Me.OnProcessedDateChanging(value)
					Me.SendPropertyChanging
					Me._ProcessedDate = value
					Me.SendPropertyChanged("ProcessedDate")
					Me.OnProcessedDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Period", DbType:="TinyInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Period() As System.Nullable(Of Byte)
			Get
				Return Me._Period
			End Get
			Set
				If (Me._Period.Equals(value) = false) Then
					Me.OnPeriodChanging(value)
					Me.SendPropertyChanging
					Me._Period = value
					Me.SendPropertyChanged("Period")
					Me.OnPeriodChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Year", DbType:="SmallInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property Year() As System.Nullable(Of Short)
			Get
				Return Me._Year
			End Get
			Set
				If (Me._Year.Equals(value) = false) Then
					Me.OnYearChanging(value)
					Me.SendPropertyChanging
					Me._Year = value
					Me.SendPropertyChanged("Year")
					Me.OnYearChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Staff_Budgets_BudgetConference"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Staff_Budgets_BudgetConference
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _BudgetConferenceId As Integer
		
		Private _AdultPrice As System.Nullable(Of Decimal)
		
		Private _ChildPrice As System.Nullable(Of Decimal)
		
		Private _Notes As String
		
		Private _ConfName As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBudgetConferenceIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnBudgetConferenceIdChanged()
    End Sub
    Partial Private Sub OnAdultPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAdultPriceChanged()
    End Sub
    Partial Private Sub OnChildPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnChildPriceChanged()
    End Sub
    Partial Private Sub OnNotesChanging(value As String)
    End Sub
    Partial Private Sub OnNotesChanged()
    End Sub
    Partial Private Sub OnConfNameChanging(value As String)
    End Sub
    Partial Private Sub OnConfNameChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BudgetConferenceId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property BudgetConferenceId() As Integer
			Get
				Return Me._BudgetConferenceId
			End Get
			Set
				If ((Me._BudgetConferenceId = value)  _
							= false) Then
					Me.OnBudgetConferenceIdChanging(value)
					Me.SendPropertyChanging
					Me._BudgetConferenceId = value
					Me.SendPropertyChanged("BudgetConferenceId")
					Me.OnBudgetConferenceIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AdultPrice", DbType:="SmallMoney"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property AdultPrice() As System.Nullable(Of Decimal)
			Get
				Return Me._AdultPrice
			End Get
			Set
				If (Me._AdultPrice.Equals(value) = false) Then
					Me.OnAdultPriceChanging(value)
					Me.SendPropertyChanging
					Me._AdultPrice = value
					Me.SendPropertyChanged("AdultPrice")
					Me.OnAdultPriceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChildPrice", DbType:="SmallMoney"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property ChildPrice() As System.Nullable(Of Decimal)
			Get
				Return Me._ChildPrice
			End Get
			Set
				If (Me._ChildPrice.Equals(value) = false) Then
					Me.OnChildPriceChanging(value)
					Me.SendPropertyChanging
					Me._ChildPrice = value
					Me.SendPropertyChanged("ChildPrice")
					Me.OnChildPriceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Notes", DbType:="NVarChar(150)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Notes() As String
			Get
				Return Me._Notes
			End Get
			Set
				If (String.Equals(Me._Notes, value) = false) Then
					Me.OnNotesChanging(value)
					Me.SendPropertyChanging
					Me._Notes = value
					Me.SendPropertyChanged("Notes")
					Me.OnNotesChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ConfName", DbType:="NVarChar(150)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property ConfName() As String
			Get
				Return Me._ConfName
			End Get
			Set
				If (String.Equals(Me._ConfName, value) = false) Then
					Me.OnConfNameChanging(value)
					Me.SendPropertyChanging
					Me._ConfName = value
					Me.SendPropertyChanged("ConfName")
					Me.OnConfNameChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Staff_Budgets"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Staff_Budget
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _BudgetId As Integer
		
		Private _GrossSalary As Decimal
		
		Private _Conference1 As String
		
		Private _Conference1Cost As Short
		
		Private _Conference2 As String
		
		Private _Conference2Cost As Short
		
		Private _Conference3 As String
		
		Private _Conference3Cost As Short
		
		Private _Conference4 As String
		
		Private _Conference4Cost As Short
		
		Private _Conference5 As String
		
		Private _Conference5Cost As Short
		
		Private _Conference6 As String
		
		Private _Conference6Cost As Short
		
		Private _Conference7 As String
		
		Private _Conference7Cost As Short
		
		Private _Conference8 As String
		
		Private _Conference8Cost As Short
		
		Private _Printing As Short
		
		Private _Postage As Short
		
		Private _Literature As Short
		
		Private _PublicTransport As Short
		
		Private _CarMileage As Short
		
		Private _Subsistence As Short
		
		Private _PhoneCalls As Short
		
		Private _MobilePhone As Short
		
		Private _PhoneRental As Short
		
		Private _Entertaining As Short
		
		Private _Other As Short
		
		Private _Transfers As Short
		
		Private _CurrentSupport As Short
		
		Private _SubmittedDate As System.Nullable(Of Date)
		
		Private _Pension As Decimal
		
		Private _Cap As System.Nullable(Of Decimal)
		
		Private _Min As System.Nullable(Of Decimal)
		
		Private _UserID As System.Nullable(Of Integer)
		
		Private _PortalID As System.Nullable(Of Integer)
		
		Private _StaffId As System.Nullable(Of Long)
		
		Private _StartYear As System.Nullable(Of Short)
		
		Private _UpdatePeriod As System.Nullable(Of Byte)
		
		Private _Status As System.Nullable(Of Byte)
		
		Private _Approver As System.Nullable(Of Integer)
		
		Private _Split As System.Nullable(Of Double)
		
		Private _NIPaid As System.Nullable(Of Decimal)
		
		Private _TBWriteBack As System.Nullable(Of Byte)
		
		Private _PensionSplit As System.Nullable(Of Double)
		
		Private _StaffName As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBudgetIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnBudgetIdChanged()
    End Sub
    Partial Private Sub OnGrossSalaryChanging(value As Decimal)
    End Sub
    Partial Private Sub OnGrossSalaryChanged()
    End Sub
    Partial Private Sub OnConference1Changing(value As String)
    End Sub
    Partial Private Sub OnConference1Changed()
    End Sub
    Partial Private Sub OnConference1CostChanging(value As Short)
    End Sub
    Partial Private Sub OnConference1CostChanged()
    End Sub
    Partial Private Sub OnConference2Changing(value As String)
    End Sub
    Partial Private Sub OnConference2Changed()
    End Sub
    Partial Private Sub OnConference2CostChanging(value As Short)
    End Sub
    Partial Private Sub OnConference2CostChanged()
    End Sub
    Partial Private Sub OnConference3Changing(value As String)
    End Sub
    Partial Private Sub OnConference3Changed()
    End Sub
    Partial Private Sub OnConference3CostChanging(value As Short)
    End Sub
    Partial Private Sub OnConference3CostChanged()
    End Sub
    Partial Private Sub OnConference4Changing(value As String)
    End Sub
    Partial Private Sub OnConference4Changed()
    End Sub
    Partial Private Sub OnConference4CostChanging(value As Short)
    End Sub
    Partial Private Sub OnConference4CostChanged()
    End Sub
    Partial Private Sub OnConference5Changing(value As String)
    End Sub
    Partial Private Sub OnConference5Changed()
    End Sub
    Partial Private Sub OnConference5CostChanging(value As Short)
    End Sub
    Partial Private Sub OnConference5CostChanged()
    End Sub
    Partial Private Sub OnConference6Changing(value As String)
    End Sub
    Partial Private Sub OnConference6Changed()
    End Sub
    Partial Private Sub OnConference6CostChanging(value As Short)
    End Sub
    Partial Private Sub OnConference6CostChanged()
    End Sub
    Partial Private Sub OnConference7Changing(value As String)
    End Sub
    Partial Private Sub OnConference7Changed()
    End Sub
    Partial Private Sub OnConference7CostChanging(value As Short)
    End Sub
    Partial Private Sub OnConference7CostChanged()
    End Sub
    Partial Private Sub OnConference8Changing(value As String)
    End Sub
    Partial Private Sub OnConference8Changed()
    End Sub
    Partial Private Sub OnConference8CostChanging(value As Short)
    End Sub
    Partial Private Sub OnConference8CostChanged()
    End Sub
    Partial Private Sub OnPrintingChanging(value As Short)
    End Sub
    Partial Private Sub OnPrintingChanged()
    End Sub
    Partial Private Sub OnPostageChanging(value As Short)
    End Sub
    Partial Private Sub OnPostageChanged()
    End Sub
    Partial Private Sub OnLiteratureChanging(value As Short)
    End Sub
    Partial Private Sub OnLiteratureChanged()
    End Sub
    Partial Private Sub OnPublicTransportChanging(value As Short)
    End Sub
    Partial Private Sub OnPublicTransportChanged()
    End Sub
    Partial Private Sub OnCarMileageChanging(value As Short)
    End Sub
    Partial Private Sub OnCarMileageChanged()
    End Sub
    Partial Private Sub OnSubsistenceChanging(value As Short)
    End Sub
    Partial Private Sub OnSubsistenceChanged()
    End Sub
    Partial Private Sub OnPhoneCallsChanging(value As Short)
    End Sub
    Partial Private Sub OnPhoneCallsChanged()
    End Sub
    Partial Private Sub OnMobilePhoneChanging(value As Short)
    End Sub
    Partial Private Sub OnMobilePhoneChanged()
    End Sub
    Partial Private Sub OnPhoneRentalChanging(value As Short)
    End Sub
    Partial Private Sub OnPhoneRentalChanged()
    End Sub
    Partial Private Sub OnEntertainingChanging(value As Short)
    End Sub
    Partial Private Sub OnEntertainingChanged()
    End Sub
    Partial Private Sub OnOtherChanging(value As Short)
    End Sub
    Partial Private Sub OnOtherChanged()
    End Sub
    Partial Private Sub OnTransfersChanging(value As Short)
    End Sub
    Partial Private Sub OnTransfersChanged()
    End Sub
    Partial Private Sub OnCurrentSupportChanging(value As Short)
    End Sub
    Partial Private Sub OnCurrentSupportChanged()
    End Sub
    Partial Private Sub OnSubmittedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSubmittedDateChanged()
    End Sub
    Partial Private Sub OnPensionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPensionChanged()
    End Sub
    Partial Private Sub OnCapChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCapChanged()
    End Sub
    Partial Private Sub OnMinChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMinChanged()
    End Sub
    Partial Private Sub OnUserIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnUserIDChanged()
    End Sub
    Partial Private Sub OnPortalIDChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPortalIDChanged()
    End Sub
    Partial Private Sub OnStaffIdChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnStaffIdChanged()
    End Sub
    Partial Private Sub OnStartYearChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnStartYearChanged()
    End Sub
    Partial Private Sub OnUpdatePeriodChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnUpdatePeriodChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnApproverChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnApproverChanged()
    End Sub
    Partial Private Sub OnSplitChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnSplitChanged()
    End Sub
    Partial Private Sub OnNIPaidChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnNIPaidChanged()
    End Sub
    Partial Private Sub OnTBWriteBackChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnTBWriteBackChanged()
    End Sub
    Partial Private Sub OnPensionSplitChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnPensionSplitChanged()
    End Sub
    Partial Private Sub OnStaffNameChanging(value As String)
    End Sub
    Partial Private Sub OnStaffNameChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BudgetId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property BudgetId() As Integer
			Get
				Return Me._BudgetId
			End Get
			Set
				If ((Me._BudgetId = value)  _
							= false) Then
					Me.OnBudgetIdChanging(value)
					Me.SendPropertyChanging
					Me._BudgetId = value
					Me.SendPropertyChanged("BudgetId")
					Me.OnBudgetIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GrossSalary", DbType:="SmallMoney NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property GrossSalary() As Decimal
			Get
				Return Me._GrossSalary
			End Get
			Set
				If ((Me._GrossSalary = value)  _
							= false) Then
					Me.OnGrossSalaryChanging(value)
					Me.SendPropertyChanging
					Me._GrossSalary = value
					Me.SendPropertyChanged("GrossSalary")
					Me.OnGrossSalaryChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference1", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property Conference1() As String
			Get
				Return Me._Conference1
			End Get
			Set
				If (String.Equals(Me._Conference1, value) = false) Then
					Me.OnConference1Changing(value)
					Me.SendPropertyChanging
					Me._Conference1 = value
					Me.SendPropertyChanged("Conference1")
					Me.OnConference1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference1Cost", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property Conference1Cost() As Short
			Get
				Return Me._Conference1Cost
			End Get
			Set
				If ((Me._Conference1Cost = value)  _
							= false) Then
					Me.OnConference1CostChanging(value)
					Me.SendPropertyChanging
					Me._Conference1Cost = value
					Me.SendPropertyChanged("Conference1Cost")
					Me.OnConference1CostChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference2", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property Conference2() As String
			Get
				Return Me._Conference2
			End Get
			Set
				If (String.Equals(Me._Conference2, value) = false) Then
					Me.OnConference2Changing(value)
					Me.SendPropertyChanging
					Me._Conference2 = value
					Me.SendPropertyChanged("Conference2")
					Me.OnConference2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference2Cost", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Conference2Cost() As Short
			Get
				Return Me._Conference2Cost
			End Get
			Set
				If ((Me._Conference2Cost = value)  _
							= false) Then
					Me.OnConference2CostChanging(value)
					Me.SendPropertyChanging
					Me._Conference2Cost = value
					Me.SendPropertyChanged("Conference2Cost")
					Me.OnConference2CostChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference3", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Conference3() As String
			Get
				Return Me._Conference3
			End Get
			Set
				If (String.Equals(Me._Conference3, value) = false) Then
					Me.OnConference3Changing(value)
					Me.SendPropertyChanging
					Me._Conference3 = value
					Me.SendPropertyChanged("Conference3")
					Me.OnConference3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference3Cost", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Conference3Cost() As Short
			Get
				Return Me._Conference3Cost
			End Get
			Set
				If ((Me._Conference3Cost = value)  _
							= false) Then
					Me.OnConference3CostChanging(value)
					Me.SendPropertyChanging
					Me._Conference3Cost = value
					Me.SendPropertyChanged("Conference3Cost")
					Me.OnConference3CostChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference4", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property Conference4() As String
			Get
				Return Me._Conference4
			End Get
			Set
				If (String.Equals(Me._Conference4, value) = false) Then
					Me.OnConference4Changing(value)
					Me.SendPropertyChanging
					Me._Conference4 = value
					Me.SendPropertyChanged("Conference4")
					Me.OnConference4Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference4Cost", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property Conference4Cost() As Short
			Get
				Return Me._Conference4Cost
			End Get
			Set
				If ((Me._Conference4Cost = value)  _
							= false) Then
					Me.OnConference4CostChanging(value)
					Me.SendPropertyChanging
					Me._Conference4Cost = value
					Me.SendPropertyChanged("Conference4Cost")
					Me.OnConference4CostChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference5", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property Conference5() As String
			Get
				Return Me._Conference5
			End Get
			Set
				If (String.Equals(Me._Conference5, value) = false) Then
					Me.OnConference5Changing(value)
					Me.SendPropertyChanging
					Me._Conference5 = value
					Me.SendPropertyChanged("Conference5")
					Me.OnConference5Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference5Cost", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property Conference5Cost() As Short
			Get
				Return Me._Conference5Cost
			End Get
			Set
				If ((Me._Conference5Cost = value)  _
							= false) Then
					Me.OnConference5CostChanging(value)
					Me.SendPropertyChanging
					Me._Conference5Cost = value
					Me.SendPropertyChanged("Conference5Cost")
					Me.OnConference5CostChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference6", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property Conference6() As String
			Get
				Return Me._Conference6
			End Get
			Set
				If (String.Equals(Me._Conference6, value) = false) Then
					Me.OnConference6Changing(value)
					Me.SendPropertyChanging
					Me._Conference6 = value
					Me.SendPropertyChanged("Conference6")
					Me.OnConference6Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference6Cost", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property Conference6Cost() As Short
			Get
				Return Me._Conference6Cost
			End Get
			Set
				If ((Me._Conference6Cost = value)  _
							= false) Then
					Me.OnConference6CostChanging(value)
					Me.SendPropertyChanging
					Me._Conference6Cost = value
					Me.SendPropertyChanged("Conference6Cost")
					Me.OnConference6CostChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference7", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
		Public Property Conference7() As String
			Get
				Return Me._Conference7
			End Get
			Set
				If (String.Equals(Me._Conference7, value) = false) Then
					Me.OnConference7Changing(value)
					Me.SendPropertyChanging
					Me._Conference7 = value
					Me.SendPropertyChanged("Conference7")
					Me.OnConference7Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference7Cost", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16)>  _
		Public Property Conference7Cost() As Short
			Get
				Return Me._Conference7Cost
			End Get
			Set
				If ((Me._Conference7Cost = value)  _
							= false) Then
					Me.OnConference7CostChanging(value)
					Me.SendPropertyChanging
					Me._Conference7Cost = value
					Me.SendPropertyChanged("Conference7Cost")
					Me.OnConference7CostChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference8", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=17)>  _
		Public Property Conference8() As String
			Get
				Return Me._Conference8
			End Get
			Set
				If (String.Equals(Me._Conference8, value) = false) Then
					Me.OnConference8Changing(value)
					Me.SendPropertyChanging
					Me._Conference8 = value
					Me.SendPropertyChanged("Conference8")
					Me.OnConference8Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Conference8Cost", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=18)>  _
		Public Property Conference8Cost() As Short
			Get
				Return Me._Conference8Cost
			End Get
			Set
				If ((Me._Conference8Cost = value)  _
							= false) Then
					Me.OnConference8CostChanging(value)
					Me.SendPropertyChanging
					Me._Conference8Cost = value
					Me.SendPropertyChanged("Conference8Cost")
					Me.OnConference8CostChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Printing", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=19)>  _
		Public Property Printing() As Short
			Get
				Return Me._Printing
			End Get
			Set
				If ((Me._Printing = value)  _
							= false) Then
					Me.OnPrintingChanging(value)
					Me.SendPropertyChanging
					Me._Printing = value
					Me.SendPropertyChanged("Printing")
					Me.OnPrintingChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Postage", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=20)>  _
		Public Property Postage() As Short
			Get
				Return Me._Postage
			End Get
			Set
				If ((Me._Postage = value)  _
							= false) Then
					Me.OnPostageChanging(value)
					Me.SendPropertyChanging
					Me._Postage = value
					Me.SendPropertyChanged("Postage")
					Me.OnPostageChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Literature", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=21)>  _
		Public Property Literature() As Short
			Get
				Return Me._Literature
			End Get
			Set
				If ((Me._Literature = value)  _
							= false) Then
					Me.OnLiteratureChanging(value)
					Me.SendPropertyChanging
					Me._Literature = value
					Me.SendPropertyChanged("Literature")
					Me.OnLiteratureChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PublicTransport", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=22)>  _
		Public Property PublicTransport() As Short
			Get
				Return Me._PublicTransport
			End Get
			Set
				If ((Me._PublicTransport = value)  _
							= false) Then
					Me.OnPublicTransportChanging(value)
					Me.SendPropertyChanging
					Me._PublicTransport = value
					Me.SendPropertyChanged("PublicTransport")
					Me.OnPublicTransportChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CarMileage", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=23)>  _
		Public Property CarMileage() As Short
			Get
				Return Me._CarMileage
			End Get
			Set
				If ((Me._CarMileage = value)  _
							= false) Then
					Me.OnCarMileageChanging(value)
					Me.SendPropertyChanging
					Me._CarMileage = value
					Me.SendPropertyChanged("CarMileage")
					Me.OnCarMileageChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Subsistence", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=24)>  _
		Public Property Subsistence() As Short
			Get
				Return Me._Subsistence
			End Get
			Set
				If ((Me._Subsistence = value)  _
							= false) Then
					Me.OnSubsistenceChanging(value)
					Me.SendPropertyChanging
					Me._Subsistence = value
					Me.SendPropertyChanged("Subsistence")
					Me.OnSubsistenceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneCalls", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=25)>  _
		Public Property PhoneCalls() As Short
			Get
				Return Me._PhoneCalls
			End Get
			Set
				If ((Me._PhoneCalls = value)  _
							= false) Then
					Me.OnPhoneCallsChanging(value)
					Me.SendPropertyChanging
					Me._PhoneCalls = value
					Me.SendPropertyChanged("PhoneCalls")
					Me.OnPhoneCallsChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MobilePhone", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=26)>  _
		Public Property MobilePhone() As Short
			Get
				Return Me._MobilePhone
			End Get
			Set
				If ((Me._MobilePhone = value)  _
							= false) Then
					Me.OnMobilePhoneChanging(value)
					Me.SendPropertyChanging
					Me._MobilePhone = value
					Me.SendPropertyChanged("MobilePhone")
					Me.OnMobilePhoneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PhoneRental", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=27)>  _
		Public Property PhoneRental() As Short
			Get
				Return Me._PhoneRental
			End Get
			Set
				If ((Me._PhoneRental = value)  _
							= false) Then
					Me.OnPhoneRentalChanging(value)
					Me.SendPropertyChanging
					Me._PhoneRental = value
					Me.SendPropertyChanged("PhoneRental")
					Me.OnPhoneRentalChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Entertaining", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=28)>  _
		Public Property Entertaining() As Short
			Get
				Return Me._Entertaining
			End Get
			Set
				If ((Me._Entertaining = value)  _
							= false) Then
					Me.OnEntertainingChanging(value)
					Me.SendPropertyChanging
					Me._Entertaining = value
					Me.SendPropertyChanged("Entertaining")
					Me.OnEntertainingChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Other", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=29)>  _
		Public Property Other() As Short
			Get
				Return Me._Other
			End Get
			Set
				If ((Me._Other = value)  _
							= false) Then
					Me.OnOtherChanging(value)
					Me.SendPropertyChanging
					Me._Other = value
					Me.SendPropertyChanged("Other")
					Me.OnOtherChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Transfers", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=30)>  _
		Public Property Transfers() As Short
			Get
				Return Me._Transfers
			End Get
			Set
				If ((Me._Transfers = value)  _
							= false) Then
					Me.OnTransfersChanging(value)
					Me.SendPropertyChanging
					Me._Transfers = value
					Me.SendPropertyChanged("Transfers")
					Me.OnTransfersChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CurrentSupport", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=31)>  _
		Public Property CurrentSupport() As Short
			Get
				Return Me._CurrentSupport
			End Get
			Set
				If ((Me._CurrentSupport = value)  _
							= false) Then
					Me.OnCurrentSupportChanging(value)
					Me.SendPropertyChanging
					Me._CurrentSupport = value
					Me.SendPropertyChanged("CurrentSupport")
					Me.OnCurrentSupportChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedDate", DbType:="DateTime"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=32)>  _
		Public Property SubmittedDate() As System.Nullable(Of Date)
			Get
				Return Me._SubmittedDate
			End Get
			Set
				If (Me._SubmittedDate.Equals(value) = false) Then
					Me.OnSubmittedDateChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedDate = value
					Me.SendPropertyChanged("SubmittedDate")
					Me.OnSubmittedDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Pension", DbType:="SmallMoney NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=33)>  _
		Public Property Pension() As Decimal
			Get
				Return Me._Pension
			End Get
			Set
				If ((Me._Pension = value)  _
							= false) Then
					Me.OnPensionChanging(value)
					Me.SendPropertyChanging
					Me._Pension = value
					Me.SendPropertyChanged("Pension")
					Me.OnPensionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cap", DbType:="SmallMoney"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=34)>  _
		Public Property Cap() As System.Nullable(Of Decimal)
			Get
				Return Me._Cap
			End Get
			Set
				If (Me._Cap.Equals(value) = false) Then
					Me.OnCapChanging(value)
					Me.SendPropertyChanging
					Me._Cap = value
					Me.SendPropertyChanged("Cap")
					Me.OnCapChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Min", DbType:="SmallMoney"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=35)>  _
		Public Property Min() As System.Nullable(Of Decimal)
			Get
				Return Me._Min
			End Get
			Set
				If (Me._Min.Equals(value) = false) Then
					Me.OnMinChanging(value)
					Me.SendPropertyChanging
					Me._Min = value
					Me.SendPropertyChanged("Min")
					Me.OnMinChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=36)>  _
		Public Property UserID() As System.Nullable(Of Integer)
			Get
				Return Me._UserID
			End Get
			Set
				If (Me._UserID.Equals(value) = false) Then
					Me.OnUserIDChanging(value)
					Me.SendPropertyChanging
					Me._UserID = value
					Me.SendPropertyChanged("UserID")
					Me.OnUserIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalID", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=37)>  _
		Public Property PortalID() As System.Nullable(Of Integer)
			Get
				Return Me._PortalID
			End Get
			Set
				If (Me._PortalID.Equals(value) = false) Then
					Me.OnPortalIDChanging(value)
					Me.SendPropertyChanging
					Me._PortalID = value
					Me.SendPropertyChanged("PortalID")
					Me.OnPortalIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffId", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=38)>  _
		Public Property StaffId() As System.Nullable(Of Long)
			Get
				Return Me._StaffId
			End Get
			Set
				If (Me._StaffId.Equals(value) = false) Then
					Me.OnStaffIdChanging(value)
					Me.SendPropertyChanging
					Me._StaffId = value
					Me.SendPropertyChanged("StaffId")
					Me.OnStaffIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartYear", DbType:="SmallInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=39)>  _
		Public Property StartYear() As System.Nullable(Of Short)
			Get
				Return Me._StartYear
			End Get
			Set
				If (Me._StartYear.Equals(value) = false) Then
					Me.OnStartYearChanging(value)
					Me.SendPropertyChanging
					Me._StartYear = value
					Me.SendPropertyChanged("StartYear")
					Me.OnStartYearChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UpdatePeriod", DbType:="TinyInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=40)>  _
		Public Property UpdatePeriod() As System.Nullable(Of Byte)
			Get
				Return Me._UpdatePeriod
			End Get
			Set
				If (Me._UpdatePeriod.Equals(value) = false) Then
					Me.OnUpdatePeriodChanging(value)
					Me.SendPropertyChanging
					Me._UpdatePeriod = value
					Me.SendPropertyChanged("UpdatePeriod")
					Me.OnUpdatePeriodChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="TinyInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=41)>  _
		Public Property Status() As System.Nullable(Of Byte)
			Get
				Return Me._Status
			End Get
			Set
				If (Me._Status.Equals(value) = false) Then
					Me.OnStatusChanging(value)
					Me.SendPropertyChanging
					Me._Status = value
					Me.SendPropertyChanged("Status")
					Me.OnStatusChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Approver", DbType:="Int"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=42)>  _
		Public Property Approver() As System.Nullable(Of Integer)
			Get
				Return Me._Approver
			End Get
			Set
				If (Me._Approver.Equals(value) = false) Then
					Me.OnApproverChanging(value)
					Me.SendPropertyChanging
					Me._Approver = value
					Me.SendPropertyChanged("Approver")
					Me.OnApproverChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Split", DbType:="Float"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=43)>  _
		Public Property Split() As System.Nullable(Of Double)
			Get
				Return Me._Split
			End Get
			Set
				If (Me._Split.Equals(value) = false) Then
					Me.OnSplitChanging(value)
					Me.SendPropertyChanging
					Me._Split = value
					Me.SendPropertyChanged("Split")
					Me.OnSplitChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NIPaid", DbType:="SmallMoney"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=44)>  _
		Public Property NIPaid() As System.Nullable(Of Decimal)
			Get
				Return Me._NIPaid
			End Get
			Set
				If (Me._NIPaid.Equals(value) = false) Then
					Me.OnNIPaidChanging(value)
					Me.SendPropertyChanging
					Me._NIPaid = value
					Me.SendPropertyChanged("NIPaid")
					Me.OnNIPaidChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TBWriteBack", DbType:="TinyInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=45)>  _
		Public Property TBWriteBack() As System.Nullable(Of Byte)
			Get
				Return Me._TBWriteBack
			End Get
			Set
				If (Me._TBWriteBack.Equals(value) = false) Then
					Me.OnTBWriteBackChanging(value)
					Me.SendPropertyChanging
					Me._TBWriteBack = value
					Me.SendPropertyChanged("TBWriteBack")
					Me.OnTBWriteBackChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PensionSplit", DbType:="Float"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=46)>  _
		Public Property PensionSplit() As System.Nullable(Of Double)
			Get
				Return Me._PensionSplit
			End Get
			Set
				If (Me._PensionSplit.Equals(value) = false) Then
					Me.OnPensionSplitChanging(value)
					Me.SendPropertyChanging
					Me._PensionSplit = value
					Me.SendPropertyChanged("PensionSplit")
					Me.OnPensionSplitChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StaffName", DbType:="NVarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=47)>  _
		Public Property StaffName() As String
			Get
				Return Me._StaffName
			End Get
			Set
				If (String.Equals(Me._StaffName, value) = false) Then
					Me.OnStaffNameChanging(value)
					Me.SendPropertyChanging
					Me._StaffName = value
					Me.SendPropertyChanged("StaffName")
					Me.OnStaffNameChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Main_Project_Description"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Main_Project_Description
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ProjectsOn As System.Nullable(Of Boolean)
		
		Private _ProjectBlurb As String
		
		Private _ProjDescId As Integer
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnProjectsOnChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnProjectsOnChanged()
    End Sub
    Partial Private Sub OnProjectBlurbChanging(value As String)
    End Sub
    Partial Private Sub OnProjectBlurbChanged()
    End Sub
    Partial Private Sub OnProjDescIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnProjDescIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectsOn", DbType:="Bit"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property ProjectsOn() As System.Nullable(Of Boolean)
			Get
				Return Me._ProjectsOn
			End Get
			Set
				If (Me._ProjectsOn.Equals(value) = false) Then
					Me.OnProjectsOnChanging(value)
					Me.SendPropertyChanging
					Me._ProjectsOn = value
					Me.SendPropertyChanged("ProjectsOn")
					Me.OnProjectsOnChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectBlurb", DbType:="NVarChar(MAX)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property ProjectBlurb() As String
			Get
				Return Me._ProjectBlurb
			End Get
			Set
				If (String.Equals(Me._ProjectBlurb, value) = false) Then
					Me.OnProjectBlurbChanging(value)
					Me.SendPropertyChanging
					Me._ProjectBlurb = value
					Me.SendPropertyChanged("ProjectBlurb")
					Me.OnProjectBlurbChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjDescId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property ProjDescId() As Integer
			Get
				Return Me._ProjDescId
			End Get
			Set
				If ((Me._ProjDescId = value)  _
							= false) Then
					Me.OnProjDescIdChanging(value)
					Me.SendPropertyChanging
					Me._ProjDescId = value
					Me.SendPropertyChanged("ProjDescId")
					Me.OnProjDescIdChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub Initialize()
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Agape_Staff_RmbLine"),  _
	 Global.System.Runtime.Serialization.DataContractAttribute()>  _
	Partial Public Class Agape_Staff_RmbLine
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _RmbLineNo As Long
		
		Private _RmbNo As System.Nullable(Of Long)
		
		Private _LineType As System.Nullable(Of Short)
		
		Private _GrossAmount As System.Nullable(Of Decimal)
		
		Private _TransDate As System.Nullable(Of Date)
		
		Private _Comment As String
		
		Private _Taxable As Boolean
		
		Private _Receipt As Boolean
		
		Private _VATReceipt As Boolean
		
		Private _ReceiptNo As System.Nullable(Of Short)
		
		Private _Spare1 As String
		
		Private _Spare2 As String
		
		Private _Spare3 As String
		
		Private _Spare4 As String
		
		Private _Spare5 As String
		
		Private _TB As Short
		
		Private _AnalysisCode As String
		
		Private _VATAmount As System.Nullable(Of Decimal)
		
		Private _VATCode As String
		
		Private _VATRate As System.Nullable(Of Double)
		
		Private _OutOfDate As System.Nullable(Of Boolean)
		
		Private _LargeTransaction As System.Nullable(Of Boolean)
		
		Private _Split As System.Nullable(Of Boolean)
		
		Private _Agape_Staff_RmbLineAddStaffs As EntitySet(Of Agape_Staff_RmbLineAddStaff)
		
		Private _Agape_Staff_Rmb As EntityRef(Of Agape_Staff_Rmb)
		
		Private _Agape_Staff_RmbLineType As EntityRef(Of Agape_Staff_RmbLineType)
		
		Private serializing As Boolean
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRmbLineNoChanging(value As Long)
    End Sub
    Partial Private Sub OnRmbLineNoChanged()
    End Sub
    Partial Private Sub OnRmbNoChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnRmbNoChanged()
    End Sub
    Partial Private Sub OnLineTypeChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnLineTypeChanged()
    End Sub
    Partial Private Sub OnGrossAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnGrossAmountChanged()
    End Sub
    Partial Private Sub OnTransDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnTransDateChanged()
    End Sub
    Partial Private Sub OnCommentChanging(value As String)
    End Sub
    Partial Private Sub OnCommentChanged()
    End Sub
    Partial Private Sub OnTaxableChanging(value As Boolean)
    End Sub
    Partial Private Sub OnTaxableChanged()
    End Sub
    Partial Private Sub OnReceiptChanging(value As Boolean)
    End Sub
    Partial Private Sub OnReceiptChanged()
    End Sub
    Partial Private Sub OnVATReceiptChanging(value As Boolean)
    End Sub
    Partial Private Sub OnVATReceiptChanged()
    End Sub
    Partial Private Sub OnReceiptNoChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnReceiptNoChanged()
    End Sub
    Partial Private Sub OnSpare1Changing(value As String)
    End Sub
    Partial Private Sub OnSpare1Changed()
    End Sub
    Partial Private Sub OnSpare2Changing(value As String)
    End Sub
    Partial Private Sub OnSpare2Changed()
    End Sub
    Partial Private Sub OnSpare3Changing(value As String)
    End Sub
    Partial Private Sub OnSpare3Changed()
    End Sub
    Partial Private Sub OnSpare4Changing(value As String)
    End Sub
    Partial Private Sub OnSpare4Changed()
    End Sub
    Partial Private Sub OnSpare5Changing(value As String)
    End Sub
    Partial Private Sub OnSpare5Changed()
    End Sub
    Partial Private Sub OnTBChanging(value As Short)
    End Sub
    Partial Private Sub OnTBChanged()
    End Sub
    Partial Private Sub OnAnalysisCodeChanging(value As String)
    End Sub
    Partial Private Sub OnAnalysisCodeChanged()
    End Sub
    Partial Private Sub OnVATAmountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnVATAmountChanged()
    End Sub
    Partial Private Sub OnVATCodeChanging(value As String)
    End Sub
    Partial Private Sub OnVATCodeChanged()
    End Sub
    Partial Private Sub OnVATRateChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVATRateChanged()
    End Sub
    Partial Private Sub OnOutOfDateChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnOutOfDateChanged()
    End Sub
    Partial Private Sub OnLargeTransactionChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnLargeTransactionChanged()
    End Sub
    Partial Private Sub OnSplitChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnSplitChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me.Initialize
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RmbLineNo", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=1)>  _
		Public Property RmbLineNo() As Long
			Get
				Return Me._RmbLineNo
			End Get
			Set
				If ((Me._RmbLineNo = value)  _
							= false) Then
					Me.OnRmbLineNoChanging(value)
					Me.SendPropertyChanging
					Me._RmbLineNo = value
					Me.SendPropertyChanged("RmbLineNo")
					Me.OnRmbLineNoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RmbNo", DbType:="BigInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=2)>  _
		Public Property RmbNo() As System.Nullable(Of Long)
			Get
				Return Me._RmbNo
			End Get
			Set
				If (Me._RmbNo.Equals(value) = false) Then
					If Me._Agape_Staff_Rmb.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnRmbNoChanging(value)
					Me.SendPropertyChanging
					Me._RmbNo = value
					Me.SendPropertyChanged("RmbNo")
					Me.OnRmbNoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LineType", DbType:="SmallInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=3)>  _
		Public Property LineType() As System.Nullable(Of Short)
			Get
				Return Me._LineType
			End Get
			Set
				If (Me._LineType.Equals(value) = false) Then
					If Me._Agape_Staff_RmbLineType.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnLineTypeChanging(value)
					Me.SendPropertyChanging
					Me._LineType = value
					Me.SendPropertyChanged("LineType")
					Me.OnLineTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GrossAmount", DbType:="Money"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=4)>  _
		Public Property GrossAmount() As System.Nullable(Of Decimal)
			Get
				Return Me._GrossAmount
			End Get
			Set
				If (Me._GrossAmount.Equals(value) = false) Then
					Me.OnGrossAmountChanging(value)
					Me.SendPropertyChanging
					Me._GrossAmount = value
					Me.SendPropertyChanged("GrossAmount")
					Me.OnGrossAmountChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TransDate", DbType:="Date"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=5)>  _
		Public Property TransDate() As System.Nullable(Of Date)
			Get
				Return Me._TransDate
			End Get
			Set
				If (Me._TransDate.Equals(value) = false) Then
					Me.OnTransDateChanging(value)
					Me.SendPropertyChanging
					Me._TransDate = value
					Me.SendPropertyChanged("TransDate")
					Me.OnTransDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Comment", DbType:="NVarChar(MAX)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=6)>  _
		Public Property Comment() As String
			Get
				Return Me._Comment
			End Get
			Set
				If (String.Equals(Me._Comment, value) = false) Then
					Me.OnCommentChanging(value)
					Me.SendPropertyChanging
					Me._Comment = value
					Me.SendPropertyChanged("Comment")
					Me.OnCommentChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Taxable", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=7)>  _
		Public Property Taxable() As Boolean
			Get
				Return Me._Taxable
			End Get
			Set
				If ((Me._Taxable = value)  _
							= false) Then
					Me.OnTaxableChanging(value)
					Me.SendPropertyChanging
					Me._Taxable = value
					Me.SendPropertyChanged("Taxable")
					Me.OnTaxableChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Receipt", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=8)>  _
		Public Property Receipt() As Boolean
			Get
				Return Me._Receipt
			End Get
			Set
				If ((Me._Receipt = value)  _
							= false) Then
					Me.OnReceiptChanging(value)
					Me.SendPropertyChanging
					Me._Receipt = value
					Me.SendPropertyChanged("Receipt")
					Me.OnReceiptChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATReceipt", DbType:="Bit NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=9)>  _
		Public Property VATReceipt() As Boolean
			Get
				Return Me._VATReceipt
			End Get
			Set
				If ((Me._VATReceipt = value)  _
							= false) Then
					Me.OnVATReceiptChanging(value)
					Me.SendPropertyChanging
					Me._VATReceipt = value
					Me.SendPropertyChanged("VATReceipt")
					Me.OnVATReceiptChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ReceiptNo", DbType:="SmallInt"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=10)>  _
		Public Property ReceiptNo() As System.Nullable(Of Short)
			Get
				Return Me._ReceiptNo
			End Get
			Set
				If (Me._ReceiptNo.Equals(value) = false) Then
					Me.OnReceiptNoChanging(value)
					Me.SendPropertyChanging
					Me._ReceiptNo = value
					Me.SendPropertyChanged("ReceiptNo")
					Me.OnReceiptNoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spare1", DbType:="VarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=11)>  _
		Public Property Spare1() As String
			Get
				Return Me._Spare1
			End Get
			Set
				If (String.Equals(Me._Spare1, value) = false) Then
					Me.OnSpare1Changing(value)
					Me.SendPropertyChanging
					Me._Spare1 = value
					Me.SendPropertyChanged("Spare1")
					Me.OnSpare1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spare2", DbType:="VarChar(MAX)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=12)>  _
		Public Property Spare2() As String
			Get
				Return Me._Spare2
			End Get
			Set
				If (String.Equals(Me._Spare2, value) = false) Then
					Me.OnSpare2Changing(value)
					Me.SendPropertyChanging
					Me._Spare2 = value
					Me.SendPropertyChanged("Spare2")
					Me.OnSpare2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spare3", DbType:="VarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=13)>  _
		Public Property Spare3() As String
			Get
				Return Me._Spare3
			End Get
			Set
				If (String.Equals(Me._Spare3, value) = false) Then
					Me.OnSpare3Changing(value)
					Me.SendPropertyChanging
					Me._Spare3 = value
					Me.SendPropertyChanged("Spare3")
					Me.OnSpare3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spare4", DbType:="VarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=14)>  _
		Public Property Spare4() As String
			Get
				Return Me._Spare4
			End Get
			Set
				If (String.Equals(Me._Spare4, value) = false) Then
					Me.OnSpare4Changing(value)
					Me.SendPropertyChanging
					Me._Spare4 = value
					Me.SendPropertyChanged("Spare4")
					Me.OnSpare4Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Spare5", DbType:="VarChar(100)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=15)>  _
		Public Property Spare5() As String
			Get
				Return Me._Spare5
			End Get
			Set
				If (String.Equals(Me._Spare5, value) = false) Then
					Me.OnSpare5Changing(value)
					Me.SendPropertyChanging
					Me._Spare5 = value
					Me.SendPropertyChanged("Spare5")
					Me.OnSpare5Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TB", DbType:="SmallInt NOT NULL"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=16)>  _
		Public Property TB() As Short
			Get
				Return Me._TB
			End Get
			Set
				If ((Me._TB = value)  _
							= false) Then
					Me.OnTBChanging(value)
					Me.SendPropertyChanging
					Me._TB = value
					Me.SendPropertyChanged("TB")
					Me.OnTBChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnalysisCode", DbType:="VarChar(20)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=17)>  _
		Public Property AnalysisCode() As String
			Get
				Return Me._AnalysisCode
			End Get
			Set
				If (String.Equals(Me._AnalysisCode, value) = false) Then
					Me.OnAnalysisCodeChanging(value)
					Me.SendPropertyChanging
					Me._AnalysisCode = value
					Me.SendPropertyChanged("AnalysisCode")
					Me.OnAnalysisCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATAmount", DbType:="Money"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=18)>  _
		Public Property VATAmount() As System.Nullable(Of Decimal)
			Get
				Return Me._VATAmount
			End Get
			Set
				If (Me._VATAmount.Equals(value) = false) Then
					Me.OnVATAmountChanging(value)
					Me.SendPropertyChanging
					Me._VATAmount = value
					Me.SendPropertyChanged("VATAmount")
					Me.OnVATAmountChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATCode", DbType:="VarChar(2)"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=19)>  _
		Public Property VATCode() As String
			Get
				Return Me._VATCode
			End Get
			Set
				If (String.Equals(Me._VATCode, value) = false) Then
					Me.OnVATCodeChanging(value)
					Me.SendPropertyChanging
					Me._VATCode = value
					Me.SendPropertyChanged("VATCode")
					Me.OnVATCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VATRate", DbType:="Float"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=20)>  _
		Public Property VATRate() As System.Nullable(Of Double)
			Get
				Return Me._VATRate
			End Get
			Set
				If (Me._VATRate.Equals(value) = false) Then
					Me.OnVATRateChanging(value)
					Me.SendPropertyChanging
					Me._VATRate = value
					Me.SendPropertyChanged("VATRate")
					Me.OnVATRateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OutOfDate", DbType:="Bit"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=21)>  _
		Public Property OutOfDate() As System.Nullable(Of Boolean)
			Get
				Return Me._OutOfDate
			End Get
			Set
				If (Me._OutOfDate.Equals(value) = false) Then
					Me.OnOutOfDateChanging(value)
					Me.SendPropertyChanging
					Me._OutOfDate = value
					Me.SendPropertyChanged("OutOfDate")
					Me.OnOutOfDateChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LargeTransaction", DbType:="Bit"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=22)>  _
		Public Property LargeTransaction() As System.Nullable(Of Boolean)
			Get
				Return Me._LargeTransaction
			End Get
			Set
				If (Me._LargeTransaction.Equals(value) = false) Then
					Me.OnLargeTransactionChanging(value)
					Me.SendPropertyChanging
					Me._LargeTransaction = value
					Me.SendPropertyChanged("LargeTransaction")
					Me.OnLargeTransactionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Split", DbType:="Bit"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=23)>  _
		Public Property Split() As System.Nullable(Of Boolean)
			Get
				Return Me._Split
			End Get
			Set
				If (Me._Split.Equals(value) = false) Then
					Me.OnSplitChanging(value)
					Me.SendPropertyChanging
					Me._Split = value
					Me.SendPropertyChanged("Split")
					Me.OnSplitChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Agape_Staff_RmbLine_Agape_Staff_RmbLineAddStaff", Storage:="_Agape_Staff_RmbLineAddStaffs", ThisKey:="RmbLineNo", OtherKey:="RmbLineId"),  _
		 Global.System.Runtime.Serialization.DataMemberAttribute(Order:=24, EmitDefaultValue:=false)>  _
		Public Property Agape_Staff_RmbLineAddStaffs() As EntitySet(Of Agape_Staff_RmbLineAddStaff)
			Get
				If (Me.serializing  _
							AndAlso (Me._Agape_Staff_RmbLineAddStaffs.HasLoadedOrAssignedValues = false)) Then
					Return Nothing
				End If
				Return Me._Agape_Staff_RmbLineAddStaffs
			End Get
			Set
				Me._Agape_Staff_RmbLineAddStaffs.Assign(value)
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Agape_Staff_Rmb_Agape_Staff_RmbLine", Storage:="_Agape_Staff_Rmb", ThisKey:="RmbNo", OtherKey:="RMBNo", IsForeignKey:=true)>  _
		Public Property Agape_Staff_Rmb() As Agape_Staff_Rmb
			Get
				Return Me._Agape_Staff_Rmb.Entity
			End Get
			Set
				Dim previousValue As Agape_Staff_Rmb = Me._Agape_Staff_Rmb.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Agape_Staff_Rmb.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Agape_Staff_Rmb.Entity = Nothing
						previousValue.Agape_Staff_RmbLines.Remove(Me)
					End If
					Me._Agape_Staff_Rmb.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.Agape_Staff_RmbLines.Add(Me)
						Me._RmbNo = value.RMBNo
					Else
						Me._RmbNo = CType(Nothing, Nullable(Of Long))
					End If
					Me.SendPropertyChanged("Agape_Staff_Rmb")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Agape_Staff_RmbLineType_Agape_Staff_RmbLine", Storage:="_Agape_Staff_RmbLineType", ThisKey:="LineType", OtherKey:="TypeNo", IsForeignKey:=true)>  _
		Public Property Agape_Staff_RmbLineType() As Agape_Staff_RmbLineType
			Get
				Return Me._Agape_Staff_RmbLineType.Entity
			End Get
			Set
				Dim previousValue As Agape_Staff_RmbLineType = Me._Agape_Staff_RmbLineType.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._Agape_Staff_RmbLineType.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._Agape_Staff_RmbLineType.Entity = Nothing
						previousValue.Agape_Staff_RmbLines.Remove(Me)
					End If
					Me._Agape_Staff_RmbLineType.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.Agape_Staff_RmbLines.Add(Me)
						Me._LineType = value.TypeNo
					Else
						Me._LineType = CType(Nothing, Nullable(Of Short))
					End If
					Me.SendPropertyChanged("Agape_Staff_RmbLineType")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_Agape_Staff_RmbLineAddStaffs(ByVal entity As Agape_Staff_RmbLineAddStaff)
			Me.SendPropertyChanging
			entity.Agape_Staff_RmbLine = Me
		End Sub
		
		Private Sub detach_Agape_Staff_RmbLineAddStaffs(ByVal entity As Agape_Staff_RmbLineAddStaff)
			Me.SendPropertyChanging
			entity.Agape_Staff_RmbLine = Nothing
		End Sub
		
		Private Sub Initialize()
			Me._Agape_Staff_RmbLineAddStaffs = New EntitySet(Of Agape_Staff_RmbLineAddStaff)(AddressOf Me.attach_Agape_Staff_RmbLineAddStaffs, AddressOf Me.detach_Agape_Staff_RmbLineAddStaffs)
			Me._Agape_Staff_Rmb = CType(Nothing, EntityRef(Of Agape_Staff_Rmb))
			Me._Agape_Staff_RmbLineType = CType(Nothing, EntityRef(Of Agape_Staff_RmbLineType))
			OnCreated
		End Sub
		
		<Global.System.Runtime.Serialization.OnDeserializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnDeserializing(ByVal context As StreamingContext)
			Me.Initialize
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializingAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerializing(ByVal context As StreamingContext)
			Me.serializing = true
		End Sub
		
		<Global.System.Runtime.Serialization.OnSerializedAttribute(),  _
		 Global.System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)>  _
		Public Sub OnSerialized(ByVal context As StreamingContext)
			Me.serializing = false
		End Sub
	End Class
End Namespace
