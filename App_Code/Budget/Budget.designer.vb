'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18046
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection

Namespace Budget
	
	<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="AgapeConnect")>  _
	Partial Public Class BudgetDataContext
		Inherits System.Data.Linq.DataContext
		
		Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertAP_Budget_Project(instance As AP_Budget_Project)
    End Sub
    Partial Private Sub UpdateAP_Budget_Project(instance As AP_Budget_Project)
    End Sub
    Partial Private Sub DeleteAP_Budget_Project(instance As AP_Budget_Project)
    End Sub
    Partial Private Sub InsertAP_Budget_Transaction(instance As AP_Budget_Transaction)
    End Sub
    Partial Private Sub UpdateAP_Budget_Transaction(instance As AP_Budget_Transaction)
    End Sub
    Partial Private Sub DeleteAP_Budget_Transaction(instance As AP_Budget_Transaction)
    End Sub
    Partial Private Sub InsertAP_Budget_Summary(instance As AP_Budget_Summary)
    End Sub
    Partial Private Sub UpdateAP_Budget_Summary(instance As AP_Budget_Summary)
    End Sub
    Partial Private Sub DeleteAP_Budget_Summary(instance As AP_Budget_Summary)
    End Sub
    Partial Private Sub InsertAP_StaffBroker_AccountCode(instance As AP_StaffBroker_AccountCode)
    End Sub
    Partial Private Sub UpdateAP_StaffBroker_AccountCode(instance As AP_StaffBroker_AccountCode)
    End Sub
    Partial Private Sub DeleteAP_StaffBroker_AccountCode(instance As AP_StaffBroker_AccountCode)
    End Sub
    Partial Private Sub InsertAP_StaffBroker_CostCenter(instance As AP_StaffBroker_CostCenter)
    End Sub
    Partial Private Sub UpdateAP_StaffBroker_CostCenter(instance As AP_StaffBroker_CostCenter)
    End Sub
    Partial Private Sub DeleteAP_StaffBroker_CostCenter(instance As AP_StaffBroker_CostCenter)
    End Sub
    Partial Private Sub InsertAP_Budget_Summary1(instance As AP_Budget_Summary1)
    End Sub
    Partial Private Sub UpdateAP_Budget_Summary1(instance As AP_Budget_Summary1)
    End Sub
    Partial Private Sub DeleteAP_Budget_Summary1(instance As AP_Budget_Summary1)
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("SiteSqlServer").ConnectionString, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public ReadOnly Property AP_Budget_Projects() As System.Data.Linq.Table(Of AP_Budget_Project)
			Get
				Return Me.GetTable(Of AP_Budget_Project)
			End Get
		End Property
		
		Public ReadOnly Property AP_Budget_Transactions() As System.Data.Linq.Table(Of AP_Budget_Transaction)
			Get
				Return Me.GetTable(Of AP_Budget_Transaction)
			End Get
		End Property
		
		Public ReadOnly Property AP_Budget_Summaries() As System.Data.Linq.Table(Of AP_Budget_Summary)
			Get
				Return Me.GetTable(Of AP_Budget_Summary)
			End Get
		End Property
		
		Public ReadOnly Property AP_StaffBroker_AccountCodes() As System.Data.Linq.Table(Of AP_StaffBroker_AccountCode)
			Get
				Return Me.GetTable(Of AP_StaffBroker_AccountCode)
			End Get
		End Property
		
		Public ReadOnly Property AP_StaffBroker_CostCenters() As System.Data.Linq.Table(Of AP_StaffBroker_CostCenter)
			Get
				Return Me.GetTable(Of AP_StaffBroker_CostCenter)
			End Get
		End Property
		
		Public ReadOnly Property AP_Budget_Summary1s() As System.Data.Linq.Table(Of AP_Budget_Summary1)
			Get
				Return Me.GetTable(Of AP_Budget_Summary1)
			End Get
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_Budget_Project")>  _
	Partial Public Class AP_Budget_Project
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _BudProjId As Integer
		
		Private _ProjectName As String
		
		Private _RC As String
		
		Private _PortalId As Integer
		
		Private _FiscalYear As Integer
		
		Private _ProjectManager As System.Nullable(Of Integer)
		
		Private _Status As Short
		
		Private _AP_Budget_Transactions As EntitySet(Of AP_Budget_Transaction)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBudProjIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnBudProjIdChanged()
    End Sub
    Partial Private Sub OnProjectNameChanging(value As String)
    End Sub
    Partial Private Sub OnProjectNameChanged()
    End Sub
    Partial Private Sub OnRCChanging(value As String)
    End Sub
    Partial Private Sub OnRCChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    Partial Private Sub OnFiscalYearChanging(value As Integer)
    End Sub
    Partial Private Sub OnFiscalYearChanged()
    End Sub
    Partial Private Sub OnProjectManagerChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProjectManagerChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As Short)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._AP_Budget_Transactions = New EntitySet(Of AP_Budget_Transaction)(AddressOf Me.attach_AP_Budget_Transactions, AddressOf Me.detach_AP_Budget_Transactions)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BudProjId", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property BudProjId() As Integer
			Get
				Return Me._BudProjId
			End Get
			Set
				If ((Me._BudProjId = value)  _
							= false) Then
					Me.OnBudProjIdChanging(value)
					Me.SendPropertyChanging
					Me._BudProjId = value
					Me.SendPropertyChanged("BudProjId")
					Me.OnBudProjIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
		Public Property ProjectName() As String
			Get
				Return Me._ProjectName
			End Get
			Set
				If (String.Equals(Me._ProjectName, value) = false) Then
					Me.OnProjectNameChanging(value)
					Me.SendPropertyChanging
					Me._ProjectName = value
					Me.SendPropertyChanged("ProjectName")
					Me.OnProjectNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RC", DbType:="NVarChar(12) NOT NULL", CanBeNull:=false)>  _
		Public Property RC() As String
			Get
				Return Me._RC
			End Get
			Set
				If (String.Equals(Me._RC, value) = false) Then
					Me.OnRCChanging(value)
					Me.SendPropertyChanging
					Me._RC = value
					Me.SendPropertyChanged("RC")
					Me.OnRCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int NOT NULL")>  _
		Public Property PortalId() As Integer
			Get
				Return Me._PortalId
			End Get
			Set
				If ((Me._PortalId = value)  _
							= false) Then
					Me.OnPortalIdChanging(value)
					Me.SendPropertyChanging
					Me._PortalId = value
					Me.SendPropertyChanged("PortalId")
					Me.OnPortalIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FiscalYear", DbType:="Int NOT NULL")>  _
		Public Property FiscalYear() As Integer
			Get
				Return Me._FiscalYear
			End Get
			Set
				If ((Me._FiscalYear = value)  _
							= false) Then
					Me.OnFiscalYearChanging(value)
					Me.SendPropertyChanging
					Me._FiscalYear = value
					Me.SendPropertyChanged("FiscalYear")
					Me.OnFiscalYearChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectManager", DbType:="Int")>  _
		Public Property ProjectManager() As System.Nullable(Of Integer)
			Get
				Return Me._ProjectManager
			End Get
			Set
				If (Me._ProjectManager.Equals(value) = false) Then
					Me.OnProjectManagerChanging(value)
					Me.SendPropertyChanging
					Me._ProjectManager = value
					Me.SendPropertyChanged("ProjectManager")
					Me.OnProjectManagerChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="SmallInt NOT NULL")>  _
		Public Property Status() As Short
			Get
				Return Me._Status
			End Get
			Set
				If ((Me._Status = value)  _
							= false) Then
					Me.OnStatusChanging(value)
					Me.SendPropertyChanging
					Me._Status = value
					Me.SendPropertyChanged("Status")
					Me.OnStatusChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_Budget_Project_AP_Budget_Transaction", Storage:="_AP_Budget_Transactions", ThisKey:="BudProjId", OtherKey:="ProjectId")>  _
		Public Property AP_Budget_Transactions() As EntitySet(Of AP_Budget_Transaction)
			Get
				Return Me._AP_Budget_Transactions
			End Get
			Set
				Me._AP_Budget_Transactions.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_AP_Budget_Transactions(ByVal entity As AP_Budget_Transaction)
			Me.SendPropertyChanging
			entity.AP_Budget_Project = Me
		End Sub
		
		Private Sub detach_AP_Budget_Transactions(ByVal entity As AP_Budget_Transaction)
			Me.SendPropertyChanging
			entity.AP_Budget_Project = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_Budget_Transactions")>  _
	Partial Public Class AP_Budget_Transaction
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _BudgetTransactionId As Long
		
		Private _ProjectId As System.Nullable(Of Integer)
		
		Private _Account As String
		
		Private _RC As String
		
		Private _Description As String
		
		Private _P1 As System.Nullable(Of Decimal)
		
		Private _P2 As System.Nullable(Of Decimal)
		
		Private _P3 As System.Nullable(Of Decimal)
		
		Private _P4 As System.Nullable(Of Decimal)
		
		Private _P5 As System.Nullable(Of Decimal)
		
		Private _P6 As System.Nullable(Of Decimal)
		
		Private _P7 As System.Nullable(Of Decimal)
		
		Private _P8 As System.Nullable(Of Decimal)
		
		Private _P9 As System.Nullable(Of Decimal)
		
		Private _P10 As System.Nullable(Of Decimal)
		
		Private _P11 As System.Nullable(Of Decimal)
		
		Private _P12 As System.Nullable(Of Decimal)
		
		Private _FiscalYear As Integer
		
		Private _Status As Short
		
		Private _DateSubmitted As System.Nullable(Of Date)
		
		Private _DateApproved As System.Nullable(Of Date)
		
		Private _DateProcessed As System.Nullable(Of Date)
		
		Private _SubmittedBy As System.Nullable(Of Integer)
		
		Private _ApprovedBy As System.Nullable(Of Integer)
		
		Private _ProcessedBy As System.Nullable(Of Integer)
		
		Private _Type As String
		
		Private _PortalId As Integer
		
		Private _AP_Budget_Project As EntityRef(Of AP_Budget_Project)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBudgetTransactionIdChanging(value As Long)
    End Sub
    Partial Private Sub OnBudgetTransactionIdChanged()
    End Sub
    Partial Private Sub OnProjectIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProjectIdChanged()
    End Sub
    Partial Private Sub OnAccountChanging(value As String)
    End Sub
    Partial Private Sub OnAccountChanged()
    End Sub
    Partial Private Sub OnRCChanging(value As String)
    End Sub
    Partial Private Sub OnRCChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnP1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP1Changed()
    End Sub
    Partial Private Sub OnP2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP2Changed()
    End Sub
    Partial Private Sub OnP3Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP3Changed()
    End Sub
    Partial Private Sub OnP4Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP4Changed()
    End Sub
    Partial Private Sub OnP5Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP5Changed()
    End Sub
    Partial Private Sub OnP6Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP6Changed()
    End Sub
    Partial Private Sub OnP7Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP7Changed()
    End Sub
    Partial Private Sub OnP8Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP8Changed()
    End Sub
    Partial Private Sub OnP9Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP9Changed()
    End Sub
    Partial Private Sub OnP10Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP10Changed()
    End Sub
    Partial Private Sub OnP11Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP11Changed()
    End Sub
    Partial Private Sub OnP12Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP12Changed()
    End Sub
    Partial Private Sub OnFiscalYearChanging(value As Integer)
    End Sub
    Partial Private Sub OnFiscalYearChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As Short)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnDateSubmittedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateSubmittedChanged()
    End Sub
    Partial Private Sub OnDateApprovedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateApprovedChanged()
    End Sub
    Partial Private Sub OnDateProcessedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDateProcessedChanged()
    End Sub
    Partial Private Sub OnSubmittedByChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSubmittedByChanged()
    End Sub
    Partial Private Sub OnApprovedByChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnApprovedByChanged()
    End Sub
    Partial Private Sub OnProcessedByChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnProcessedByChanged()
    End Sub
    Partial Private Sub OnTypeChanging(value As String)
    End Sub
    Partial Private Sub OnTypeChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._AP_Budget_Project = CType(Nothing, EntityRef(Of AP_Budget_Project))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BudgetTransactionId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property BudgetTransactionId() As Long
			Get
				Return Me._BudgetTransactionId
			End Get
			Set
				If ((Me._BudgetTransactionId = value)  _
							= false) Then
					Me.OnBudgetTransactionIdChanging(value)
					Me.SendPropertyChanging
					Me._BudgetTransactionId = value
					Me.SendPropertyChanged("BudgetTransactionId")
					Me.OnBudgetTransactionIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProjectId", DbType:="Int")>  _
		Public Property ProjectId() As System.Nullable(Of Integer)
			Get
				Return Me._ProjectId
			End Get
			Set
				If (Me._ProjectId.Equals(value) = false) Then
					If Me._AP_Budget_Project.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnProjectIdChanging(value)
					Me.SendPropertyChanging
					Me._ProjectId = value
					Me.SendPropertyChanged("ProjectId")
					Me.OnProjectIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Account", DbType:="NVarChar(12) NOT NULL", CanBeNull:=false)>  _
		Public Property Account() As String
			Get
				Return Me._Account
			End Get
			Set
				If (String.Equals(Me._Account, value) = false) Then
					Me.OnAccountChanging(value)
					Me.SendPropertyChanging
					Me._Account = value
					Me.SendPropertyChanged("Account")
					Me.OnAccountChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RC", DbType:="NVarChar(12) NOT NULL", CanBeNull:=false)>  _
		Public Property RC() As String
			Get
				Return Me._RC
			End Get
			Set
				If (String.Equals(Me._RC, value) = false) Then
					Me.OnRCChanging(value)
					Me.SendPropertyChanging
					Me._RC = value
					Me.SendPropertyChanged("RC")
					Me.OnRCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
		Public Property Description() As String
			Get
				Return Me._Description
			End Get
			Set
				If (String.Equals(Me._Description, value) = false) Then
					Me.OnDescriptionChanging(value)
					Me.SendPropertyChanging
					Me._Description = value
					Me.SendPropertyChanged("Description")
					Me.OnDescriptionChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P1", DbType:="Money")>  _
		Public Property P1() As System.Nullable(Of Decimal)
			Get
				Return Me._P1
			End Get
			Set
				If (Me._P1.Equals(value) = false) Then
					Me.OnP1Changing(value)
					Me.SendPropertyChanging
					Me._P1 = value
					Me.SendPropertyChanged("P1")
					Me.OnP1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P2", DbType:="Money")>  _
		Public Property P2() As System.Nullable(Of Decimal)
			Get
				Return Me._P2
			End Get
			Set
				If (Me._P2.Equals(value) = false) Then
					Me.OnP2Changing(value)
					Me.SendPropertyChanging
					Me._P2 = value
					Me.SendPropertyChanged("P2")
					Me.OnP2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P3", DbType:="Money")>  _
		Public Property P3() As System.Nullable(Of Decimal)
			Get
				Return Me._P3
			End Get
			Set
				If (Me._P3.Equals(value) = false) Then
					Me.OnP3Changing(value)
					Me.SendPropertyChanging
					Me._P3 = value
					Me.SendPropertyChanged("P3")
					Me.OnP3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P4", DbType:="Money")>  _
		Public Property P4() As System.Nullable(Of Decimal)
			Get
				Return Me._P4
			End Get
			Set
				If (Me._P4.Equals(value) = false) Then
					Me.OnP4Changing(value)
					Me.SendPropertyChanging
					Me._P4 = value
					Me.SendPropertyChanged("P4")
					Me.OnP4Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P5", DbType:="Money")>  _
		Public Property P5() As System.Nullable(Of Decimal)
			Get
				Return Me._P5
			End Get
			Set
				If (Me._P5.Equals(value) = false) Then
					Me.OnP5Changing(value)
					Me.SendPropertyChanging
					Me._P5 = value
					Me.SendPropertyChanged("P5")
					Me.OnP5Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P6", DbType:="Money")>  _
		Public Property P6() As System.Nullable(Of Decimal)
			Get
				Return Me._P6
			End Get
			Set
				If (Me._P6.Equals(value) = false) Then
					Me.OnP6Changing(value)
					Me.SendPropertyChanging
					Me._P6 = value
					Me.SendPropertyChanged("P6")
					Me.OnP6Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P7", DbType:="Money")>  _
		Public Property P7() As System.Nullable(Of Decimal)
			Get
				Return Me._P7
			End Get
			Set
				If (Me._P7.Equals(value) = false) Then
					Me.OnP7Changing(value)
					Me.SendPropertyChanging
					Me._P7 = value
					Me.SendPropertyChanged("P7")
					Me.OnP7Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P8", DbType:="Money")>  _
		Public Property P8() As System.Nullable(Of Decimal)
			Get
				Return Me._P8
			End Get
			Set
				If (Me._P8.Equals(value) = false) Then
					Me.OnP8Changing(value)
					Me.SendPropertyChanging
					Me._P8 = value
					Me.SendPropertyChanged("P8")
					Me.OnP8Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P9", DbType:="Money")>  _
		Public Property P9() As System.Nullable(Of Decimal)
			Get
				Return Me._P9
			End Get
			Set
				If (Me._P9.Equals(value) = false) Then
					Me.OnP9Changing(value)
					Me.SendPropertyChanging
					Me._P9 = value
					Me.SendPropertyChanged("P9")
					Me.OnP9Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P10", DbType:="Money")>  _
		Public Property P10() As System.Nullable(Of Decimal)
			Get
				Return Me._P10
			End Get
			Set
				If (Me._P10.Equals(value) = false) Then
					Me.OnP10Changing(value)
					Me.SendPropertyChanging
					Me._P10 = value
					Me.SendPropertyChanged("P10")
					Me.OnP10Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P11", DbType:="Money")>  _
		Public Property P11() As System.Nullable(Of Decimal)
			Get
				Return Me._P11
			End Get
			Set
				If (Me._P11.Equals(value) = false) Then
					Me.OnP11Changing(value)
					Me.SendPropertyChanging
					Me._P11 = value
					Me.SendPropertyChanged("P11")
					Me.OnP11Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P12", DbType:="Money")>  _
		Public Property P12() As System.Nullable(Of Decimal)
			Get
				Return Me._P12
			End Get
			Set
				If (Me._P12.Equals(value) = false) Then
					Me.OnP12Changing(value)
					Me.SendPropertyChanging
					Me._P12 = value
					Me.SendPropertyChanged("P12")
					Me.OnP12Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FiscalYear", DbType:="Int NOT NULL")>  _
		Public Property FiscalYear() As Integer
			Get
				Return Me._FiscalYear
			End Get
			Set
				If ((Me._FiscalYear = value)  _
							= false) Then
					Me.OnFiscalYearChanging(value)
					Me.SendPropertyChanging
					Me._FiscalYear = value
					Me.SendPropertyChanged("FiscalYear")
					Me.OnFiscalYearChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="SmallInt NOT NULL")>  _
		Public Property Status() As Short
			Get
				Return Me._Status
			End Get
			Set
				If ((Me._Status = value)  _
							= false) Then
					Me.OnStatusChanging(value)
					Me.SendPropertyChanging
					Me._Status = value
					Me.SendPropertyChanged("Status")
					Me.OnStatusChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateSubmitted", DbType:="DateTime")>  _
		Public Property DateSubmitted() As System.Nullable(Of Date)
			Get
				Return Me._DateSubmitted
			End Get
			Set
				If (Me._DateSubmitted.Equals(value) = false) Then
					Me.OnDateSubmittedChanging(value)
					Me.SendPropertyChanging
					Me._DateSubmitted = value
					Me.SendPropertyChanged("DateSubmitted")
					Me.OnDateSubmittedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateApproved", DbType:="DateTime")>  _
		Public Property DateApproved() As System.Nullable(Of Date)
			Get
				Return Me._DateApproved
			End Get
			Set
				If (Me._DateApproved.Equals(value) = false) Then
					Me.OnDateApprovedChanging(value)
					Me.SendPropertyChanging
					Me._DateApproved = value
					Me.SendPropertyChanged("DateApproved")
					Me.OnDateApprovedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DateProcessed", DbType:="DateTime")>  _
		Public Property DateProcessed() As System.Nullable(Of Date)
			Get
				Return Me._DateProcessed
			End Get
			Set
				If (Me._DateProcessed.Equals(value) = false) Then
					Me.OnDateProcessedChanging(value)
					Me.SendPropertyChanging
					Me._DateProcessed = value
					Me.SendPropertyChanged("DateProcessed")
					Me.OnDateProcessedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubmittedBy", DbType:="Int")>  _
		Public Property SubmittedBy() As System.Nullable(Of Integer)
			Get
				Return Me._SubmittedBy
			End Get
			Set
				If (Me._SubmittedBy.Equals(value) = false) Then
					Me.OnSubmittedByChanging(value)
					Me.SendPropertyChanging
					Me._SubmittedBy = value
					Me.SendPropertyChanged("SubmittedBy")
					Me.OnSubmittedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprovedBy", DbType:="Int")>  _
		Public Property ApprovedBy() As System.Nullable(Of Integer)
			Get
				Return Me._ApprovedBy
			End Get
			Set
				If (Me._ApprovedBy.Equals(value) = false) Then
					Me.OnApprovedByChanging(value)
					Me.SendPropertyChanging
					Me._ApprovedBy = value
					Me.SendPropertyChanged("ApprovedBy")
					Me.OnApprovedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProcessedBy", DbType:="Int")>  _
		Public Property ProcessedBy() As System.Nullable(Of Integer)
			Get
				Return Me._ProcessedBy
			End Get
			Set
				If (Me._ProcessedBy.Equals(value) = false) Then
					Me.OnProcessedByChanging(value)
					Me.SendPropertyChanging
					Me._ProcessedBy = value
					Me.SendPropertyChanged("ProcessedBy")
					Me.OnProcessedByChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
		Public Property Type() As String
			Get
				Return Me._Type
			End Get
			Set
				If (String.Equals(Me._Type, value) = false) Then
					Me.OnTypeChanging(value)
					Me.SendPropertyChanging
					Me._Type = value
					Me.SendPropertyChanged("Type")
					Me.OnTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int NOT NULL")>  _
		Public Property PortalId() As Integer
			Get
				Return Me._PortalId
			End Get
			Set
				If ((Me._PortalId = value)  _
							= false) Then
					Me.OnPortalIdChanging(value)
					Me.SendPropertyChanging
					Me._PortalId = value
					Me.SendPropertyChanged("PortalId")
					Me.OnPortalIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_Budget_Project_AP_Budget_Transaction", Storage:="_AP_Budget_Project", ThisKey:="ProjectId", OtherKey:="BudProjId", IsForeignKey:=true)>  _
		Public Property AP_Budget_Project() As AP_Budget_Project
			Get
				Return Me._AP_Budget_Project.Entity
			End Get
			Set
				Dim previousValue As AP_Budget_Project = Me._AP_Budget_Project.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._AP_Budget_Project.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._AP_Budget_Project.Entity = Nothing
						previousValue.AP_Budget_Transactions.Remove(Me)
					End If
					Me._AP_Budget_Project.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.AP_Budget_Transactions.Add(Me)
						Me._ProjectId = value.BudProjId
					Else
						Me._ProjectId = CType(Nothing, Nullable(Of Integer))
					End If
					Me.SendPropertyChanged("AP_Budget_Project")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_Budget_Summary")>  _
	Partial Public Class AP_Budget_Summary
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _BudgetSummaryId As Long
		
		Private _Account As String
		
		Private _RC As String
		
		Private _P1 As System.Nullable(Of Decimal)
		
		Private _P2 As System.Nullable(Of Decimal)
		
		Private _P3 As System.Nullable(Of Decimal)
		
		Private _P4 As System.Nullable(Of Decimal)
		
		Private _P5 As System.Nullable(Of Decimal)
		
		Private _P6 As System.Nullable(Of Decimal)
		
		Private _P7 As System.Nullable(Of Decimal)
		
		Private _P8 As System.Nullable(Of Decimal)
		
		Private _P9 As System.Nullable(Of Decimal)
		
		Private _P10 As System.Nullable(Of Decimal)
		
		Private _P11 As System.Nullable(Of Decimal)
		
		Private _P12 As System.Nullable(Of Decimal)
		
		Private _FiscalYear As Integer
		
		Private _Changed As Boolean
		
		Private _LastUpdated As System.Nullable(Of Date)
		
		Private _Portalid As Integer
		
		Private _Error As System.Nullable(Of Boolean)
		
		Private _ErrorMessage As String
		
		Private _AP_StaffBroker_CostCenter As EntityRef(Of AP_StaffBroker_CostCenter)
		
		Private _AP_StaffBroker_AccountCode As EntityRef(Of AP_StaffBroker_AccountCode)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBudgetSummaryIdChanging(value As Long)
    End Sub
    Partial Private Sub OnBudgetSummaryIdChanged()
    End Sub
    Partial Private Sub OnAccountChanging(value As String)
    End Sub
    Partial Private Sub OnAccountChanged()
    End Sub
    Partial Private Sub OnRCChanging(value As String)
    End Sub
    Partial Private Sub OnRCChanged()
    End Sub
    Partial Private Sub OnP1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP1Changed()
    End Sub
    Partial Private Sub OnP2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP2Changed()
    End Sub
    Partial Private Sub OnP3Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP3Changed()
    End Sub
    Partial Private Sub OnP4Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP4Changed()
    End Sub
    Partial Private Sub OnP5Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP5Changed()
    End Sub
    Partial Private Sub OnP6Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP6Changed()
    End Sub
    Partial Private Sub OnP7Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP7Changed()
    End Sub
    Partial Private Sub OnP8Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP8Changed()
    End Sub
    Partial Private Sub OnP9Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP9Changed()
    End Sub
    Partial Private Sub OnP10Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP10Changed()
    End Sub
    Partial Private Sub OnP11Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP11Changed()
    End Sub
    Partial Private Sub OnP12Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP12Changed()
    End Sub
    Partial Private Sub OnFiscalYearChanging(value As Integer)
    End Sub
    Partial Private Sub OnFiscalYearChanged()
    End Sub
    Partial Private Sub OnChangedChanging(value As Boolean)
    End Sub
    Partial Private Sub OnChangedChanged()
    End Sub
    Partial Private Sub OnLastUpdatedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastUpdatedChanged()
    End Sub
    Partial Private Sub OnPortalidChanging(value As Integer)
    End Sub
    Partial Private Sub OnPortalidChanged()
    End Sub
    Partial Private Sub OnErrorChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnErrorChanged()
    End Sub
    Partial Private Sub OnErrorMessageChanging(value As String)
    End Sub
    Partial Private Sub OnErrorMessageChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._AP_StaffBroker_CostCenter = CType(Nothing, EntityRef(Of AP_StaffBroker_CostCenter))
			Me._AP_StaffBroker_AccountCode = CType(Nothing, EntityRef(Of AP_StaffBroker_AccountCode))
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BudgetSummaryId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property BudgetSummaryId() As Long
			Get
				Return Me._BudgetSummaryId
			End Get
			Set
				If ((Me._BudgetSummaryId = value)  _
							= false) Then
					Me.OnBudgetSummaryIdChanging(value)
					Me.SendPropertyChanging
					Me._BudgetSummaryId = value
					Me.SendPropertyChanged("BudgetSummaryId")
					Me.OnBudgetSummaryIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Account", DbType:="NVarChar(12) NOT NULL", CanBeNull:=false)>  _
		Public Property Account() As String
			Get
				Return Me._Account
			End Get
			Set
				If (String.Equals(Me._Account, value) = false) Then
					If Me._AP_StaffBroker_AccountCode.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnAccountChanging(value)
					Me.SendPropertyChanging
					Me._Account = value
					Me.SendPropertyChanged("Account")
					Me.OnAccountChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RC", DbType:="NVarChar(12) NOT NULL", CanBeNull:=false)>  _
		Public Property RC() As String
			Get
				Return Me._RC
			End Get
			Set
				If (String.Equals(Me._RC, value) = false) Then
					If Me._AP_StaffBroker_CostCenter.HasLoadedOrAssignedValue Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnRCChanging(value)
					Me.SendPropertyChanging
					Me._RC = value
					Me.SendPropertyChanged("RC")
					Me.OnRCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P1", DbType:="Money")>  _
		Public Property P1() As System.Nullable(Of Decimal)
			Get
				Return Me._P1
			End Get
			Set
				If (Me._P1.Equals(value) = false) Then
					Me.OnP1Changing(value)
					Me.SendPropertyChanging
					Me._P1 = value
					Me.SendPropertyChanged("P1")
					Me.OnP1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P2", DbType:="Money")>  _
		Public Property P2() As System.Nullable(Of Decimal)
			Get
				Return Me._P2
			End Get
			Set
				If (Me._P2.Equals(value) = false) Then
					Me.OnP2Changing(value)
					Me.SendPropertyChanging
					Me._P2 = value
					Me.SendPropertyChanged("P2")
					Me.OnP2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P3", DbType:="Money")>  _
		Public Property P3() As System.Nullable(Of Decimal)
			Get
				Return Me._P3
			End Get
			Set
				If (Me._P3.Equals(value) = false) Then
					Me.OnP3Changing(value)
					Me.SendPropertyChanging
					Me._P3 = value
					Me.SendPropertyChanged("P3")
					Me.OnP3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P4", DbType:="Money")>  _
		Public Property P4() As System.Nullable(Of Decimal)
			Get
				Return Me._P4
			End Get
			Set
				If (Me._P4.Equals(value) = false) Then
					Me.OnP4Changing(value)
					Me.SendPropertyChanging
					Me._P4 = value
					Me.SendPropertyChanged("P4")
					Me.OnP4Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P5", DbType:="Money")>  _
		Public Property P5() As System.Nullable(Of Decimal)
			Get
				Return Me._P5
			End Get
			Set
				If (Me._P5.Equals(value) = false) Then
					Me.OnP5Changing(value)
					Me.SendPropertyChanging
					Me._P5 = value
					Me.SendPropertyChanged("P5")
					Me.OnP5Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P6", DbType:="Money")>  _
		Public Property P6() As System.Nullable(Of Decimal)
			Get
				Return Me._P6
			End Get
			Set
				If (Me._P6.Equals(value) = false) Then
					Me.OnP6Changing(value)
					Me.SendPropertyChanging
					Me._P6 = value
					Me.SendPropertyChanged("P6")
					Me.OnP6Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P7", DbType:="Money")>  _
		Public Property P7() As System.Nullable(Of Decimal)
			Get
				Return Me._P7
			End Get
			Set
				If (Me._P7.Equals(value) = false) Then
					Me.OnP7Changing(value)
					Me.SendPropertyChanging
					Me._P7 = value
					Me.SendPropertyChanged("P7")
					Me.OnP7Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P8", DbType:="Money")>  _
		Public Property P8() As System.Nullable(Of Decimal)
			Get
				Return Me._P8
			End Get
			Set
				If (Me._P8.Equals(value) = false) Then
					Me.OnP8Changing(value)
					Me.SendPropertyChanging
					Me._P8 = value
					Me.SendPropertyChanged("P8")
					Me.OnP8Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P9", DbType:="Money")>  _
		Public Property P9() As System.Nullable(Of Decimal)
			Get
				Return Me._P9
			End Get
			Set
				If (Me._P9.Equals(value) = false) Then
					Me.OnP9Changing(value)
					Me.SendPropertyChanging
					Me._P9 = value
					Me.SendPropertyChanged("P9")
					Me.OnP9Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P10", DbType:="Money")>  _
		Public Property P10() As System.Nullable(Of Decimal)
			Get
				Return Me._P10
			End Get
			Set
				If (Me._P10.Equals(value) = false) Then
					Me.OnP10Changing(value)
					Me.SendPropertyChanging
					Me._P10 = value
					Me.SendPropertyChanged("P10")
					Me.OnP10Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P11", DbType:="Money")>  _
		Public Property P11() As System.Nullable(Of Decimal)
			Get
				Return Me._P11
			End Get
			Set
				If (Me._P11.Equals(value) = false) Then
					Me.OnP11Changing(value)
					Me.SendPropertyChanging
					Me._P11 = value
					Me.SendPropertyChanged("P11")
					Me.OnP11Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P12", DbType:="Money")>  _
		Public Property P12() As System.Nullable(Of Decimal)
			Get
				Return Me._P12
			End Get
			Set
				If (Me._P12.Equals(value) = false) Then
					Me.OnP12Changing(value)
					Me.SendPropertyChanging
					Me._P12 = value
					Me.SendPropertyChanged("P12")
					Me.OnP12Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FiscalYear", DbType:="Int NOT NULL")>  _
		Public Property FiscalYear() As Integer
			Get
				Return Me._FiscalYear
			End Get
			Set
				If ((Me._FiscalYear = value)  _
							= false) Then
					Me.OnFiscalYearChanging(value)
					Me.SendPropertyChanging
					Me._FiscalYear = value
					Me.SendPropertyChanged("FiscalYear")
					Me.OnFiscalYearChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Changed", DbType:="Bit NOT NULL")>  _
		Public Property Changed() As Boolean
			Get
				Return Me._Changed
			End Get
			Set
				If ((Me._Changed = value)  _
							= false) Then
					Me.OnChangedChanging(value)
					Me.SendPropertyChanging
					Me._Changed = value
					Me.SendPropertyChanged("Changed")
					Me.OnChangedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastUpdated", DbType:="DateTime")>  _
		Public Property LastUpdated() As System.Nullable(Of Date)
			Get
				Return Me._LastUpdated
			End Get
			Set
				If (Me._LastUpdated.Equals(value) = false) Then
					Me.OnLastUpdatedChanging(value)
					Me.SendPropertyChanging
					Me._LastUpdated = value
					Me.SendPropertyChanged("LastUpdated")
					Me.OnLastUpdatedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Portalid", DbType:="Int NOT NULL")>  _
		Public Property Portalid() As Integer
			Get
				Return Me._Portalid
			End Get
			Set
				If ((Me._Portalid = value)  _
							= false) Then
					If (Me._AP_StaffBroker_CostCenter.HasLoadedOrAssignedValue OrElse Me._AP_StaffBroker_AccountCode.HasLoadedOrAssignedValue) Then
						Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
					End If
					Me.OnPortalidChanging(value)
					Me.SendPropertyChanging
					Me._Portalid = value
					Me.SendPropertyChanged("Portalid")
					Me.OnPortalidChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Error", Storage:="_Error", DbType:="bit")>  _
		Public Property [Error]() As System.Nullable(Of Boolean)
			Get
				Return Me._Error
			End Get
			Set
				If (Me._Error.Equals(value) = false) Then
					Me.OnErrorChanging(value)
					Me.SendPropertyChanging
					Me._Error = value
					Me.SendPropertyChanged("[Error]")
					Me.OnErrorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ErrorMessage", DbType:="nvarchar(500)")>  _
		Public Property ErrorMessage() As String
			Get
				Return Me._ErrorMessage
			End Get
			Set
				If (String.Equals(Me._ErrorMessage, value) = false) Then
					Me.OnErrorMessageChanging(value)
					Me.SendPropertyChanging
					Me._ErrorMessage = value
					Me.SendPropertyChanged("ErrorMessage")
					Me.OnErrorMessageChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_StaffBroker_CostCenter_AP_Budget_Summary", Storage:="_AP_StaffBroker_CostCenter", ThisKey:="Portalid,RC", OtherKey:="PortalId,CostCentreCode", IsForeignKey:=true)>  _
		Public Property AP_StaffBroker_CostCenter() As AP_StaffBroker_CostCenter
			Get
				Return Me._AP_StaffBroker_CostCenter.Entity
			End Get
			Set
				Dim previousValue As AP_StaffBroker_CostCenter = Me._AP_StaffBroker_CostCenter.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._AP_StaffBroker_CostCenter.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._AP_StaffBroker_CostCenter.Entity = Nothing
						previousValue.AP_Budget_Summaries.Remove(Me)
					End If
					Me._AP_StaffBroker_CostCenter.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.AP_Budget_Summaries.Add(Me)
						Me._Portalid = value.PortalId
						Me._RC = value.CostCentreCode
					Else
						Me._Portalid = CType(Nothing, Integer)
						Me._RC = CType(Nothing, String)
					End If
					Me.SendPropertyChanged("AP_StaffBroker_CostCenter")
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_StaffBroker_AccountCode_AP_Budget_Summary", Storage:="_AP_StaffBroker_AccountCode", ThisKey:="Portalid,Account", OtherKey:="PortalId,AccountCode", IsForeignKey:=true)>  _
		Public Property AP_StaffBroker_AccountCode() As AP_StaffBroker_AccountCode
			Get
				Return Me._AP_StaffBroker_AccountCode.Entity
			End Get
			Set
				Dim previousValue As AP_StaffBroker_AccountCode = Me._AP_StaffBroker_AccountCode.Entity
				If ((Object.Equals(previousValue, value) = false)  _
							OrElse (Me._AP_StaffBroker_AccountCode.HasLoadedOrAssignedValue = false)) Then
					Me.SendPropertyChanging
					If ((previousValue Is Nothing)  _
								= false) Then
						Me._AP_StaffBroker_AccountCode.Entity = Nothing
						previousValue.AP_Budget_Summaries.Remove(Me)
					End If
					Me._AP_StaffBroker_AccountCode.Entity = value
					If ((value Is Nothing)  _
								= false) Then
						value.AP_Budget_Summaries.Add(Me)
						Me._Portalid = value.PortalId
						Me._Account = value.AccountCode
					Else
						Me._Portalid = CType(Nothing, Integer)
						Me._Account = CType(Nothing, String)
					End If
					Me.SendPropertyChanged("AP_StaffBroker_AccountCode")
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_StaffBroker_AccountCodes")>  _
	Partial Public Class AP_StaffBroker_AccountCode
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _AccountCodeId As Long
		
		Private _AccountCode As String
		
		Private _AccountCodeName As String
		
		Private _AccountCodeType As Byte
		
		Private _PortalId As Integer
		
		Private _AP_Budget_Summaries As EntitySet(Of AP_Budget_Summary)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAccountCodeIdChanging(value As Long)
    End Sub
    Partial Private Sub OnAccountCodeIdChanged()
    End Sub
    Partial Private Sub OnAccountCodeChanging(value As String)
    End Sub
    Partial Private Sub OnAccountCodeChanged()
    End Sub
    Partial Private Sub OnAccountCodeNameChanging(value As String)
    End Sub
    Partial Private Sub OnAccountCodeNameChanged()
    End Sub
    Partial Private Sub OnAccountCodeTypeChanging(value As Byte)
    End Sub
    Partial Private Sub OnAccountCodeTypeChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._AP_Budget_Summaries = New EntitySet(Of AP_Budget_Summary)(AddressOf Me.attach_AP_Budget_Summaries, AddressOf Me.detach_AP_Budget_Summaries)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountCodeId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property AccountCodeId() As Long
			Get
				Return Me._AccountCodeId
			End Get
			Set
				If ((Me._AccountCodeId = value)  _
							= false) Then
					Me.OnAccountCodeIdChanging(value)
					Me.SendPropertyChanging
					Me._AccountCodeId = value
					Me.SendPropertyChanged("AccountCodeId")
					Me.OnAccountCodeIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountCode", DbType:="NVarChar(12) NOT NULL", CanBeNull:=false)>  _
		Public Property AccountCode() As String
			Get
				Return Me._AccountCode
			End Get
			Set
				If (String.Equals(Me._AccountCode, value) = false) Then
					Me.OnAccountCodeChanging(value)
					Me.SendPropertyChanging
					Me._AccountCode = value
					Me.SendPropertyChanged("AccountCode")
					Me.OnAccountCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountCodeName", DbType:="NVarChar(120) NOT NULL", CanBeNull:=false)>  _
		Public Property AccountCodeName() As String
			Get
				Return Me._AccountCodeName
			End Get
			Set
				If (String.Equals(Me._AccountCodeName, value) = false) Then
					Me.OnAccountCodeNameChanging(value)
					Me.SendPropertyChanging
					Me._AccountCodeName = value
					Me.SendPropertyChanged("AccountCodeName")
					Me.OnAccountCodeNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AccountCodeType", DbType:="TinyInt NOT NULL")>  _
		Public Property AccountCodeType() As Byte
			Get
				Return Me._AccountCodeType
			End Get
			Set
				If ((Me._AccountCodeType = value)  _
							= false) Then
					Me.OnAccountCodeTypeChanging(value)
					Me.SendPropertyChanging
					Me._AccountCodeType = value
					Me.SendPropertyChanged("AccountCodeType")
					Me.OnAccountCodeTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int NOT NULL")>  _
		Public Property PortalId() As Integer
			Get
				Return Me._PortalId
			End Get
			Set
				If ((Me._PortalId = value)  _
							= false) Then
					Me.OnPortalIdChanging(value)
					Me.SendPropertyChanging
					Me._PortalId = value
					Me.SendPropertyChanged("PortalId")
					Me.OnPortalIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_StaffBroker_AccountCode_AP_Budget_Summary", Storage:="_AP_Budget_Summaries", ThisKey:="PortalId,AccountCode", OtherKey:="Portalid,Account")>  _
		Public Property AP_Budget_Summaries() As EntitySet(Of AP_Budget_Summary)
			Get
				Return Me._AP_Budget_Summaries
			End Get
			Set
				Me._AP_Budget_Summaries.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_AP_Budget_Summaries(ByVal entity As AP_Budget_Summary)
			Me.SendPropertyChanging
			entity.AP_StaffBroker_AccountCode = Me
		End Sub
		
		Private Sub detach_AP_Budget_Summaries(ByVal entity As AP_Budget_Summary)
			Me.SendPropertyChanging
			entity.AP_StaffBroker_AccountCode = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_StaffBroker_CostCenters")>  _
	Partial Public Class AP_StaffBroker_CostCenter
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _CostCentreId As Long
		
		Private _CostCentreCode As String
		
		Private _CostCentreName As String
		
		Private _PortalId As Integer
		
		Private _Type As Byte
		
		Private _AP_Budget_Summaries As EntitySet(Of AP_Budget_Summary)
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCostCentreIdChanging(value As Long)
    End Sub
    Partial Private Sub OnCostCentreIdChanged()
    End Sub
    Partial Private Sub OnCostCentreCodeChanging(value As String)
    End Sub
    Partial Private Sub OnCostCentreCodeChanged()
    End Sub
    Partial Private Sub OnCostCentreNameChanging(value As String)
    End Sub
    Partial Private Sub OnCostCentreNameChanged()
    End Sub
    Partial Private Sub OnPortalIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnPortalIdChanged()
    End Sub
    Partial Private Sub OnTypeChanging(value As Byte)
    End Sub
    Partial Private Sub OnTypeChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			Me._AP_Budget_Summaries = New EntitySet(Of AP_Budget_Summary)(AddressOf Me.attach_AP_Budget_Summaries, AddressOf Me.detach_AP_Budget_Summaries)
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCentreId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property CostCentreId() As Long
			Get
				Return Me._CostCentreId
			End Get
			Set
				If ((Me._CostCentreId = value)  _
							= false) Then
					Me.OnCostCentreIdChanging(value)
					Me.SendPropertyChanging
					Me._CostCentreId = value
					Me.SendPropertyChanged("CostCentreId")
					Me.OnCostCentreIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCentreCode", DbType:="NVarChar(12) NOT NULL", CanBeNull:=false)>  _
		Public Property CostCentreCode() As String
			Get
				Return Me._CostCentreCode
			End Get
			Set
				If (String.Equals(Me._CostCentreCode, value) = false) Then
					Me.OnCostCentreCodeChanging(value)
					Me.SendPropertyChanging
					Me._CostCentreCode = value
					Me.SendPropertyChanged("CostCentreCode")
					Me.OnCostCentreCodeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CostCentreName", DbType:="NVarChar(120) NOT NULL", CanBeNull:=false)>  _
		Public Property CostCentreName() As String
			Get
				Return Me._CostCentreName
			End Get
			Set
				If (String.Equals(Me._CostCentreName, value) = false) Then
					Me.OnCostCentreNameChanging(value)
					Me.SendPropertyChanging
					Me._CostCentreName = value
					Me.SendPropertyChanged("CostCentreName")
					Me.OnCostCentreNameChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PortalId", DbType:="Int NOT NULL")>  _
		Public Property PortalId() As Integer
			Get
				Return Me._PortalId
			End Get
			Set
				If ((Me._PortalId = value)  _
							= false) Then
					Me.OnPortalIdChanging(value)
					Me.SendPropertyChanging
					Me._PortalId = value
					Me.SendPropertyChanged("PortalId")
					Me.OnPortalIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Type", DbType:="TinyInt NOT NULL")>  _
		Public Property Type() As Byte
			Get
				Return Me._Type
			End Get
			Set
				If ((Me._Type = value)  _
							= false) Then
					Me.OnTypeChanging(value)
					Me.SendPropertyChanging
					Me._Type = value
					Me.SendPropertyChanged("Type")
					Me.OnTypeChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AP_StaffBroker_CostCenter_AP_Budget_Summary", Storage:="_AP_Budget_Summaries", ThisKey:="PortalId,CostCentreCode", OtherKey:="Portalid,RC")>  _
		Public Property AP_Budget_Summaries() As EntitySet(Of AP_Budget_Summary)
			Get
				Return Me._AP_Budget_Summaries
			End Get
			Set
				Me._AP_Budget_Summaries.Assign(value)
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
		
		Private Sub attach_AP_Budget_Summaries(ByVal entity As AP_Budget_Summary)
			Me.SendPropertyChanging
			entity.AP_StaffBroker_CostCenter = Me
		End Sub
		
		Private Sub detach_AP_Budget_Summaries(ByVal entity As AP_Budget_Summary)
			Me.SendPropertyChanging
			entity.AP_StaffBroker_CostCenter = Nothing
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AP_Budget_Summary")>  _
	Partial Public Class AP_Budget_Summary1
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _BudgetSummaryId As Long
		
		Private _Account As String
		
		Private _RC As String
		
		Private _P1 As System.Nullable(Of Decimal)
		
		Private _P2 As System.Nullable(Of Decimal)
		
		Private _P3 As System.Nullable(Of Decimal)
		
		Private _P4 As System.Nullable(Of Decimal)
		
		Private _P5 As System.Nullable(Of Decimal)
		
		Private _P6 As System.Nullable(Of Decimal)
		
		Private _P7 As System.Nullable(Of Decimal)
		
		Private _P8 As System.Nullable(Of Decimal)
		
		Private _P9 As System.Nullable(Of Decimal)
		
		Private _P10 As System.Nullable(Of Decimal)
		
		Private _P11 As System.Nullable(Of Decimal)
		
		Private _P12 As System.Nullable(Of Decimal)
		
		Private _FiscalYear As Integer
		
		Private _Changed As Boolean
		
		Private _LastUpdated As System.Nullable(Of Date)
		
		Private _Portalid As Integer
		
		Private _Error As System.Nullable(Of Boolean)
		
		Private _ErrorMessage As String
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBudgetSummaryIdChanging(value As Long)
    End Sub
    Partial Private Sub OnBudgetSummaryIdChanged()
    End Sub
    Partial Private Sub OnAccountChanging(value As String)
    End Sub
    Partial Private Sub OnAccountChanged()
    End Sub
    Partial Private Sub OnRCChanging(value As String)
    End Sub
    Partial Private Sub OnRCChanged()
    End Sub
    Partial Private Sub OnP1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP1Changed()
    End Sub
    Partial Private Sub OnP2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP2Changed()
    End Sub
    Partial Private Sub OnP3Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP3Changed()
    End Sub
    Partial Private Sub OnP4Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP4Changed()
    End Sub
    Partial Private Sub OnP5Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP5Changed()
    End Sub
    Partial Private Sub OnP6Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP6Changed()
    End Sub
    Partial Private Sub OnP7Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP7Changed()
    End Sub
    Partial Private Sub OnP8Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP8Changed()
    End Sub
    Partial Private Sub OnP9Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP9Changed()
    End Sub
    Partial Private Sub OnP10Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP10Changed()
    End Sub
    Partial Private Sub OnP11Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP11Changed()
    End Sub
    Partial Private Sub OnP12Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnP12Changed()
    End Sub
    Partial Private Sub OnFiscalYearChanging(value As Integer)
    End Sub
    Partial Private Sub OnFiscalYearChanged()
    End Sub
    Partial Private Sub OnChangedChanging(value As Boolean)
    End Sub
    Partial Private Sub OnChangedChanged()
    End Sub
    Partial Private Sub OnLastUpdatedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastUpdatedChanged()
    End Sub
    Partial Private Sub OnPortalidChanging(value As Integer)
    End Sub
    Partial Private Sub OnPortalidChanged()
    End Sub
    Partial Private Sub OnErrorChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnErrorChanged()
    End Sub
    Partial Private Sub OnErrorMessageChanging(value As String)
    End Sub
    Partial Private Sub OnErrorMessageChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BudgetSummaryId", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property BudgetSummaryId() As Long
			Get
				Return Me._BudgetSummaryId
			End Get
			Set
				If ((Me._BudgetSummaryId = value)  _
							= false) Then
					Me.OnBudgetSummaryIdChanging(value)
					Me.SendPropertyChanging
					Me._BudgetSummaryId = value
					Me.SendPropertyChanged("BudgetSummaryId")
					Me.OnBudgetSummaryIdChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Account", DbType:="NVarChar(12) NOT NULL", CanBeNull:=false)>  _
		Public Property Account() As String
			Get
				Return Me._Account
			End Get
			Set
				If (String.Equals(Me._Account, value) = false) Then
					Me.OnAccountChanging(value)
					Me.SendPropertyChanging
					Me._Account = value
					Me.SendPropertyChanged("Account")
					Me.OnAccountChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RC", DbType:="NVarChar(12) NOT NULL", CanBeNull:=false)>  _
		Public Property RC() As String
			Get
				Return Me._RC
			End Get
			Set
				If (String.Equals(Me._RC, value) = false) Then
					Me.OnRCChanging(value)
					Me.SendPropertyChanging
					Me._RC = value
					Me.SendPropertyChanged("RC")
					Me.OnRCChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P1", DbType:="Money")>  _
		Public Property P1() As System.Nullable(Of Decimal)
			Get
				Return Me._P1
			End Get
			Set
				If (Me._P1.Equals(value) = false) Then
					Me.OnP1Changing(value)
					Me.SendPropertyChanging
					Me._P1 = value
					Me.SendPropertyChanged("P1")
					Me.OnP1Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P2", DbType:="Money")>  _
		Public Property P2() As System.Nullable(Of Decimal)
			Get
				Return Me._P2
			End Get
			Set
				If (Me._P2.Equals(value) = false) Then
					Me.OnP2Changing(value)
					Me.SendPropertyChanging
					Me._P2 = value
					Me.SendPropertyChanged("P2")
					Me.OnP2Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P3", DbType:="Money")>  _
		Public Property P3() As System.Nullable(Of Decimal)
			Get
				Return Me._P3
			End Get
			Set
				If (Me._P3.Equals(value) = false) Then
					Me.OnP3Changing(value)
					Me.SendPropertyChanging
					Me._P3 = value
					Me.SendPropertyChanged("P3")
					Me.OnP3Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P4", DbType:="Money")>  _
		Public Property P4() As System.Nullable(Of Decimal)
			Get
				Return Me._P4
			End Get
			Set
				If (Me._P4.Equals(value) = false) Then
					Me.OnP4Changing(value)
					Me.SendPropertyChanging
					Me._P4 = value
					Me.SendPropertyChanged("P4")
					Me.OnP4Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P5", DbType:="Money")>  _
		Public Property P5() As System.Nullable(Of Decimal)
			Get
				Return Me._P5
			End Get
			Set
				If (Me._P5.Equals(value) = false) Then
					Me.OnP5Changing(value)
					Me.SendPropertyChanging
					Me._P5 = value
					Me.SendPropertyChanged("P5")
					Me.OnP5Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P6", DbType:="Money")>  _
		Public Property P6() As System.Nullable(Of Decimal)
			Get
				Return Me._P6
			End Get
			Set
				If (Me._P6.Equals(value) = false) Then
					Me.OnP6Changing(value)
					Me.SendPropertyChanging
					Me._P6 = value
					Me.SendPropertyChanged("P6")
					Me.OnP6Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P7", DbType:="Money")>  _
		Public Property P7() As System.Nullable(Of Decimal)
			Get
				Return Me._P7
			End Get
			Set
				If (Me._P7.Equals(value) = false) Then
					Me.OnP7Changing(value)
					Me.SendPropertyChanging
					Me._P7 = value
					Me.SendPropertyChanged("P7")
					Me.OnP7Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P8", DbType:="Money")>  _
		Public Property P8() As System.Nullable(Of Decimal)
			Get
				Return Me._P8
			End Get
			Set
				If (Me._P8.Equals(value) = false) Then
					Me.OnP8Changing(value)
					Me.SendPropertyChanging
					Me._P8 = value
					Me.SendPropertyChanged("P8")
					Me.OnP8Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P9", DbType:="Money")>  _
		Public Property P9() As System.Nullable(Of Decimal)
			Get
				Return Me._P9
			End Get
			Set
				If (Me._P9.Equals(value) = false) Then
					Me.OnP9Changing(value)
					Me.SendPropertyChanging
					Me._P9 = value
					Me.SendPropertyChanged("P9")
					Me.OnP9Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P10", DbType:="Money")>  _
		Public Property P10() As System.Nullable(Of Decimal)
			Get
				Return Me._P10
			End Get
			Set
				If (Me._P10.Equals(value) = false) Then
					Me.OnP10Changing(value)
					Me.SendPropertyChanging
					Me._P10 = value
					Me.SendPropertyChanged("P10")
					Me.OnP10Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P11", DbType:="Money")>  _
		Public Property P11() As System.Nullable(Of Decimal)
			Get
				Return Me._P11
			End Get
			Set
				If (Me._P11.Equals(value) = false) Then
					Me.OnP11Changing(value)
					Me.SendPropertyChanging
					Me._P11 = value
					Me.SendPropertyChanged("P11")
					Me.OnP11Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_P12", DbType:="Money")>  _
		Public Property P12() As System.Nullable(Of Decimal)
			Get
				Return Me._P12
			End Get
			Set
				If (Me._P12.Equals(value) = false) Then
					Me.OnP12Changing(value)
					Me.SendPropertyChanging
					Me._P12 = value
					Me.SendPropertyChanged("P12")
					Me.OnP12Changed
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FiscalYear", DbType:="Int NOT NULL")>  _
		Public Property FiscalYear() As Integer
			Get
				Return Me._FiscalYear
			End Get
			Set
				If ((Me._FiscalYear = value)  _
							= false) Then
					Me.OnFiscalYearChanging(value)
					Me.SendPropertyChanging
					Me._FiscalYear = value
					Me.SendPropertyChanged("FiscalYear")
					Me.OnFiscalYearChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Changed", DbType:="Bit NOT NULL")>  _
		Public Property Changed() As Boolean
			Get
				Return Me._Changed
			End Get
			Set
				If ((Me._Changed = value)  _
							= false) Then
					Me.OnChangedChanging(value)
					Me.SendPropertyChanging
					Me._Changed = value
					Me.SendPropertyChanged("Changed")
					Me.OnChangedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastUpdated", DbType:="DateTime")>  _
		Public Property LastUpdated() As System.Nullable(Of Date)
			Get
				Return Me._LastUpdated
			End Get
			Set
				If (Me._LastUpdated.Equals(value) = false) Then
					Me.OnLastUpdatedChanging(value)
					Me.SendPropertyChanging
					Me._LastUpdated = value
					Me.SendPropertyChanged("LastUpdated")
					Me.OnLastUpdatedChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Portalid", DbType:="Int NOT NULL")>  _
		Public Property Portalid() As Integer
			Get
				Return Me._Portalid
			End Get
			Set
				If ((Me._Portalid = value)  _
							= false) Then
					Me.OnPortalidChanging(value)
					Me.SendPropertyChanging
					Me._Portalid = value
					Me.SendPropertyChanged("Portalid")
					Me.OnPortalidChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Error", Storage:="_Error", DbType:="Bit")>  _
		Public Property [Error]() As System.Nullable(Of Boolean)
			Get
				Return Me._Error
			End Get
			Set
				If (Me._Error.Equals(value) = false) Then
					Me.OnErrorChanging(value)
					Me.SendPropertyChanging
					Me._Error = value
					Me.SendPropertyChanged("[Error]")
					Me.OnErrorChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ErrorMessage", DbType:="NVarChar(500)")>  _
		Public Property ErrorMessage() As String
			Get
				Return Me._ErrorMessage
			End Get
			Set
				If (String.Equals(Me._ErrorMessage, value) = false) Then
					Me.OnErrorMessageChanging(value)
					Me.SendPropertyChanging
					Me._ErrorMessage = value
					Me.SendPropertyChanged("ErrorMessage")
					Me.OnErrorMessageChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
End Namespace
