#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StaffBroker
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AgapeConnect")]
	public partial class StaffBrokerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserProfile(UserProfile instance);
    partial void UpdateUserProfile(UserProfile instance);
    partial void DeleteUserProfile(UserProfile instance);
    partial void InsertProfilePropertyDefinition(ProfilePropertyDefinition instance);
    partial void UpdateProfilePropertyDefinition(ProfilePropertyDefinition instance);
    partial void DeleteProfilePropertyDefinition(ProfilePropertyDefinition instance);
    partial void InsertAP_StaffBroker_Staff(AP_StaffBroker_Staff instance);
    partial void UpdateAP_StaffBroker_Staff(AP_StaffBroker_Staff instance);
    partial void DeleteAP_StaffBroker_Staff(AP_StaffBroker_Staff instance);
    partial void InsertAP_StaffBroker_StaffType(AP_StaffBroker_StaffType instance);
    partial void UpdateAP_StaffBroker_StaffType(AP_StaffBroker_StaffType instance);
    partial void DeleteAP_StaffBroker_StaffType(AP_StaffBroker_StaffType instance);
    partial void InsertProfilePropertyDefinition2(ProfilePropertyDefinition2 instance);
    partial void UpdateProfilePropertyDefinition2(ProfilePropertyDefinition2 instance);
    partial void DeleteProfilePropertyDefinition2(ProfilePropertyDefinition2 instance);
    partial void InsertUserProfile2(UserProfile2 instance);
    partial void UpdateUserProfile2(UserProfile2 instance);
    partial void DeleteUserProfile2(UserProfile2 instance);
    partial void InsertUser2(User2 instance);
    partial void UpdateUser2(User2 instance);
    partial void DeleteUser2(User2 instance);
    partial void InsertAP_StaffBroker_StaffProfile(AP_StaffBroker_StaffProfile instance);
    partial void UpdateAP_StaffBroker_StaffProfile(AP_StaffBroker_StaffProfile instance);
    partial void DeleteAP_StaffBroker_StaffProfile(AP_StaffBroker_StaffProfile instance);
    partial void InsertAP_StaffBroker_Children(AP_StaffBroker_Children instance);
    partial void UpdateAP_StaffBroker_Children(AP_StaffBroker_Children instance);
    partial void DeleteAP_StaffBroker_Children(AP_StaffBroker_Children instance);
    partial void InsertAP_StaffBroker_LeaderMeta(AP_StaffBroker_LeaderMeta instance);
    partial void UpdateAP_StaffBroker_LeaderMeta(AP_StaffBroker_LeaderMeta instance);
    partial void DeleteAP_StaffBroker_LeaderMeta(AP_StaffBroker_LeaderMeta instance);
    partial void InsertLeader(Leader instance);
    partial void UpdateLeader(Leader instance);
    partial void DeleteLeader(Leader instance);
    partial void InsertDelegate(Delegate instance);
    partial void UpdateDelegate(Delegate instance);
    partial void DeleteDelegate(Delegate instance);
    partial void InsertAP_StaffBroker_LeaderMeta2(AP_StaffBroker_LeaderMeta2 instance);
    partial void UpdateAP_StaffBroker_LeaderMeta2(AP_StaffBroker_LeaderMeta2 instance);
    partial void DeleteAP_StaffBroker_LeaderMeta2(AP_StaffBroker_LeaderMeta2 instance);
    partial void InsertDelegate2(Delegate2 instance);
    partial void UpdateDelegate2(Delegate2 instance);
    partial void DeleteDelegate2(Delegate2 instance);
    partial void InsertLeader2(Leader2 instance);
    partial void UpdateLeader2(Leader2 instance);
    partial void DeleteLeader2(Leader2 instance);
    partial void InsertAP_StaffBroker_AccountCode(AP_StaffBroker_AccountCode instance);
    partial void UpdateAP_StaffBroker_AccountCode(AP_StaffBroker_AccountCode instance);
    partial void DeleteAP_StaffBroker_AccountCode(AP_StaffBroker_AccountCode instance);
    partial void InsertAP_StaffBroker_CostCenter(AP_StaffBroker_CostCenter instance);
    partial void UpdateAP_StaffBroker_CostCenter(AP_StaffBroker_CostCenter instance);
    partial void DeleteAP_StaffBroker_CostCenter(AP_StaffBroker_CostCenter instance);
    partial void InsertAP_StaffBroker_Setting(AP_StaffBroker_Setting instance);
    partial void UpdateAP_StaffBroker_Setting(AP_StaffBroker_Setting instance);
    partial void DeleteAP_StaffBroker_Setting(AP_StaffBroker_Setting instance);
    partial void InsertUserPortal(UserPortal instance);
    partial void UpdateUserPortal(UserPortal instance);
    partial void DeleteUserPortal(UserPortal instance);
    partial void InsertAP_StaffBroker_StaffPropertyDefinition(AP_StaffBroker_StaffPropertyDefinition instance);
    partial void UpdateAP_StaffBroker_StaffPropertyDefinition(AP_StaffBroker_StaffPropertyDefinition instance);
    partial void DeleteAP_StaffBroker_StaffPropertyDefinition(AP_StaffBroker_StaffPropertyDefinition instance);
    partial void InsertAP_Menu_Link(AP_Menu_Link instance);
    partial void UpdateAP_Menu_Link(AP_Menu_Link instance);
    partial void DeleteAP_Menu_Link(AP_Menu_Link instance);
    partial void InsertAP_Staff_SuggestedPayment(AP_Staff_SuggestedPayment instance);
    partial void UpdateAP_Staff_SuggestedPayment(AP_Staff_SuggestedPayment instance);
    partial void DeleteAP_Staff_SuggestedPayment(AP_Staff_SuggestedPayment instance);
    partial void InsertAP_StaffBroker_Department(AP_StaffBroker_Department instance);
    partial void UpdateAP_StaffBroker_Department(AP_StaffBroker_Department instance);
    partial void DeleteAP_StaffBroker_Department(AP_StaffBroker_Department instance);
    #endregion
		
		public StaffBrokerDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SiteSqlServer"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StaffBrokerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StaffBrokerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StaffBrokerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StaffBrokerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserProfile> UserProfiles
		{
			get
			{
				return this.GetTable<UserProfile>();
			}
		}
		
		public System.Data.Linq.Table<ProfilePropertyDefinition> ProfilePropertyDefinitions
		{
			get
			{
				return this.GetTable<ProfilePropertyDefinition>();
			}
		}
		
		public System.Data.Linq.Table<AP_StaffBroker_Staff> AP_StaffBroker_Staffs
		{
			get
			{
				return this.GetTable<AP_StaffBroker_Staff>();
			}
		}
		
		public System.Data.Linq.Table<AP_StaffBroker_StaffType> AP_StaffBroker_StaffTypes
		{
			get
			{
				return this.GetTable<AP_StaffBroker_StaffType>();
			}
		}
		
		public System.Data.Linq.Table<ProfilePropertyDefinition2> ProfilePropertyDefinition2s
		{
			get
			{
				return this.GetTable<ProfilePropertyDefinition2>();
			}
		}
		
		public System.Data.Linq.Table<UserProfile2> UserProfile2s
		{
			get
			{
				return this.GetTable<UserProfile2>();
			}
		}
		
		public System.Data.Linq.Table<User2> User2s
		{
			get
			{
				return this.GetTable<User2>();
			}
		}
		
		public System.Data.Linq.Table<AP_StaffBroker_StaffProfile> AP_StaffBroker_StaffProfiles
		{
			get
			{
				return this.GetTable<AP_StaffBroker_StaffProfile>();
			}
		}
		
		public System.Data.Linq.Table<AP_StaffBroker_Children> AP_StaffBroker_Childrens
		{
			get
			{
				return this.GetTable<AP_StaffBroker_Children>();
			}
		}
		
		public System.Data.Linq.Table<AP_StaffBroker_LeaderMeta> AP_StaffBroker_LeaderMetas
		{
			get
			{
				return this.GetTable<AP_StaffBroker_LeaderMeta>();
			}
		}
		
		public System.Data.Linq.Table<Leader> Leaders
		{
			get
			{
				return this.GetTable<Leader>();
			}
		}
		
		public System.Data.Linq.Table<Delegate> Delegates
		{
			get
			{
				return this.GetTable<Delegate>();
			}
		}
		
		public System.Data.Linq.Table<AP_StaffBroker_LeaderMeta2> AP_StaffBroker_LeaderMeta2s
		{
			get
			{
				return this.GetTable<AP_StaffBroker_LeaderMeta2>();
			}
		}
		
		public System.Data.Linq.Table<Delegate2> Delegate2s
		{
			get
			{
				return this.GetTable<Delegate2>();
			}
		}
		
		public System.Data.Linq.Table<Leader2> Leader2s
		{
			get
			{
				return this.GetTable<Leader2>();
			}
		}
		
		public System.Data.Linq.Table<AP_StaffBroker_AccountCode> AP_StaffBroker_AccountCodes
		{
			get
			{
				return this.GetTable<AP_StaffBroker_AccountCode>();
			}
		}
		
		public System.Data.Linq.Table<AP_StaffBroker_CostCenter> AP_StaffBroker_CostCenters
		{
			get
			{
				return this.GetTable<AP_StaffBroker_CostCenter>();
			}
		}
		
		public System.Data.Linq.Table<AP_StaffBroker_Setting> AP_StaffBroker_Settings
		{
			get
			{
				return this.GetTable<AP_StaffBroker_Setting>();
			}
		}
		
		public System.Data.Linq.Table<UserPortal> UserPortals
		{
			get
			{
				return this.GetTable<UserPortal>();
			}
		}
		
		public System.Data.Linq.Table<AP_Image> AP_Images
		{
			get
			{
				return this.GetTable<AP_Image>();
			}
		}
		
		public System.Data.Linq.Table<AP_StaffBroker_StaffPropertyDefinition> AP_StaffBroker_StaffPropertyDefinitions
		{
			get
			{
				return this.GetTable<AP_StaffBroker_StaffPropertyDefinition>();
			}
		}
		
		public System.Data.Linq.Table<AP_Menu_Link> AP_Menu_Links
		{
			get
			{
				return this.GetTable<AP_Menu_Link>();
			}
		}
		
		public System.Data.Linq.Table<AP_Staff_SuggestedPayment> AP_Staff_SuggestedPayments
		{
			get
			{
				return this.GetTable<AP_Staff_SuggestedPayment>();
			}
		}
		
		public System.Data.Linq.Table<AP_StaffBroker_Department> AP_StaffBroker_Departments
		{
			get
			{
				return this.GetTable<AP_StaffBroker_Department>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Agape_Main_AlterUserName")]
		public int Agape_Main_AlterUserName([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExistUserName", DbType="VarChar(120)")] string existUserName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NewUserName", DbType="VarChar(121)")] string newUserName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), existUserName, newUserName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSearchResults")]
		public ISingleResult<GetSearchResultsResult> GetSearchResults([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TabId", DbType="Int")] System.Nullable<int> tabId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ModuleId", DbType="Int")] System.Nullable<int> moduleId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, tabId, moduleId);
			return ((ISingleResult<GetSearchResultsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetSearchResultsByWord")]
		public ISingleResult<GetSearchResultsByWordResult> GetSearchResultsByWord([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PortalID", DbType="Int")] System.Nullable<int> portalID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Word", DbType="NVarChar(100)")] string word)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), portalID, word);
			return ((ISingleResult<GetSearchResultsByWordResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private string _FirstName;
		
		private string _LastName;
		
		private bool _IsSuperUser;
		
		private System.Nullable<int> _AffiliateId;
		
		private string _Email;
		
		private string _DisplayName;
		
		private bool _UpdatePassword;
		
		private string _LastIPAddress;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntitySet<UserProfile> _UserProfiles;
		
		private EntityRef<AP_StaffBroker_Staff> _AP_StaffBroker_Staffs;
		
		private EntitySet<AP_StaffBroker_LeaderMeta> _AP_StaffBroker_LeaderMetas;
		
		private EntitySet<UserPortal> _UserPortals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnIsSuperUserChanging(bool value);
    partial void OnIsSuperUserChanged();
    partial void OnAffiliateIdChanging(System.Nullable<int> value);
    partial void OnAffiliateIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnUpdatePasswordChanging(bool value);
    partial void OnUpdatePasswordChanged();
    partial void OnLastIPAddressChanging(string value);
    partial void OnLastIPAddressChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public User()
		{
			this._UserProfiles = new EntitySet<UserProfile>(new Action<UserProfile>(this.attach_UserProfiles), new Action<UserProfile>(this.detach_UserProfiles));
			this._AP_StaffBroker_Staffs = default(EntityRef<AP_StaffBroker_Staff>);
			this._AP_StaffBroker_LeaderMetas = new EntitySet<AP_StaffBroker_LeaderMeta>(new Action<AP_StaffBroker_LeaderMeta>(this.attach_AP_StaffBroker_LeaderMetas), new Action<AP_StaffBroker_LeaderMeta>(this.detach_AP_StaffBroker_LeaderMetas));
			this._UserPortals = new EntitySet<UserPortal>(new Action<UserPortal>(this.attach_UserPortals), new Action<UserPortal>(this.detach_UserPortals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuperUser", DbType="Bit NOT NULL")]
		public bool IsSuperUser
		{
			get
			{
				return this._IsSuperUser;
			}
			set
			{
				if ((this._IsSuperUser != value))
				{
					this.OnIsSuperUserChanging(value);
					this.SendPropertyChanging();
					this._IsSuperUser = value;
					this.SendPropertyChanged("IsSuperUser");
					this.OnIsSuperUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateId", DbType="Int")]
		public System.Nullable<int> AffiliateId
		{
			get
			{
				return this._AffiliateId;
			}
			set
			{
				if ((this._AffiliateId != value))
				{
					this.OnAffiliateIdChanging(value);
					this.SendPropertyChanging();
					this._AffiliateId = value;
					this.SendPropertyChanged("AffiliateId");
					this.OnAffiliateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatePassword", DbType="Bit NOT NULL")]
		public bool UpdatePassword
		{
			get
			{
				return this._UpdatePassword;
			}
			set
			{
				if ((this._UpdatePassword != value))
				{
					this.OnUpdatePasswordChanging(value);
					this.SendPropertyChanging();
					this._UpdatePassword = value;
					this.SendPropertyChanged("UpdatePassword");
					this.OnUpdatePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastIPAddress", DbType="NVarChar(50)")]
		public string LastIPAddress
		{
			get
			{
				return this._LastIPAddress;
			}
			set
			{
				if ((this._LastIPAddress != value))
				{
					this.OnLastIPAddressChanging(value);
					this.SendPropertyChanging();
					this._LastIPAddress = value;
					this.SendPropertyChanged("LastIPAddress");
					this.OnLastIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserProfile", Storage="_UserProfiles", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<UserProfile> UserProfiles
		{
			get
			{
				return this._UserProfiles;
			}
			set
			{
				this._UserProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AP_StaffBroker_Staff", Storage="_AP_StaffBroker_Staffs", ThisKey="UserID", OtherKey="UserId1", IsUnique=true, IsForeignKey=false)]
		public AP_StaffBroker_Staff AP_StaffBroker_Staffs
		{
			get
			{
				return this._AP_StaffBroker_Staffs.Entity;
			}
			set
			{
				AP_StaffBroker_Staff previousValue = this._AP_StaffBroker_Staffs.Entity;
				if (((previousValue != value) 
							|| (this._AP_StaffBroker_Staffs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AP_StaffBroker_Staffs.Entity = null;
						previousValue.User = null;
					}
					this._AP_StaffBroker_Staffs.Entity = value;
					if ((value != null))
					{
						value.User = this;
					}
					this.SendPropertyChanged("AP_StaffBroker_Staffs");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AP_StaffBroker_LeaderMeta", Storage="_AP_StaffBroker_LeaderMetas", ThisKey="UserID", OtherKey="UserId")]
		public EntitySet<AP_StaffBroker_LeaderMeta> AP_StaffBroker_LeaderMetas
		{
			get
			{
				return this._AP_StaffBroker_LeaderMetas;
			}
			set
			{
				this._AP_StaffBroker_LeaderMetas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPortal", Storage="_UserPortals", ThisKey="UserID", OtherKey="UserId")]
		public EntitySet<UserPortal> UserPortals
		{
			get
			{
				return this._UserPortals;
			}
			set
			{
				this._UserPortals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserProfiles(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserProfiles(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_AP_StaffBroker_LeaderMetas(AP_StaffBroker_LeaderMeta entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_AP_StaffBroker_LeaderMetas(AP_StaffBroker_LeaderMeta entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserPortals(UserPortal entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserPortals(UserPortal entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserProfile")]
	public partial class UserProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProfileID;
		
		private int _UserID;
		
		private int _PropertyDefinitionID;
		
		private string _PropertyValue;
		
		private string _PropertyText;
		
		private int _Visibility;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<User> _User;
		
		private EntityRef<ProfilePropertyDefinition> _ProfilePropertyDefinition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfileIDChanging(int value);
    partial void OnProfileIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnPropertyDefinitionIDChanging(int value);
    partial void OnPropertyDefinitionIDChanged();
    partial void OnPropertyValueChanging(string value);
    partial void OnPropertyValueChanged();
    partial void OnPropertyTextChanging(string value);
    partial void OnPropertyTextChanged();
    partial void OnVisibilityChanging(int value);
    partial void OnVisibilityChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public UserProfile()
		{
			this._User = default(EntityRef<User>);
			this._ProfilePropertyDefinition = default(EntityRef<ProfilePropertyDefinition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProfileID
		{
			get
			{
				return this._ProfileID;
			}
			set
			{
				if ((this._ProfileID != value))
				{
					this.OnProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileID = value;
					this.SendPropertyChanged("ProfileID");
					this.OnProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyDefinitionID", DbType="Int NOT NULL")]
		public int PropertyDefinitionID
		{
			get
			{
				return this._PropertyDefinitionID;
			}
			set
			{
				if ((this._PropertyDefinitionID != value))
				{
					if (this._ProfilePropertyDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPropertyDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._PropertyDefinitionID = value;
					this.SendPropertyChanged("PropertyDefinitionID");
					this.OnPropertyDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValue", DbType="NVarChar(3750)")]
		public string PropertyValue
		{
			get
			{
				return this._PropertyValue;
			}
			set
			{
				if ((this._PropertyValue != value))
				{
					this.OnPropertyValueChanging(value);
					this.SendPropertyChanging();
					this._PropertyValue = value;
					this.SendPropertyChanged("PropertyValue");
					this.OnPropertyValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyText", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string PropertyText
		{
			get
			{
				return this._PropertyText;
			}
			set
			{
				if ((this._PropertyText != value))
				{
					this.OnPropertyTextChanging(value);
					this.SendPropertyChanging();
					this._PropertyText = value;
					this.SendPropertyChanged("PropertyText");
					this.OnPropertyTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Int NOT NULL")]
		public int Visibility
		{
			get
			{
				return this._Visibility;
			}
			set
			{
				if ((this._Visibility != value))
				{
					this.OnVisibilityChanging(value);
					this.SendPropertyChanging();
					this._Visibility = value;
					this.SendPropertyChanged("Visibility");
					this.OnVisibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserProfile", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserProfiles.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserProfiles.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProfilePropertyDefinition_UserProfile", Storage="_ProfilePropertyDefinition", ThisKey="PropertyDefinitionID", OtherKey="PropertyDefinitionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ProfilePropertyDefinition ProfilePropertyDefinition
		{
			get
			{
				return this._ProfilePropertyDefinition.Entity;
			}
			set
			{
				ProfilePropertyDefinition previousValue = this._ProfilePropertyDefinition.Entity;
				if (((previousValue != value) 
							|| (this._ProfilePropertyDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProfilePropertyDefinition.Entity = null;
						previousValue.UserProfiles.Remove(this);
					}
					this._ProfilePropertyDefinition.Entity = value;
					if ((value != null))
					{
						value.UserProfiles.Add(this);
						this._PropertyDefinitionID = value.PropertyDefinitionID;
					}
					else
					{
						this._PropertyDefinitionID = default(int);
					}
					this.SendPropertyChanged("ProfilePropertyDefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProfilePropertyDefinition")]
	public partial class ProfilePropertyDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PropertyDefinitionID;
		
		private System.Nullable<int> _PortalID;
		
		private System.Nullable<int> _ModuleDefID;
		
		private bool _Deleted;
		
		private int _DataType;
		
		private string _DefaultValue;
		
		private string _PropertyCategory;
		
		private string _PropertyName;
		
		private int _Length;
		
		private bool _Required;
		
		private string _ValidationExpression;
		
		private int _ViewOrder;
		
		private bool _Visible;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private System.Nullable<int> _DefaultVisibility;
		
		private EntitySet<UserProfile> _UserProfiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPropertyDefinitionIDChanging(int value);
    partial void OnPropertyDefinitionIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnModuleDefIDChanging(System.Nullable<int> value);
    partial void OnModuleDefIDChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnDataTypeChanging(int value);
    partial void OnDataTypeChanged();
    partial void OnDefaultValueChanging(string value);
    partial void OnDefaultValueChanged();
    partial void OnPropertyCategoryChanging(string value);
    partial void OnPropertyCategoryChanged();
    partial void OnPropertyNameChanging(string value);
    partial void OnPropertyNameChanged();
    partial void OnLengthChanging(int value);
    partial void OnLengthChanged();
    partial void OnRequiredChanging(bool value);
    partial void OnRequiredChanged();
    partial void OnValidationExpressionChanging(string value);
    partial void OnValidationExpressionChanged();
    partial void OnViewOrderChanging(int value);
    partial void OnViewOrderChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnDefaultVisibilityChanging(System.Nullable<int> value);
    partial void OnDefaultVisibilityChanged();
    #endregion
		
		public ProfilePropertyDefinition()
		{
			this._UserProfiles = new EntitySet<UserProfile>(new Action<UserProfile>(this.attach_UserProfiles), new Action<UserProfile>(this.detach_UserProfiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyDefinitionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PropertyDefinitionID
		{
			get
			{
				return this._PropertyDefinitionID;
			}
			set
			{
				if ((this._PropertyDefinitionID != value))
				{
					this.OnPropertyDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._PropertyDefinitionID = value;
					this.SendPropertyChanged("PropertyDefinitionID");
					this.OnPropertyDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleDefID", DbType="Int")]
		public System.Nullable<int> ModuleDefID
		{
			get
			{
				return this._ModuleDefID;
			}
			set
			{
				if ((this._ModuleDefID != value))
				{
					this.OnModuleDefIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleDefID = value;
					this.SendPropertyChanged("ModuleDefID");
					this.OnModuleDefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataType", DbType="Int NOT NULL")]
		public int DataType
		{
			get
			{
				return this._DataType;
			}
			set
			{
				if ((this._DataType != value))
				{
					this.OnDataTypeChanging(value);
					this.SendPropertyChanging();
					this._DataType = value;
					this.SendPropertyChanged("DataType");
					this.OnDataTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultValue", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DefaultValue
		{
			get
			{
				return this._DefaultValue;
			}
			set
			{
				if ((this._DefaultValue != value))
				{
					this.OnDefaultValueChanging(value);
					this.SendPropertyChanging();
					this._DefaultValue = value;
					this.SendPropertyChanged("DefaultValue");
					this.OnDefaultValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyCategory", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PropertyCategory
		{
			get
			{
				return this._PropertyCategory;
			}
			set
			{
				if ((this._PropertyCategory != value))
				{
					this.OnPropertyCategoryChanging(value);
					this.SendPropertyChanging();
					this._PropertyCategory = value;
					this.SendPropertyChanged("PropertyCategory");
					this.OnPropertyCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PropertyName
		{
			get
			{
				return this._PropertyName;
			}
			set
			{
				if ((this._PropertyName != value))
				{
					this.OnPropertyNameChanging(value);
					this.SendPropertyChanging();
					this._PropertyName = value;
					this.SendPropertyChanged("PropertyName");
					this.OnPropertyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Int NOT NULL")]
		public int Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Required", DbType="Bit NOT NULL")]
		public bool Required
		{
			get
			{
				return this._Required;
			}
			set
			{
				if ((this._Required != value))
				{
					this.OnRequiredChanging(value);
					this.SendPropertyChanging();
					this._Required = value;
					this.SendPropertyChanged("Required");
					this.OnRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationExpression", DbType="NVarChar(2000)")]
		public string ValidationExpression
		{
			get
			{
				return this._ValidationExpression;
			}
			set
			{
				if ((this._ValidationExpression != value))
				{
					this.OnValidationExpressionChanging(value);
					this.SendPropertyChanging();
					this._ValidationExpression = value;
					this.SendPropertyChanged("ValidationExpression");
					this.OnValidationExpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewOrder", DbType="Int NOT NULL")]
		public int ViewOrder
		{
			get
			{
				return this._ViewOrder;
			}
			set
			{
				if ((this._ViewOrder != value))
				{
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultVisibility", DbType="Int")]
		public System.Nullable<int> DefaultVisibility
		{
			get
			{
				return this._DefaultVisibility;
			}
			set
			{
				if ((this._DefaultVisibility != value))
				{
					this.OnDefaultVisibilityChanging(value);
					this.SendPropertyChanging();
					this._DefaultVisibility = value;
					this.SendPropertyChanged("DefaultVisibility");
					this.OnDefaultVisibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProfilePropertyDefinition_UserProfile", Storage="_UserProfiles", ThisKey="PropertyDefinitionID", OtherKey="PropertyDefinitionID")]
		public EntitySet<UserProfile> UserProfiles
		{
			get
			{
				return this._UserProfiles;
			}
			set
			{
				this._UserProfiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserProfiles(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.ProfilePropertyDefinition = this;
		}
		
		private void detach_UserProfiles(UserProfile entity)
		{
			this.SendPropertyChanging();
			entity.ProfilePropertyDefinition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AP_StaffBroker_Staff")]
	public partial class AP_StaffBroker_Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StaffId;
		
		private string _DisplayName;
		
		private string _CostCenter;
		
		private System.Nullable<short> _StaffTypeId;
		
		private int _UserId1;
		
		private System.Nullable<int> _UserId2;
		
		private bool _Active;
		
		private System.Nullable<int> _PortalId;
		
		private EntitySet<AP_StaffBroker_StaffProfile> _AP_StaffBroker_StaffProfiles;
		
		private EntitySet<AP_StaffBroker_Children> _AP_StaffBroker_Childrens;
		
		private EntityRef<User2> _User2;
		
		private EntityRef<User> _User;
		
		private EntityRef<AP_StaffBroker_StaffType> _AP_StaffBroker_StaffType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaffIdChanging(int value);
    partial void OnStaffIdChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnCostCenterChanging(string value);
    partial void OnCostCenterChanged();
    partial void OnStaffTypeIdChanging(System.Nullable<short> value);
    partial void OnStaffTypeIdChanged();
    partial void OnUserId1Changing(int value);
    partial void OnUserId1Changed();
    partial void OnUserId2Changing(System.Nullable<int> value);
    partial void OnUserId2Changed();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnPortalIdChanging(System.Nullable<int> value);
    partial void OnPortalIdChanged();
    #endregion
		
		public AP_StaffBroker_Staff()
		{
			this._AP_StaffBroker_StaffProfiles = new EntitySet<AP_StaffBroker_StaffProfile>(new Action<AP_StaffBroker_StaffProfile>(this.attach_AP_StaffBroker_StaffProfiles), new Action<AP_StaffBroker_StaffProfile>(this.detach_AP_StaffBroker_StaffProfiles));
			this._AP_StaffBroker_Childrens = new EntitySet<AP_StaffBroker_Children>(new Action<AP_StaffBroker_Children>(this.attach_AP_StaffBroker_Childrens), new Action<AP_StaffBroker_Children>(this.detach_AP_StaffBroker_Childrens));
			this._User2 = default(EntityRef<User2>);
			this._User = default(EntityRef<User>);
			this._AP_StaffBroker_StaffType = default(EntityRef<AP_StaffBroker_StaffType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StaffId
		{
			get
			{
				return this._StaffId;
			}
			set
			{
				if ((this._StaffId != value))
				{
					this.OnStaffIdChanging(value);
					this.SendPropertyChanging();
					this._StaffId = value;
					this.SendPropertyChanged("StaffId");
					this.OnStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCenter", DbType="NVarChar(20)")]
		public string CostCenter
		{
			get
			{
				return this._CostCenter;
			}
			set
			{
				if ((this._CostCenter != value))
				{
					this.OnCostCenterChanging(value);
					this.SendPropertyChanging();
					this._CostCenter = value;
					this.SendPropertyChanged("CostCenter");
					this.OnCostCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffTypeId", DbType="SmallInt")]
		public System.Nullable<short> StaffTypeId
		{
			get
			{
				return this._StaffTypeId;
			}
			set
			{
				if ((this._StaffTypeId != value))
				{
					if (this._AP_StaffBroker_StaffType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffTypeIdChanging(value);
					this.SendPropertyChanging();
					this._StaffTypeId = value;
					this.SendPropertyChanged("StaffTypeId");
					this.OnStaffTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId1", DbType="Int NOT NULL")]
		public int UserId1
		{
			get
			{
				return this._UserId1;
			}
			set
			{
				if ((this._UserId1 != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserId1Changing(value);
					this.SendPropertyChanging();
					this._UserId1 = value;
					this.SendPropertyChanged("UserId1");
					this.OnUserId1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId2", DbType="Int")]
		public System.Nullable<int> UserId2
		{
			get
			{
				return this._UserId2;
			}
			set
			{
				if ((this._UserId2 != value))
				{
					if (this._User2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserId2Changing(value);
					this.SendPropertyChanging();
					this._UserId2 = value;
					this.SendPropertyChanged("UserId2");
					this.OnUserId2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="bit")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="int")]
		public System.Nullable<int> PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AP_StaffBroker_Staff_AP_StaffBroker_StaffProfile", Storage="_AP_StaffBroker_StaffProfiles", ThisKey="StaffId", OtherKey="StaffId")]
		public EntitySet<AP_StaffBroker_StaffProfile> AP_StaffBroker_StaffProfiles
		{
			get
			{
				return this._AP_StaffBroker_StaffProfiles;
			}
			set
			{
				this._AP_StaffBroker_StaffProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AP_StaffBroker_Staff_AP_StaffBroker_Children", Storage="_AP_StaffBroker_Childrens", ThisKey="StaffId", OtherKey="StaffId")]
		public EntitySet<AP_StaffBroker_Children> AP_StaffBroker_Childrens
		{
			get
			{
				return this._AP_StaffBroker_Childrens;
			}
			set
			{
				this._AP_StaffBroker_Childrens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User2_AP_StaffBroker_Staff", Storage="_User2", ThisKey="UserId2", OtherKey="UserID", IsForeignKey=true)]
		public User2 User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User2 previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.AP_StaffBroker_Staffs = null;
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.AP_StaffBroker_Staffs = this;
						this._UserId2 = value.UserID;
					}
					else
					{
						this._UserId2 = default(Nullable<int>);
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AP_StaffBroker_Staff", Storage="_User", ThisKey="UserId1", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.AP_StaffBroker_Staffs = null;
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.AP_StaffBroker_Staffs = this;
						this._UserId1 = value.UserID;
					}
					else
					{
						this._UserId1 = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AP_StaffBroker_StaffType_AP_StaffBroker_Staff", Storage="_AP_StaffBroker_StaffType", ThisKey="StaffTypeId", OtherKey="StaffTypeId", IsForeignKey=true)]
		public AP_StaffBroker_StaffType AP_StaffBroker_StaffType
		{
			get
			{
				return this._AP_StaffBroker_StaffType.Entity;
			}
			set
			{
				AP_StaffBroker_StaffType previousValue = this._AP_StaffBroker_StaffType.Entity;
				if (((previousValue != value) 
							|| (this._AP_StaffBroker_StaffType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AP_StaffBroker_StaffType.Entity = null;
						previousValue.AP_StaffBroker_Staffs.Remove(this);
					}
					this._AP_StaffBroker_StaffType.Entity = value;
					if ((value != null))
					{
						value.AP_StaffBroker_Staffs.Add(this);
						this._StaffTypeId = value.StaffTypeId;
					}
					else
					{
						this._StaffTypeId = default(Nullable<short>);
					}
					this.SendPropertyChanged("AP_StaffBroker_StaffType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AP_StaffBroker_StaffProfiles(AP_StaffBroker_StaffProfile entity)
		{
			this.SendPropertyChanging();
			entity.AP_StaffBroker_Staff = this;
		}
		
		private void detach_AP_StaffBroker_StaffProfiles(AP_StaffBroker_StaffProfile entity)
		{
			this.SendPropertyChanging();
			entity.AP_StaffBroker_Staff = null;
		}
		
		private void attach_AP_StaffBroker_Childrens(AP_StaffBroker_Children entity)
		{
			this.SendPropertyChanging();
			entity.AP_StaffBroker_Staff = this;
		}
		
		private void detach_AP_StaffBroker_Childrens(AP_StaffBroker_Children entity)
		{
			this.SendPropertyChanging();
			entity.AP_StaffBroker_Staff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AP_StaffBroker_StaffType")]
	public partial class AP_StaffBroker_StaffType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _StaffTypeId;
		
		private string _Name;
		
		private System.Nullable<int> _PortalId;
		
		private EntitySet<AP_StaffBroker_Staff> _AP_StaffBroker_Staffs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaffTypeIdChanging(short value);
    partial void OnStaffTypeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPortalIdChanging(System.Nullable<int> value);
    partial void OnPortalIdChanged();
    #endregion
		
		public AP_StaffBroker_StaffType()
		{
			this._AP_StaffBroker_Staffs = new EntitySet<AP_StaffBroker_Staff>(new Action<AP_StaffBroker_Staff>(this.attach_AP_StaffBroker_Staffs), new Action<AP_StaffBroker_Staff>(this.detach_AP_StaffBroker_Staffs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffTypeId", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short StaffTypeId
		{
			get
			{
				return this._StaffTypeId;
			}
			set
			{
				if ((this._StaffTypeId != value))
				{
					this.OnStaffTypeIdChanging(value);
					this.SendPropertyChanging();
					this._StaffTypeId = value;
					this.SendPropertyChanged("StaffTypeId");
					this.OnStaffTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="int")]
		public System.Nullable<int> PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AP_StaffBroker_StaffType_AP_StaffBroker_Staff", Storage="_AP_StaffBroker_Staffs", ThisKey="StaffTypeId", OtherKey="StaffTypeId")]
		public EntitySet<AP_StaffBroker_Staff> AP_StaffBroker_Staffs
		{
			get
			{
				return this._AP_StaffBroker_Staffs;
			}
			set
			{
				this._AP_StaffBroker_Staffs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AP_StaffBroker_Staffs(AP_StaffBroker_Staff entity)
		{
			this.SendPropertyChanging();
			entity.AP_StaffBroker_StaffType = this;
		}
		
		private void detach_AP_StaffBroker_Staffs(AP_StaffBroker_Staff entity)
		{
			this.SendPropertyChanging();
			entity.AP_StaffBroker_StaffType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProfilePropertyDefinition")]
	public partial class ProfilePropertyDefinition2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PropertyDefinitionID;
		
		private System.Nullable<int> _PortalID;
		
		private System.Nullable<int> _ModuleDefID;
		
		private bool _Deleted;
		
		private int _DataType;
		
		private string _DefaultValue;
		
		private string _PropertyCategory;
		
		private string _PropertyName;
		
		private int _Length;
		
		private bool _Required;
		
		private string _ValidationExpression;
		
		private int _ViewOrder;
		
		private bool _Visible;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private System.Nullable<int> _DefaultVisibility;
		
		private EntitySet<UserProfile2> _UserProfile2s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPropertyDefinitionIDChanging(int value);
    partial void OnPropertyDefinitionIDChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnModuleDefIDChanging(System.Nullable<int> value);
    partial void OnModuleDefIDChanged();
    partial void OnDeletedChanging(bool value);
    partial void OnDeletedChanged();
    partial void OnDataTypeChanging(int value);
    partial void OnDataTypeChanged();
    partial void OnDefaultValueChanging(string value);
    partial void OnDefaultValueChanged();
    partial void OnPropertyCategoryChanging(string value);
    partial void OnPropertyCategoryChanged();
    partial void OnPropertyNameChanging(string value);
    partial void OnPropertyNameChanged();
    partial void OnLengthChanging(int value);
    partial void OnLengthChanged();
    partial void OnRequiredChanging(bool value);
    partial void OnRequiredChanged();
    partial void OnValidationExpressionChanging(string value);
    partial void OnValidationExpressionChanged();
    partial void OnViewOrderChanging(int value);
    partial void OnViewOrderChanged();
    partial void OnVisibleChanging(bool value);
    partial void OnVisibleChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnDefaultVisibilityChanging(System.Nullable<int> value);
    partial void OnDefaultVisibilityChanged();
    #endregion
		
		public ProfilePropertyDefinition2()
		{
			this._UserProfile2s = new EntitySet<UserProfile2>(new Action<UserProfile2>(this.attach_UserProfile2s), new Action<UserProfile2>(this.detach_UserProfile2s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyDefinitionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PropertyDefinitionID
		{
			get
			{
				return this._PropertyDefinitionID;
			}
			set
			{
				if ((this._PropertyDefinitionID != value))
				{
					this.OnPropertyDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._PropertyDefinitionID = value;
					this.SendPropertyChanged("PropertyDefinitionID");
					this.OnPropertyDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleDefID", DbType="Int")]
		public System.Nullable<int> ModuleDefID
		{
			get
			{
				return this._ModuleDefID;
			}
			set
			{
				if ((this._ModuleDefID != value))
				{
					this.OnModuleDefIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleDefID = value;
					this.SendPropertyChanged("ModuleDefID");
					this.OnModuleDefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit NOT NULL")]
		public bool Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataType", DbType="Int NOT NULL")]
		public int DataType
		{
			get
			{
				return this._DataType;
			}
			set
			{
				if ((this._DataType != value))
				{
					this.OnDataTypeChanging(value);
					this.SendPropertyChanging();
					this._DataType = value;
					this.SendPropertyChanged("DataType");
					this.OnDataTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultValue", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DefaultValue
		{
			get
			{
				return this._DefaultValue;
			}
			set
			{
				if ((this._DefaultValue != value))
				{
					this.OnDefaultValueChanging(value);
					this.SendPropertyChanging();
					this._DefaultValue = value;
					this.SendPropertyChanged("DefaultValue");
					this.OnDefaultValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyCategory", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PropertyCategory
		{
			get
			{
				return this._PropertyCategory;
			}
			set
			{
				if ((this._PropertyCategory != value))
				{
					this.OnPropertyCategoryChanging(value);
					this.SendPropertyChanging();
					this._PropertyCategory = value;
					this.SendPropertyChanged("PropertyCategory");
					this.OnPropertyCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PropertyName
		{
			get
			{
				return this._PropertyName;
			}
			set
			{
				if ((this._PropertyName != value))
				{
					this.OnPropertyNameChanging(value);
					this.SendPropertyChanging();
					this._PropertyName = value;
					this.SendPropertyChanged("PropertyName");
					this.OnPropertyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Int NOT NULL")]
		public int Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Required", DbType="Bit NOT NULL")]
		public bool Required
		{
			get
			{
				return this._Required;
			}
			set
			{
				if ((this._Required != value))
				{
					this.OnRequiredChanging(value);
					this.SendPropertyChanging();
					this._Required = value;
					this.SendPropertyChanged("Required");
					this.OnRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationExpression", DbType="NVarChar(2000)")]
		public string ValidationExpression
		{
			get
			{
				return this._ValidationExpression;
			}
			set
			{
				if ((this._ValidationExpression != value))
				{
					this.OnValidationExpressionChanging(value);
					this.SendPropertyChanging();
					this._ValidationExpression = value;
					this.SendPropertyChanged("ValidationExpression");
					this.OnValidationExpressionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewOrder", DbType="Int NOT NULL")]
		public int ViewOrder
		{
			get
			{
				return this._ViewOrder;
			}
			set
			{
				if ((this._ViewOrder != value))
				{
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visible", DbType="Bit NOT NULL")]
		public bool Visible
		{
			get
			{
				return this._Visible;
			}
			set
			{
				if ((this._Visible != value))
				{
					this.OnVisibleChanging(value);
					this.SendPropertyChanging();
					this._Visible = value;
					this.SendPropertyChanged("Visible");
					this.OnVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultVisibility", DbType="Int")]
		public System.Nullable<int> DefaultVisibility
		{
			get
			{
				return this._DefaultVisibility;
			}
			set
			{
				if ((this._DefaultVisibility != value))
				{
					this.OnDefaultVisibilityChanging(value);
					this.SendPropertyChanging();
					this._DefaultVisibility = value;
					this.SendPropertyChanged("DefaultVisibility");
					this.OnDefaultVisibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProfilePropertyDefinition2_UserProfile2", Storage="_UserProfile2s", ThisKey="PropertyDefinitionID", OtherKey="PropertyDefinitionID")]
		public EntitySet<UserProfile2> UserProfile2s
		{
			get
			{
				return this._UserProfile2s;
			}
			set
			{
				this._UserProfile2s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserProfile2s(UserProfile2 entity)
		{
			this.SendPropertyChanging();
			entity.ProfilePropertyDefinition2 = this;
		}
		
		private void detach_UserProfile2s(UserProfile2 entity)
		{
			this.SendPropertyChanging();
			entity.ProfilePropertyDefinition2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserProfile")]
	public partial class UserProfile2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProfileID;
		
		private int _UserID;
		
		private int _PropertyDefinitionID;
		
		private string _PropertyValue;
		
		private string _PropertyText;
		
		private int _Visibility;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<User2> _User2;
		
		private EntityRef<ProfilePropertyDefinition2> _ProfilePropertyDefinition2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfileIDChanging(int value);
    partial void OnProfileIDChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnPropertyDefinitionIDChanging(int value);
    partial void OnPropertyDefinitionIDChanged();
    partial void OnPropertyValueChanging(string value);
    partial void OnPropertyValueChanged();
    partial void OnPropertyTextChanging(string value);
    partial void OnPropertyTextChanged();
    partial void OnVisibilityChanging(int value);
    partial void OnVisibilityChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public UserProfile2()
		{
			this._User2 = default(EntityRef<User2>);
			this._ProfilePropertyDefinition2 = default(EntityRef<ProfilePropertyDefinition2>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProfileID
		{
			get
			{
				return this._ProfileID;
			}
			set
			{
				if ((this._ProfileID != value))
				{
					this.OnProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileID = value;
					this.SendPropertyChanged("ProfileID");
					this.OnProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyDefinitionID", DbType="Int NOT NULL")]
		public int PropertyDefinitionID
		{
			get
			{
				return this._PropertyDefinitionID;
			}
			set
			{
				if ((this._PropertyDefinitionID != value))
				{
					if (this._ProfilePropertyDefinition2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPropertyDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._PropertyDefinitionID = value;
					this.SendPropertyChanged("PropertyDefinitionID");
					this.OnPropertyDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValue", DbType="NVarChar(3750)")]
		public string PropertyValue
		{
			get
			{
				return this._PropertyValue;
			}
			set
			{
				if ((this._PropertyValue != value))
				{
					this.OnPropertyValueChanging(value);
					this.SendPropertyChanging();
					this._PropertyValue = value;
					this.SendPropertyChanged("PropertyValue");
					this.OnPropertyValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyText", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string PropertyText
		{
			get
			{
				return this._PropertyText;
			}
			set
			{
				if ((this._PropertyText != value))
				{
					this.OnPropertyTextChanging(value);
					this.SendPropertyChanging();
					this._PropertyText = value;
					this.SendPropertyChanged("PropertyText");
					this.OnPropertyTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Visibility", DbType="Int NOT NULL")]
		public int Visibility
		{
			get
			{
				return this._Visibility;
			}
			set
			{
				if ((this._Visibility != value))
				{
					this.OnVisibilityChanging(value);
					this.SendPropertyChanging();
					this._Visibility = value;
					this.SendPropertyChanged("Visibility");
					this.OnVisibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User2_UserProfile2", Storage="_User2", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User2 User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User2 previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.UserProfile2s.Remove(this);
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.UserProfile2s.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProfilePropertyDefinition2_UserProfile2", Storage="_ProfilePropertyDefinition2", ThisKey="PropertyDefinitionID", OtherKey="PropertyDefinitionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ProfilePropertyDefinition2 ProfilePropertyDefinition2
		{
			get
			{
				return this._ProfilePropertyDefinition2.Entity;
			}
			set
			{
				ProfilePropertyDefinition2 previousValue = this._ProfilePropertyDefinition2.Entity;
				if (((previousValue != value) 
							|| (this._ProfilePropertyDefinition2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProfilePropertyDefinition2.Entity = null;
						previousValue.UserProfile2s.Remove(this);
					}
					this._ProfilePropertyDefinition2.Entity = value;
					if ((value != null))
					{
						value.UserProfile2s.Add(this);
						this._PropertyDefinitionID = value.PropertyDefinitionID;
					}
					else
					{
						this._PropertyDefinitionID = default(int);
					}
					this.SendPropertyChanged("ProfilePropertyDefinition2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private string _FirstName;
		
		private string _LastName;
		
		private bool _IsSuperUser;
		
		private System.Nullable<int> _AffiliateId;
		
		private string _Email;
		
		private string _DisplayName;
		
		private bool _UpdatePassword;
		
		private string _LastIPAddress;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<AP_StaffBroker_Staff> _AP_StaffBroker_Staffs;
		
		private EntitySet<UserProfile2> _UserProfile2s;
		
		private EntitySet<AP_StaffBroker_LeaderMeta2> _AP_StaffBroker_LeaderMeta2s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnIsSuperUserChanging(bool value);
    partial void OnIsSuperUserChanged();
    partial void OnAffiliateIdChanging(System.Nullable<int> value);
    partial void OnAffiliateIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnUpdatePasswordChanging(bool value);
    partial void OnUpdatePasswordChanged();
    partial void OnLastIPAddressChanging(string value);
    partial void OnLastIPAddressChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public User2()
		{
			this._AP_StaffBroker_Staffs = default(EntityRef<AP_StaffBroker_Staff>);
			this._UserProfile2s = new EntitySet<UserProfile2>(new Action<UserProfile2>(this.attach_UserProfile2s), new Action<UserProfile2>(this.detach_UserProfile2s));
			this._AP_StaffBroker_LeaderMeta2s = new EntitySet<AP_StaffBroker_LeaderMeta2>(new Action<AP_StaffBroker_LeaderMeta2>(this.attach_AP_StaffBroker_LeaderMeta2s), new Action<AP_StaffBroker_LeaderMeta2>(this.detach_AP_StaffBroker_LeaderMeta2s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuperUser", DbType="Bit NOT NULL")]
		public bool IsSuperUser
		{
			get
			{
				return this._IsSuperUser;
			}
			set
			{
				if ((this._IsSuperUser != value))
				{
					this.OnIsSuperUserChanging(value);
					this.SendPropertyChanging();
					this._IsSuperUser = value;
					this.SendPropertyChanged("IsSuperUser");
					this.OnIsSuperUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateId", DbType="Int")]
		public System.Nullable<int> AffiliateId
		{
			get
			{
				return this._AffiliateId;
			}
			set
			{
				if ((this._AffiliateId != value))
				{
					this.OnAffiliateIdChanging(value);
					this.SendPropertyChanging();
					this._AffiliateId = value;
					this.SendPropertyChanged("AffiliateId");
					this.OnAffiliateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatePassword", DbType="Bit NOT NULL")]
		public bool UpdatePassword
		{
			get
			{
				return this._UpdatePassword;
			}
			set
			{
				if ((this._UpdatePassword != value))
				{
					this.OnUpdatePasswordChanging(value);
					this.SendPropertyChanging();
					this._UpdatePassword = value;
					this.SendPropertyChanged("UpdatePassword");
					this.OnUpdatePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastIPAddress", DbType="NVarChar(50)")]
		public string LastIPAddress
		{
			get
			{
				return this._LastIPAddress;
			}
			set
			{
				if ((this._LastIPAddress != value))
				{
					this.OnLastIPAddressChanging(value);
					this.SendPropertyChanging();
					this._LastIPAddress = value;
					this.SendPropertyChanged("LastIPAddress");
					this.OnLastIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User2_AP_StaffBroker_Staff", Storage="_AP_StaffBroker_Staffs", ThisKey="UserID", OtherKey="UserId2", IsUnique=true, IsForeignKey=false)]
		public AP_StaffBroker_Staff AP_StaffBroker_Staffs
		{
			get
			{
				return this._AP_StaffBroker_Staffs.Entity;
			}
			set
			{
				AP_StaffBroker_Staff previousValue = this._AP_StaffBroker_Staffs.Entity;
				if (((previousValue != value) 
							|| (this._AP_StaffBroker_Staffs.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AP_StaffBroker_Staffs.Entity = null;
						previousValue.User2 = null;
					}
					this._AP_StaffBroker_Staffs.Entity = value;
					if ((value != null))
					{
						value.User2 = this;
					}
					this.SendPropertyChanged("AP_StaffBroker_Staffs");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User2_UserProfile2", Storage="_UserProfile2s", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<UserProfile2> UserProfile2s
		{
			get
			{
				return this._UserProfile2s;
			}
			set
			{
				this._UserProfile2s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User2_AP_StaffBroker_LeaderMeta2", Storage="_AP_StaffBroker_LeaderMeta2s", ThisKey="UserID", OtherKey="UserId")]
		public EntitySet<AP_StaffBroker_LeaderMeta2> AP_StaffBroker_LeaderMeta2s
		{
			get
			{
				return this._AP_StaffBroker_LeaderMeta2s;
			}
			set
			{
				this._AP_StaffBroker_LeaderMeta2s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserProfile2s(UserProfile2 entity)
		{
			this.SendPropertyChanging();
			entity.User2 = this;
		}
		
		private void detach_UserProfile2s(UserProfile2 entity)
		{
			this.SendPropertyChanging();
			entity.User2 = null;
		}
		
		private void attach_AP_StaffBroker_LeaderMeta2s(AP_StaffBroker_LeaderMeta2 entity)
		{
			this.SendPropertyChanging();
			entity.User2 = this;
		}
		
		private void detach_AP_StaffBroker_LeaderMeta2s(AP_StaffBroker_LeaderMeta2 entity)
		{
			this.SendPropertyChanging();
			entity.User2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AP_StaffBroker_StaffProfile")]
	public partial class AP_StaffBroker_StaffProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _StaffProfileId;
		
		private string _PropertyValue;
		
		private int _StaffPropertyDefinitionId;
		
		private System.Nullable<int> _StaffId;
		
		private EntityRef<AP_StaffBroker_Staff> _AP_StaffBroker_Staff;
		
		private EntityRef<AP_StaffBroker_StaffPropertyDefinition> _AP_StaffBroker_StaffPropertyDefinition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaffProfileIdChanging(long value);
    partial void OnStaffProfileIdChanged();
    partial void OnPropertyValueChanging(string value);
    partial void OnPropertyValueChanged();
    partial void OnStaffPropertyDefinitionIdChanging(int value);
    partial void OnStaffPropertyDefinitionIdChanged();
    partial void OnStaffIdChanging(System.Nullable<int> value);
    partial void OnStaffIdChanged();
    #endregion
		
		public AP_StaffBroker_StaffProfile()
		{
			this._AP_StaffBroker_Staff = default(EntityRef<AP_StaffBroker_Staff>);
			this._AP_StaffBroker_StaffPropertyDefinition = default(EntityRef<AP_StaffBroker_StaffPropertyDefinition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffProfileId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long StaffProfileId
		{
			get
			{
				return this._StaffProfileId;
			}
			set
			{
				if ((this._StaffProfileId != value))
				{
					this.OnStaffProfileIdChanging(value);
					this.SendPropertyChanging();
					this._StaffProfileId = value;
					this.SendPropertyChanged("StaffProfileId");
					this.OnStaffProfileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValue", DbType="VarChar(MAX)")]
		public string PropertyValue
		{
			get
			{
				return this._PropertyValue;
			}
			set
			{
				if ((this._PropertyValue != value))
				{
					this.OnPropertyValueChanging(value);
					this.SendPropertyChanging();
					this._PropertyValue = value;
					this.SendPropertyChanged("PropertyValue");
					this.OnPropertyValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffPropertyDefinitionId", DbType="Int NOT NULL")]
		public int StaffPropertyDefinitionId
		{
			get
			{
				return this._StaffPropertyDefinitionId;
			}
			set
			{
				if ((this._StaffPropertyDefinitionId != value))
				{
					if (this._AP_StaffBroker_StaffPropertyDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffPropertyDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._StaffPropertyDefinitionId = value;
					this.SendPropertyChanged("StaffPropertyDefinitionId");
					this.OnStaffPropertyDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffId", DbType="Int")]
		public System.Nullable<int> StaffId
		{
			get
			{
				return this._StaffId;
			}
			set
			{
				if ((this._StaffId != value))
				{
					if (this._AP_StaffBroker_Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIdChanging(value);
					this.SendPropertyChanging();
					this._StaffId = value;
					this.SendPropertyChanged("StaffId");
					this.OnStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AP_StaffBroker_Staff_AP_StaffBroker_StaffProfile", Storage="_AP_StaffBroker_Staff", ThisKey="StaffId", OtherKey="StaffId", IsForeignKey=true)]
		public AP_StaffBroker_Staff AP_StaffBroker_Staff
		{
			get
			{
				return this._AP_StaffBroker_Staff.Entity;
			}
			set
			{
				AP_StaffBroker_Staff previousValue = this._AP_StaffBroker_Staff.Entity;
				if (((previousValue != value) 
							|| (this._AP_StaffBroker_Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AP_StaffBroker_Staff.Entity = null;
						previousValue.AP_StaffBroker_StaffProfiles.Remove(this);
					}
					this._AP_StaffBroker_Staff.Entity = value;
					if ((value != null))
					{
						value.AP_StaffBroker_StaffProfiles.Add(this);
						this._StaffId = value.StaffId;
					}
					else
					{
						this._StaffId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AP_StaffBroker_Staff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AP_StaffBroker_StaffPropertyDefinition_AP_StaffBroker_StaffProfile", Storage="_AP_StaffBroker_StaffPropertyDefinition", ThisKey="StaffPropertyDefinitionId", OtherKey="StaffPropertyDefinitionId", IsForeignKey=true)]
		public AP_StaffBroker_StaffPropertyDefinition AP_StaffBroker_StaffPropertyDefinition
		{
			get
			{
				return this._AP_StaffBroker_StaffPropertyDefinition.Entity;
			}
			set
			{
				AP_StaffBroker_StaffPropertyDefinition previousValue = this._AP_StaffBroker_StaffPropertyDefinition.Entity;
				if (((previousValue != value) 
							|| (this._AP_StaffBroker_StaffPropertyDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AP_StaffBroker_StaffPropertyDefinition.Entity = null;
						previousValue.AP_StaffBroker_StaffProfiles.Remove(this);
					}
					this._AP_StaffBroker_StaffPropertyDefinition.Entity = value;
					if ((value != null))
					{
						value.AP_StaffBroker_StaffProfiles.Add(this);
						this._StaffPropertyDefinitionId = value.StaffPropertyDefinitionId;
					}
					else
					{
						this._StaffPropertyDefinitionId = default(int);
					}
					this.SendPropertyChanged("AP_StaffBroker_StaffPropertyDefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AP_StaffBroker_Children")]
	public partial class AP_StaffBroker_Children : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ChildId;
		
		private string _FirstName;
		
		private System.DateTime _Birthday;
		
		private int _StaffId;
		
		private string _Gender;
		
		private EntityRef<AP_StaffBroker_Staff> _AP_StaffBroker_Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChildIdChanging(long value);
    partial void OnChildIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnBirthdayChanging(System.DateTime value);
    partial void OnBirthdayChanged();
    partial void OnStaffIdChanging(int value);
    partial void OnStaffIdChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    #endregion
		
		public AP_StaffBroker_Children()
		{
			this._AP_StaffBroker_Staff = default(EntityRef<AP_StaffBroker_Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ChildId
		{
			get
			{
				return this._ChildId;
			}
			set
			{
				if ((this._ChildId != value))
				{
					this.OnChildIdChanging(value);
					this.SendPropertyChanging();
					this._ChildId = value;
					this.SendPropertyChanged("ChildId");
					this.OnChildIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="Date NOT NULL")]
		public System.DateTime Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffId", DbType="Int NOT NULL")]
		public int StaffId
		{
			get
			{
				return this._StaffId;
			}
			set
			{
				if ((this._StaffId != value))
				{
					if (this._AP_StaffBroker_Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIdChanging(value);
					this.SendPropertyChanging();
					this._StaffId = value;
					this.SendPropertyChanged("StaffId");
					this.OnStaffIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="nvarchar(10)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AP_StaffBroker_Staff_AP_StaffBroker_Children", Storage="_AP_StaffBroker_Staff", ThisKey="StaffId", OtherKey="StaffId", IsForeignKey=true)]
		public AP_StaffBroker_Staff AP_StaffBroker_Staff
		{
			get
			{
				return this._AP_StaffBroker_Staff.Entity;
			}
			set
			{
				AP_StaffBroker_Staff previousValue = this._AP_StaffBroker_Staff.Entity;
				if (((previousValue != value) 
							|| (this._AP_StaffBroker_Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AP_StaffBroker_Staff.Entity = null;
						previousValue.AP_StaffBroker_Childrens.Remove(this);
					}
					this._AP_StaffBroker_Staff.Entity = value;
					if ((value != null))
					{
						value.AP_StaffBroker_Childrens.Add(this);
						this._StaffId = value.StaffId;
					}
					else
					{
						this._StaffId = default(int);
					}
					this.SendPropertyChanged("AP_StaffBroker_Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AP_StaffBroker_LeaderMeta")]
	public partial class AP_StaffBroker_LeaderMeta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _LeaderMetaId;
		
		private int _UserId;
		
		private int _LeaderId;
		
		private System.Nullable<int> _DelegateId;
		
		private EntityRef<Leader> _Leaders;
		
		private EntityRef<User> _User;
		
		private EntityRef<Delegate> _Delegate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeaderMetaIdChanging(long value);
    partial void OnLeaderMetaIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnLeaderIdChanging(int value);
    partial void OnLeaderIdChanged();
    partial void OnDelegateIdChanging(System.Nullable<int> value);
    partial void OnDelegateIdChanged();
    #endregion
		
		public AP_StaffBroker_LeaderMeta()
		{
			this._Leaders = default(EntityRef<Leader>);
			this._User = default(EntityRef<User>);
			this._Delegate = default(EntityRef<Delegate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderMetaId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long LeaderMetaId
		{
			get
			{
				return this._LeaderMetaId;
			}
			set
			{
				if ((this._LeaderMetaId != value))
				{
					this.OnLeaderMetaIdChanging(value);
					this.SendPropertyChanging();
					this._LeaderMetaId = value;
					this.SendPropertyChanged("LeaderMetaId");
					this.OnLeaderMetaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderId", DbType="Int NOT NULL")]
		public int LeaderId
		{
			get
			{
				return this._LeaderId;
			}
			set
			{
				if ((this._LeaderId != value))
				{
					this.OnLeaderIdChanging(value);
					this.SendPropertyChanging();
					this._LeaderId = value;
					this.SendPropertyChanged("LeaderId");
					this.OnLeaderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelegateId", DbType="Int")]
		public System.Nullable<int> DelegateId
		{
			get
			{
				return this._DelegateId;
			}
			set
			{
				if ((this._DelegateId != value))
				{
					if (this._Delegate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDelegateIdChanging(value);
					this.SendPropertyChanging();
					this._DelegateId = value;
					this.SendPropertyChanged("DelegateId");
					this.OnDelegateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AP_StaffBroker_LeaderMeta_Leader", Storage="_Leaders", ThisKey="LeaderId", OtherKey="UserID", IsUnique=true, IsForeignKey=false)]
		public Leader Leaders
		{
			get
			{
				return this._Leaders.Entity;
			}
			set
			{
				Leader previousValue = this._Leaders.Entity;
				if (((previousValue != value) 
							|| (this._Leaders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Leaders.Entity = null;
						previousValue.AP_StaffBroker_LeaderMeta = null;
					}
					this._Leaders.Entity = value;
					if ((value != null))
					{
						value.AP_StaffBroker_LeaderMeta = this;
					}
					this.SendPropertyChanged("Leaders");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_AP_StaffBroker_LeaderMeta", Storage="_User", ThisKey="UserId", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.AP_StaffBroker_LeaderMetas.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.AP_StaffBroker_LeaderMetas.Add(this);
						this._UserId = value.UserID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Delegate_AP_StaffBroker_LeaderMeta", Storage="_Delegate", ThisKey="DelegateId", OtherKey="UserID", IsForeignKey=true)]
		public Delegate Delegate
		{
			get
			{
				return this._Delegate.Entity;
			}
			set
			{
				Delegate previousValue = this._Delegate.Entity;
				if (((previousValue != value) 
							|| (this._Delegate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Delegate.Entity = null;
						previousValue.AP_StaffBroker_LeaderMetas = null;
					}
					this._Delegate.Entity = value;
					if ((value != null))
					{
						value.AP_StaffBroker_LeaderMetas = this;
						this._DelegateId = value.UserID;
					}
					else
					{
						this._DelegateId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Delegate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Leader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private string _FirstName;
		
		private string _LastName;
		
		private bool _IsSuperUser;
		
		private System.Nullable<int> _AffiliateId;
		
		private string _Email;
		
		private string _DisplayName;
		
		private bool _UpdatePassword;
		
		private string _LastIPAddress;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<AP_StaffBroker_LeaderMeta> _AP_StaffBroker_LeaderMeta;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnIsSuperUserChanging(bool value);
    partial void OnIsSuperUserChanged();
    partial void OnAffiliateIdChanging(System.Nullable<int> value);
    partial void OnAffiliateIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnUpdatePasswordChanging(bool value);
    partial void OnUpdatePasswordChanged();
    partial void OnLastIPAddressChanging(string value);
    partial void OnLastIPAddressChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public Leader()
		{
			this._AP_StaffBroker_LeaderMeta = default(EntityRef<AP_StaffBroker_LeaderMeta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._AP_StaffBroker_LeaderMeta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuperUser", DbType="Bit NOT NULL")]
		public bool IsSuperUser
		{
			get
			{
				return this._IsSuperUser;
			}
			set
			{
				if ((this._IsSuperUser != value))
				{
					this.OnIsSuperUserChanging(value);
					this.SendPropertyChanging();
					this._IsSuperUser = value;
					this.SendPropertyChanged("IsSuperUser");
					this.OnIsSuperUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateId", DbType="Int")]
		public System.Nullable<int> AffiliateId
		{
			get
			{
				return this._AffiliateId;
			}
			set
			{
				if ((this._AffiliateId != value))
				{
					this.OnAffiliateIdChanging(value);
					this.SendPropertyChanging();
					this._AffiliateId = value;
					this.SendPropertyChanged("AffiliateId");
					this.OnAffiliateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatePassword", DbType="Bit NOT NULL")]
		public bool UpdatePassword
		{
			get
			{
				return this._UpdatePassword;
			}
			set
			{
				if ((this._UpdatePassword != value))
				{
					this.OnUpdatePasswordChanging(value);
					this.SendPropertyChanging();
					this._UpdatePassword = value;
					this.SendPropertyChanged("UpdatePassword");
					this.OnUpdatePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastIPAddress", DbType="NVarChar(50)")]
		public string LastIPAddress
		{
			get
			{
				return this._LastIPAddress;
			}
			set
			{
				if ((this._LastIPAddress != value))
				{
					this.OnLastIPAddressChanging(value);
					this.SendPropertyChanging();
					this._LastIPAddress = value;
					this.SendPropertyChanged("LastIPAddress");
					this.OnLastIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AP_StaffBroker_LeaderMeta_Leader", Storage="_AP_StaffBroker_LeaderMeta", ThisKey="UserID", OtherKey="LeaderId", IsForeignKey=true)]
		public AP_StaffBroker_LeaderMeta AP_StaffBroker_LeaderMeta
		{
			get
			{
				return this._AP_StaffBroker_LeaderMeta.Entity;
			}
			set
			{
				AP_StaffBroker_LeaderMeta previousValue = this._AP_StaffBroker_LeaderMeta.Entity;
				if (((previousValue != value) 
							|| (this._AP_StaffBroker_LeaderMeta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AP_StaffBroker_LeaderMeta.Entity = null;
						previousValue.Leaders = null;
					}
					this._AP_StaffBroker_LeaderMeta.Entity = value;
					if ((value != null))
					{
						value.Leaders = this;
						this._UserID = value.LeaderId;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("AP_StaffBroker_LeaderMeta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Delegate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private string _FirstName;
		
		private string _LastName;
		
		private bool _IsSuperUser;
		
		private System.Nullable<int> _AffiliateId;
		
		private string _Email;
		
		private string _DisplayName;
		
		private bool _UpdatePassword;
		
		private string _LastIPAddress;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<AP_StaffBroker_LeaderMeta> _AP_StaffBroker_LeaderMetas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnIsSuperUserChanging(bool value);
    partial void OnIsSuperUserChanged();
    partial void OnAffiliateIdChanging(System.Nullable<int> value);
    partial void OnAffiliateIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnUpdatePasswordChanging(bool value);
    partial void OnUpdatePasswordChanged();
    partial void OnLastIPAddressChanging(string value);
    partial void OnLastIPAddressChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public Delegate()
		{
			this._AP_StaffBroker_LeaderMetas = default(EntityRef<AP_StaffBroker_LeaderMeta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuperUser", DbType="Bit NOT NULL")]
		public bool IsSuperUser
		{
			get
			{
				return this._IsSuperUser;
			}
			set
			{
				if ((this._IsSuperUser != value))
				{
					this.OnIsSuperUserChanging(value);
					this.SendPropertyChanging();
					this._IsSuperUser = value;
					this.SendPropertyChanged("IsSuperUser");
					this.OnIsSuperUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateId", DbType="Int")]
		public System.Nullable<int> AffiliateId
		{
			get
			{
				return this._AffiliateId;
			}
			set
			{
				if ((this._AffiliateId != value))
				{
					this.OnAffiliateIdChanging(value);
					this.SendPropertyChanging();
					this._AffiliateId = value;
					this.SendPropertyChanged("AffiliateId");
					this.OnAffiliateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatePassword", DbType="Bit NOT NULL")]
		public bool UpdatePassword
		{
			get
			{
				return this._UpdatePassword;
			}
			set
			{
				if ((this._UpdatePassword != value))
				{
					this.OnUpdatePasswordChanging(value);
					this.SendPropertyChanging();
					this._UpdatePassword = value;
					this.SendPropertyChanged("UpdatePassword");
					this.OnUpdatePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastIPAddress", DbType="NVarChar(50)")]
		public string LastIPAddress
		{
			get
			{
				return this._LastIPAddress;
			}
			set
			{
				if ((this._LastIPAddress != value))
				{
					this.OnLastIPAddressChanging(value);
					this.SendPropertyChanging();
					this._LastIPAddress = value;
					this.SendPropertyChanged("LastIPAddress");
					this.OnLastIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Delegate_AP_StaffBroker_LeaderMeta", Storage="_AP_StaffBroker_LeaderMetas", ThisKey="UserID", OtherKey="DelegateId", IsUnique=true, IsForeignKey=false)]
		public AP_StaffBroker_LeaderMeta AP_StaffBroker_LeaderMetas
		{
			get
			{
				return this._AP_StaffBroker_LeaderMetas.Entity;
			}
			set
			{
				AP_StaffBroker_LeaderMeta previousValue = this._AP_StaffBroker_LeaderMetas.Entity;
				if (((previousValue != value) 
							|| (this._AP_StaffBroker_LeaderMetas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AP_StaffBroker_LeaderMetas.Entity = null;
						previousValue.Delegate = null;
					}
					this._AP_StaffBroker_LeaderMetas.Entity = value;
					if ((value != null))
					{
						value.Delegate = this;
					}
					this.SendPropertyChanged("AP_StaffBroker_LeaderMetas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AP_StaffBroker_LeaderMeta")]
	public partial class AP_StaffBroker_LeaderMeta2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _LeaderMetaId;
		
		private int _UserId;
		
		private int _LeaderId;
		
		private System.Nullable<int> _DelegateId;
		
		private EntityRef<Leader2> _Leader2s;
		
		private EntityRef<Delegate2> _Delegate2;
		
		private EntityRef<User2> _User2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeaderMetaIdChanging(long value);
    partial void OnLeaderMetaIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnLeaderIdChanging(int value);
    partial void OnLeaderIdChanged();
    partial void OnDelegateIdChanging(System.Nullable<int> value);
    partial void OnDelegateIdChanged();
    #endregion
		
		public AP_StaffBroker_LeaderMeta2()
		{
			this._Leader2s = default(EntityRef<Leader2>);
			this._Delegate2 = default(EntityRef<Delegate2>);
			this._User2 = default(EntityRef<User2>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderMetaId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long LeaderMetaId
		{
			get
			{
				return this._LeaderMetaId;
			}
			set
			{
				if ((this._LeaderMetaId != value))
				{
					this.OnLeaderMetaIdChanging(value);
					this.SendPropertyChanging();
					this._LeaderMetaId = value;
					this.SendPropertyChanged("LeaderMetaId");
					this.OnLeaderMetaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaderId", DbType="Int NOT NULL")]
		public int LeaderId
		{
			get
			{
				return this._LeaderId;
			}
			set
			{
				if ((this._LeaderId != value))
				{
					this.OnLeaderIdChanging(value);
					this.SendPropertyChanging();
					this._LeaderId = value;
					this.SendPropertyChanged("LeaderId");
					this.OnLeaderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DelegateId", DbType="Int")]
		public System.Nullable<int> DelegateId
		{
			get
			{
				return this._DelegateId;
			}
			set
			{
				if ((this._DelegateId != value))
				{
					if (this._Delegate2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDelegateIdChanging(value);
					this.SendPropertyChanging();
					this._DelegateId = value;
					this.SendPropertyChanged("DelegateId");
					this.OnDelegateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AP_StaffBroker_LeaderMeta2_Leader2", Storage="_Leader2s", ThisKey="LeaderId", OtherKey="UserID", IsUnique=true, IsForeignKey=false)]
		public Leader2 Leader2s
		{
			get
			{
				return this._Leader2s.Entity;
			}
			set
			{
				Leader2 previousValue = this._Leader2s.Entity;
				if (((previousValue != value) 
							|| (this._Leader2s.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Leader2s.Entity = null;
						previousValue.AP_StaffBroker_LeaderMeta2 = null;
					}
					this._Leader2s.Entity = value;
					if ((value != null))
					{
						value.AP_StaffBroker_LeaderMeta2 = this;
					}
					this.SendPropertyChanged("Leader2s");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Delegate2_AP_StaffBroker_LeaderMeta2", Storage="_Delegate2", ThisKey="DelegateId", OtherKey="UserID", IsForeignKey=true)]
		public Delegate2 Delegate2
		{
			get
			{
				return this._Delegate2.Entity;
			}
			set
			{
				Delegate2 previousValue = this._Delegate2.Entity;
				if (((previousValue != value) 
							|| (this._Delegate2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Delegate2.Entity = null;
						previousValue.AP_StaffBroker_LeaderMeta2 = null;
					}
					this._Delegate2.Entity = value;
					if ((value != null))
					{
						value.AP_StaffBroker_LeaderMeta2 = this;
						this._DelegateId = value.UserID;
					}
					else
					{
						this._DelegateId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Delegate2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User2_AP_StaffBroker_LeaderMeta2", Storage="_User2", ThisKey="UserId", OtherKey="UserID", IsForeignKey=true)]
		public User2 User2
		{
			get
			{
				return this._User2.Entity;
			}
			set
			{
				User2 previousValue = this._User2.Entity;
				if (((previousValue != value) 
							|| (this._User2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User2.Entity = null;
						previousValue.AP_StaffBroker_LeaderMeta2s.Remove(this);
					}
					this._User2.Entity = value;
					if ((value != null))
					{
						value.AP_StaffBroker_LeaderMeta2s.Add(this);
						this._UserId = value.UserID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Delegate2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private string _FirstName;
		
		private string _LastName;
		
		private bool _IsSuperUser;
		
		private System.Nullable<int> _AffiliateId;
		
		private string _Email;
		
		private string _DisplayName;
		
		private bool _UpdatePassword;
		
		private string _LastIPAddress;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<AP_StaffBroker_LeaderMeta2> _AP_StaffBroker_LeaderMeta2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnIsSuperUserChanging(bool value);
    partial void OnIsSuperUserChanged();
    partial void OnAffiliateIdChanging(System.Nullable<int> value);
    partial void OnAffiliateIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnUpdatePasswordChanging(bool value);
    partial void OnUpdatePasswordChanged();
    partial void OnLastIPAddressChanging(string value);
    partial void OnLastIPAddressChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public Delegate2()
		{
			this._AP_StaffBroker_LeaderMeta2 = default(EntityRef<AP_StaffBroker_LeaderMeta2>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuperUser", DbType="Bit NOT NULL")]
		public bool IsSuperUser
		{
			get
			{
				return this._IsSuperUser;
			}
			set
			{
				if ((this._IsSuperUser != value))
				{
					this.OnIsSuperUserChanging(value);
					this.SendPropertyChanging();
					this._IsSuperUser = value;
					this.SendPropertyChanged("IsSuperUser");
					this.OnIsSuperUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateId", DbType="Int")]
		public System.Nullable<int> AffiliateId
		{
			get
			{
				return this._AffiliateId;
			}
			set
			{
				if ((this._AffiliateId != value))
				{
					this.OnAffiliateIdChanging(value);
					this.SendPropertyChanging();
					this._AffiliateId = value;
					this.SendPropertyChanged("AffiliateId");
					this.OnAffiliateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatePassword", DbType="Bit NOT NULL")]
		public bool UpdatePassword
		{
			get
			{
				return this._UpdatePassword;
			}
			set
			{
				if ((this._UpdatePassword != value))
				{
					this.OnUpdatePasswordChanging(value);
					this.SendPropertyChanging();
					this._UpdatePassword = value;
					this.SendPropertyChanged("UpdatePassword");
					this.OnUpdatePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastIPAddress", DbType="NVarChar(50)")]
		public string LastIPAddress
		{
			get
			{
				return this._LastIPAddress;
			}
			set
			{
				if ((this._LastIPAddress != value))
				{
					this.OnLastIPAddressChanging(value);
					this.SendPropertyChanging();
					this._LastIPAddress = value;
					this.SendPropertyChanged("LastIPAddress");
					this.OnLastIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Delegate2_AP_StaffBroker_LeaderMeta2", Storage="_AP_StaffBroker_LeaderMeta2", ThisKey="UserID", OtherKey="DelegateId", IsUnique=true, IsForeignKey=false)]
		public AP_StaffBroker_LeaderMeta2 AP_StaffBroker_LeaderMeta2
		{
			get
			{
				return this._AP_StaffBroker_LeaderMeta2.Entity;
			}
			set
			{
				AP_StaffBroker_LeaderMeta2 previousValue = this._AP_StaffBroker_LeaderMeta2.Entity;
				if (((previousValue != value) 
							|| (this._AP_StaffBroker_LeaderMeta2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AP_StaffBroker_LeaderMeta2.Entity = null;
						previousValue.Delegate2 = null;
					}
					this._AP_StaffBroker_LeaderMeta2.Entity = value;
					if ((value != null))
					{
						value.Delegate2 = this;
					}
					this.SendPropertyChanged("AP_StaffBroker_LeaderMeta2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Leader2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private string _FirstName;
		
		private string _LastName;
		
		private bool _IsSuperUser;
		
		private System.Nullable<int> _AffiliateId;
		
		private string _Email;
		
		private string _DisplayName;
		
		private bool _UpdatePassword;
		
		private string _LastIPAddress;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private EntityRef<AP_StaffBroker_LeaderMeta2> _AP_StaffBroker_LeaderMeta2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnIsSuperUserChanging(bool value);
    partial void OnIsSuperUserChanged();
    partial void OnAffiliateIdChanging(System.Nullable<int> value);
    partial void OnAffiliateIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnUpdatePasswordChanging(bool value);
    partial void OnUpdatePasswordChanged();
    partial void OnLastIPAddressChanging(string value);
    partial void OnLastIPAddressChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    #endregion
		
		public Leader2()
		{
			this._AP_StaffBroker_LeaderMeta2 = default(EntityRef<AP_StaffBroker_LeaderMeta2>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._AP_StaffBroker_LeaderMeta2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuperUser", DbType="Bit NOT NULL")]
		public bool IsSuperUser
		{
			get
			{
				return this._IsSuperUser;
			}
			set
			{
				if ((this._IsSuperUser != value))
				{
					this.OnIsSuperUserChanging(value);
					this.SendPropertyChanging();
					this._IsSuperUser = value;
					this.SendPropertyChanged("IsSuperUser");
					this.OnIsSuperUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateId", DbType="Int")]
		public System.Nullable<int> AffiliateId
		{
			get
			{
				return this._AffiliateId;
			}
			set
			{
				if ((this._AffiliateId != value))
				{
					this.OnAffiliateIdChanging(value);
					this.SendPropertyChanging();
					this._AffiliateId = value;
					this.SendPropertyChanged("AffiliateId");
					this.OnAffiliateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatePassword", DbType="Bit NOT NULL")]
		public bool UpdatePassword
		{
			get
			{
				return this._UpdatePassword;
			}
			set
			{
				if ((this._UpdatePassword != value))
				{
					this.OnUpdatePasswordChanging(value);
					this.SendPropertyChanging();
					this._UpdatePassword = value;
					this.SendPropertyChanged("UpdatePassword");
					this.OnUpdatePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastIPAddress", DbType="NVarChar(50)")]
		public string LastIPAddress
		{
			get
			{
				return this._LastIPAddress;
			}
			set
			{
				if ((this._LastIPAddress != value))
				{
					this.OnLastIPAddressChanging(value);
					this.SendPropertyChanging();
					this._LastIPAddress = value;
					this.SendPropertyChanged("LastIPAddress");
					this.OnLastIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AP_StaffBroker_LeaderMeta2_Leader2", Storage="_AP_StaffBroker_LeaderMeta2", ThisKey="UserID", OtherKey="LeaderId", IsForeignKey=true)]
		public AP_StaffBroker_LeaderMeta2 AP_StaffBroker_LeaderMeta2
		{
			get
			{
				return this._AP_StaffBroker_LeaderMeta2.Entity;
			}
			set
			{
				AP_StaffBroker_LeaderMeta2 previousValue = this._AP_StaffBroker_LeaderMeta2.Entity;
				if (((previousValue != value) 
							|| (this._AP_StaffBroker_LeaderMeta2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AP_StaffBroker_LeaderMeta2.Entity = null;
						previousValue.Leader2s = null;
					}
					this._AP_StaffBroker_LeaderMeta2.Entity = value;
					if ((value != null))
					{
						value.Leader2s = this;
						this._UserID = value.LeaderId;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("AP_StaffBroker_LeaderMeta2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AP_StaffBroker_AccountCodes")]
	public partial class AP_StaffBroker_AccountCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _AccountCodeId;
		
		private string _AccountCode;
		
		private string _AccountCodeName;
		
		private byte _AccountCodeType;
		
		private int _PortalId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountCodeIdChanging(long value);
    partial void OnAccountCodeIdChanged();
    partial void OnAccountCodeChanging(string value);
    partial void OnAccountCodeChanged();
    partial void OnAccountCodeNameChanging(string value);
    partial void OnAccountCodeNameChanged();
    partial void OnAccountCodeTypeChanging(byte value);
    partial void OnAccountCodeTypeChanged();
    partial void OnPortalIdChanging(int value);
    partial void OnPortalIdChanged();
    #endregion
		
		public AP_StaffBroker_AccountCode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCodeId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long AccountCodeId
		{
			get
			{
				return this._AccountCodeId;
			}
			set
			{
				if ((this._AccountCodeId != value))
				{
					this.OnAccountCodeIdChanging(value);
					this.SendPropertyChanging();
					this._AccountCodeId = value;
					this.SendPropertyChanged("AccountCodeId");
					this.OnAccountCodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this.OnAccountCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountCode = value;
					this.SendPropertyChanged("AccountCode");
					this.OnAccountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCodeName", DbType="NVarChar(120) NOT NULL", CanBeNull=false)]
		public string AccountCodeName
		{
			get
			{
				return this._AccountCodeName;
			}
			set
			{
				if ((this._AccountCodeName != value))
				{
					this.OnAccountCodeNameChanging(value);
					this.SendPropertyChanging();
					this._AccountCodeName = value;
					this.SendPropertyChanged("AccountCodeName");
					this.OnAccountCodeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCodeType", DbType="TinyInt NOT NULL")]
		public byte AccountCodeType
		{
			get
			{
				return this._AccountCodeType;
			}
			set
			{
				if ((this._AccountCodeType != value))
				{
					this.OnAccountCodeTypeChanging(value);
					this.SendPropertyChanging();
					this._AccountCodeType = value;
					this.SendPropertyChanged("AccountCodeType");
					this.OnAccountCodeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int NOT NULL")]
		public int PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AP_StaffBroker_CostCenters")]
	public partial class AP_StaffBroker_CostCenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _CostCentreId;
		
		private string _CostCentreCode;
		
		private string _CostCentreName;
		
		private int _PortalId;
		
		private byte _Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCostCentreIdChanging(long value);
    partial void OnCostCentreIdChanged();
    partial void OnCostCentreCodeChanging(string value);
    partial void OnCostCentreCodeChanged();
    partial void OnCostCentreNameChanging(string value);
    partial void OnCostCentreNameChanged();
    partial void OnPortalIdChanging(int value);
    partial void OnPortalIdChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    #endregion
		
		public AP_StaffBroker_CostCenter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCentreId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long CostCentreId
		{
			get
			{
				return this._CostCentreId;
			}
			set
			{
				if ((this._CostCentreId != value))
				{
					this.OnCostCentreIdChanging(value);
					this.SendPropertyChanging();
					this._CostCentreId = value;
					this.SendPropertyChanged("CostCentreId");
					this.OnCostCentreIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCentreCode", DbType="NVarChar(12) NOT NULL", CanBeNull=false)]
		public string CostCentreCode
		{
			get
			{
				return this._CostCentreCode;
			}
			set
			{
				if ((this._CostCentreCode != value))
				{
					this.OnCostCentreCodeChanging(value);
					this.SendPropertyChanging();
					this._CostCentreCode = value;
					this.SendPropertyChanged("CostCentreCode");
					this.OnCostCentreCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCentreName", DbType="NVarChar(120) NOT NULL", CanBeNull=false)]
		public string CostCentreName
		{
			get
			{
				return this._CostCentreName;
			}
			set
			{
				if ((this._CostCentreName != value))
				{
					this.OnCostCentreNameChanging(value);
					this.SendPropertyChanging();
					this._CostCentreName = value;
					this.SendPropertyChanged("CostCentreName");
					this.OnCostCentreNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int NOT NULL")]
		public int PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AP_StaffBroker_Settings")]
	public partial class AP_StaffBroker_Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SettingId;
		
		private string _SettingName;
		
		private string _SettingValue;
		
		private System.Nullable<int> _PortalId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSettingIdChanging(int value);
    partial void OnSettingIdChanged();
    partial void OnSettingNameChanging(string value);
    partial void OnSettingNameChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    partial void OnPortalIdChanging(System.Nullable<int> value);
    partial void OnPortalIdChanged();
    #endregion
		
		public AP_StaffBroker_Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SettingId
		{
			get
			{
				return this._SettingId;
			}
			set
			{
				if ((this._SettingId != value))
				{
					this.OnSettingIdChanging(value);
					this.SendPropertyChanging();
					this._SettingId = value;
					this.SendPropertyChanged("SettingId");
					this.OnSettingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingName", DbType="NVarChar(50)")]
		public string SettingName
		{
			get
			{
				return this._SettingName;
			}
			set
			{
				if ((this._SettingName != value))
				{
					this.OnSettingNameChanging(value);
					this.SendPropertyChanging();
					this._SettingName = value;
					this.SendPropertyChanged("SettingName");
					this.OnSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(MAX)")]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int")]
		public System.Nullable<int> PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserPortals")]
	public partial class UserPortal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _PortalId;
		
		private int _UserPortalId;
		
		private System.DateTime _CreatedDate;
		
		private bool _Authorised;
		
		private bool _IsDeleted;
		
		private bool _RefreshRoles;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnPortalIdChanging(int value);
    partial void OnPortalIdChanged();
    partial void OnUserPortalIdChanging(int value);
    partial void OnUserPortalIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnAuthorisedChanging(bool value);
    partial void OnAuthorisedChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnRefreshRolesChanging(bool value);
    partial void OnRefreshRolesChanged();
    #endregion
		
		public UserPortal()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPortalId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int UserPortalId
		{
			get
			{
				return this._UserPortalId;
			}
			set
			{
				if ((this._UserPortalId != value))
				{
					this.OnUserPortalIdChanging(value);
					this.SendPropertyChanging();
					this._UserPortalId = value;
					this.SendPropertyChanged("UserPortalId");
					this.OnUserPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Authorised", DbType="Bit NOT NULL")]
		public bool Authorised
		{
			get
			{
				return this._Authorised;
			}
			set
			{
				if ((this._Authorised != value))
				{
					this.OnAuthorisedChanging(value);
					this.SendPropertyChanging();
					this._Authorised = value;
					this.SendPropertyChanged("Authorised");
					this.OnAuthorisedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefreshRoles", DbType="Bit NOT NULL")]
		public bool RefreshRoles
		{
			get
			{
				return this._RefreshRoles;
			}
			set
			{
				if ((this._RefreshRoles != value))
				{
					this.OnRefreshRolesChanging(value);
					this.SendPropertyChanging();
					this._RefreshRoles = value;
					this.SendPropertyChanged("RefreshRoles");
					this.OnRefreshRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPortal", Storage="_User", ThisKey="UserId", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserPortals.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserPortals.Add(this);
						this._UserId = value.UserID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AP_Images")]
	public partial class AP_Image
	{
		
		private int _ImageId;
		
		private System.Data.Linq.Binary _Content;
		
		public AP_Image()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ImageId
		{
			get
			{
				return this._ImageId;
			}
			set
			{
				if ((this._ImageId != value))
				{
					this._ImageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this._Content = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AP_StaffBroker_StaffPropertyDefinition")]
	public partial class AP_StaffBroker_StaffPropertyDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StaffPropertyDefinitionId;
		
		private string _PropertyName;
		
		private System.Nullable<int> _PortalId;
		
		private System.Nullable<short> _ViewOrder;
		
		private System.Nullable<bool> _Display;
		
		private string _PropertyHelp;
		
		private System.Nullable<byte> _Type;
		
		private string _FixedFieldName;
		
		private EntitySet<AP_StaffBroker_StaffProfile> _AP_StaffBroker_StaffProfiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaffPropertyDefinitionIdChanging(int value);
    partial void OnStaffPropertyDefinitionIdChanged();
    partial void OnPropertyNameChanging(string value);
    partial void OnPropertyNameChanged();
    partial void OnPortalIdChanging(System.Nullable<int> value);
    partial void OnPortalIdChanged();
    partial void OnViewOrderChanging(System.Nullable<short> value);
    partial void OnViewOrderChanged();
    partial void OnDisplayChanging(System.Nullable<bool> value);
    partial void OnDisplayChanged();
    partial void OnPropertyHelpChanging(string value);
    partial void OnPropertyHelpChanged();
    partial void OnTypeChanging(System.Nullable<byte> value);
    partial void OnTypeChanged();
    partial void OnFixedFieldNameChanging(string value);
    partial void OnFixedFieldNameChanged();
    #endregion
		
		public AP_StaffBroker_StaffPropertyDefinition()
		{
			this._AP_StaffBroker_StaffProfiles = new EntitySet<AP_StaffBroker_StaffProfile>(new Action<AP_StaffBroker_StaffProfile>(this.attach_AP_StaffBroker_StaffProfiles), new Action<AP_StaffBroker_StaffProfile>(this.detach_AP_StaffBroker_StaffProfiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffPropertyDefinitionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StaffPropertyDefinitionId
		{
			get
			{
				return this._StaffPropertyDefinitionId;
			}
			set
			{
				if ((this._StaffPropertyDefinitionId != value))
				{
					this.OnStaffPropertyDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._StaffPropertyDefinitionId = value;
					this.SendPropertyChanged("StaffPropertyDefinitionId");
					this.OnStaffPropertyDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyName", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PropertyName
		{
			get
			{
				return this._PropertyName;
			}
			set
			{
				if ((this._PropertyName != value))
				{
					this.OnPropertyNameChanging(value);
					this.SendPropertyChanging();
					this._PropertyName = value;
					this.SendPropertyChanged("PropertyName");
					this.OnPropertyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int")]
		public System.Nullable<int> PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewOrder", DbType="SmallInt")]
		public System.Nullable<short> ViewOrder
		{
			get
			{
				return this._ViewOrder;
			}
			set
			{
				if ((this._ViewOrder != value))
				{
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Display", DbType="Bit")]
		public System.Nullable<bool> Display
		{
			get
			{
				return this._Display;
			}
			set
			{
				if ((this._Display != value))
				{
					this.OnDisplayChanging(value);
					this.SendPropertyChanging();
					this._Display = value;
					this.SendPropertyChanged("Display");
					this.OnDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyHelp", DbType="VarChar(MAX)")]
		public string PropertyHelp
		{
			get
			{
				return this._PropertyHelp;
			}
			set
			{
				if ((this._PropertyHelp != value))
				{
					this.OnPropertyHelpChanging(value);
					this.SendPropertyChanging();
					this._PropertyHelp = value;
					this.SendPropertyChanged("PropertyHelp");
					this.OnPropertyHelpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt")]
		public System.Nullable<byte> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedFieldName", DbType="NVarChar(100)")]
		public string FixedFieldName
		{
			get
			{
				return this._FixedFieldName;
			}
			set
			{
				if ((this._FixedFieldName != value))
				{
					this.OnFixedFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FixedFieldName = value;
					this.SendPropertyChanged("FixedFieldName");
					this.OnFixedFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AP_StaffBroker_StaffPropertyDefinition_AP_StaffBroker_StaffProfile", Storage="_AP_StaffBroker_StaffProfiles", ThisKey="StaffPropertyDefinitionId", OtherKey="StaffPropertyDefinitionId")]
		public EntitySet<AP_StaffBroker_StaffProfile> AP_StaffBroker_StaffProfiles
		{
			get
			{
				return this._AP_StaffBroker_StaffProfiles;
			}
			set
			{
				this._AP_StaffBroker_StaffProfiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AP_StaffBroker_StaffProfiles(AP_StaffBroker_StaffProfile entity)
		{
			this.SendPropertyChanging();
			entity.AP_StaffBroker_StaffPropertyDefinition = this;
		}
		
		private void detach_AP_StaffBroker_StaffProfiles(AP_StaffBroker_StaffProfile entity)
		{
			this.SendPropertyChanging();
			entity.AP_StaffBroker_StaffPropertyDefinition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AP_Menu_Link")]
	public partial class AP_Menu_Link : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _LinkId;
		
		private short _LinkType;
		
		private string _DisplayName;
		
		private string _ToolTip;
		
		private string _Target;
		
		private string _Ref;
		
		private int _PortalId;
		
		private int _TabModuleId;
		
		private short _ViewOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLinkIdChanging(long value);
    partial void OnLinkIdChanged();
    partial void OnLinkTypeChanging(short value);
    partial void OnLinkTypeChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnToolTipChanging(string value);
    partial void OnToolTipChanged();
    partial void OnTargetChanging(string value);
    partial void OnTargetChanged();
    partial void OnRefChanging(string value);
    partial void OnRefChanged();
    partial void OnPortalIdChanging(int value);
    partial void OnPortalIdChanged();
    partial void OnTabModuleIdChanging(int value);
    partial void OnTabModuleIdChanged();
    partial void OnViewOrderChanging(short value);
    partial void OnViewOrderChanged();
    #endregion
		
		public AP_Menu_Link()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long LinkId
		{
			get
			{
				return this._LinkId;
			}
			set
			{
				if ((this._LinkId != value))
				{
					this.OnLinkIdChanging(value);
					this.SendPropertyChanging();
					this._LinkId = value;
					this.SendPropertyChanged("LinkId");
					this.OnLinkIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkType", DbType="SmallInt NOT NULL")]
		public short LinkType
		{
			get
			{
				return this._LinkType;
			}
			set
			{
				if ((this._LinkType != value))
				{
					this.OnLinkTypeChanging(value);
					this.SendPropertyChanging();
					this._LinkType = value;
					this.SendPropertyChanged("LinkType");
					this.OnLinkTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToolTip", DbType="NVarChar(MAX)")]
		public string ToolTip
		{
			get
			{
				return this._ToolTip;
			}
			set
			{
				if ((this._ToolTip != value))
				{
					this.OnToolTipChanging(value);
					this.SendPropertyChanging();
					this._ToolTip = value;
					this.SendPropertyChanged("ToolTip");
					this.OnToolTipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Target", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Target
		{
			get
			{
				return this._Target;
			}
			set
			{
				if ((this._Target != value))
				{
					this.OnTargetChanging(value);
					this.SendPropertyChanging();
					this._Target = value;
					this.SendPropertyChanged("Target");
					this.OnTargetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ref", DbType="NVarChar(256)")]
		public string Ref
		{
			get
			{
				return this._Ref;
			}
			set
			{
				if ((this._Ref != value))
				{
					this.OnRefChanging(value);
					this.SendPropertyChanging();
					this._Ref = value;
					this.SendPropertyChanged("Ref");
					this.OnRefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int NOT NULL")]
		public int PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabModuleId", DbType="Int NOT NULL")]
		public int TabModuleId
		{
			get
			{
				return this._TabModuleId;
			}
			set
			{
				if ((this._TabModuleId != value))
				{
					this.OnTabModuleIdChanging(value);
					this.SendPropertyChanging();
					this._TabModuleId = value;
					this.SendPropertyChanged("TabModuleId");
					this.OnTabModuleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewOrder", DbType="SmallInt NOT NULL")]
		public short ViewOrder
		{
			get
			{
				return this._ViewOrder;
			}
			set
			{
				if ((this._ViewOrder != value))
				{
					this.OnViewOrderChanging(value);
					this.SendPropertyChanging();
					this._ViewOrder = value;
					this.SendPropertyChanged("ViewOrder");
					this.OnViewOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AP_Staff_SuggestedPayments")]
	public partial class AP_Staff_SuggestedPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _SuggestedPaymentId;
		
		private string _CostCenter;
		
		private System.Nullable<decimal> _ExpPayable;
		
		private System.Nullable<decimal> _ExpTaxable;
		
		private System.Nullable<decimal> _PrevSalary;
		
		private System.Nullable<int> _PortalId;
		
		private System.Nullable<decimal> _AccountBalance;
		
		private System.Nullable<decimal> _AdvanceBalance;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSuggestedPaymentIdChanging(long value);
    partial void OnSuggestedPaymentIdChanged();
    partial void OnCostCenterChanging(string value);
    partial void OnCostCenterChanged();
    partial void OnExpPayableChanging(System.Nullable<decimal> value);
    partial void OnExpPayableChanged();
    partial void OnExpTaxableChanging(System.Nullable<decimal> value);
    partial void OnExpTaxableChanged();
    partial void OnPrevSalaryChanging(System.Nullable<decimal> value);
    partial void OnPrevSalaryChanged();
    partial void OnPortalIdChanging(System.Nullable<int> value);
    partial void OnPortalIdChanged();
    partial void OnAccountBalanceChanging(System.Nullable<decimal> value);
    partial void OnAccountBalanceChanged();
    partial void OnAdvanceBalanceChanging(System.Nullable<decimal> value);
    partial void OnAdvanceBalanceChanged();
    #endregion
		
		public AP_Staff_SuggestedPayment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuggestedPaymentId", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long SuggestedPaymentId
		{
			get
			{
				return this._SuggestedPaymentId;
			}
			set
			{
				if ((this._SuggestedPaymentId != value))
				{
					this.OnSuggestedPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._SuggestedPaymentId = value;
					this.SendPropertyChanged("SuggestedPaymentId");
					this.OnSuggestedPaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCenter", DbType="VarChar(20)")]
		public string CostCenter
		{
			get
			{
				return this._CostCenter;
			}
			set
			{
				if ((this._CostCenter != value))
				{
					this.OnCostCenterChanging(value);
					this.SendPropertyChanging();
					this._CostCenter = value;
					this.SendPropertyChanged("CostCenter");
					this.OnCostCenterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpPayable", DbType="Money")]
		public System.Nullable<decimal> ExpPayable
		{
			get
			{
				return this._ExpPayable;
			}
			set
			{
				if ((this._ExpPayable != value))
				{
					this.OnExpPayableChanging(value);
					this.SendPropertyChanging();
					this._ExpPayable = value;
					this.SendPropertyChanged("ExpPayable");
					this.OnExpPayableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpTaxable", DbType="Money")]
		public System.Nullable<decimal> ExpTaxable
		{
			get
			{
				return this._ExpTaxable;
			}
			set
			{
				if ((this._ExpTaxable != value))
				{
					this.OnExpTaxableChanging(value);
					this.SendPropertyChanging();
					this._ExpTaxable = value;
					this.SendPropertyChanged("ExpTaxable");
					this.OnExpTaxableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrevSalary", DbType="Money")]
		public System.Nullable<decimal> PrevSalary
		{
			get
			{
				return this._PrevSalary;
			}
			set
			{
				if ((this._PrevSalary != value))
				{
					this.OnPrevSalaryChanging(value);
					this.SendPropertyChanging();
					this._PrevSalary = value;
					this.SendPropertyChanged("PrevSalary");
					this.OnPrevSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int")]
		public System.Nullable<int> PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountBalance", DbType="Money")]
		public System.Nullable<decimal> AccountBalance
		{
			get
			{
				return this._AccountBalance;
			}
			set
			{
				if ((this._AccountBalance != value))
				{
					this.OnAccountBalanceChanging(value);
					this.SendPropertyChanging();
					this._AccountBalance = value;
					this.SendPropertyChanged("AccountBalance");
					this.OnAccountBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdvanceBalance", DbType="Money")]
		public System.Nullable<decimal> AdvanceBalance
		{
			get
			{
				return this._AdvanceBalance;
			}
			set
			{
				if ((this._AdvanceBalance != value))
				{
					this.OnAdvanceBalanceChanging(value);
					this.SendPropertyChanging();
					this._AdvanceBalance = value;
					this.SendPropertyChanged("AdvanceBalance");
					this.OnAdvanceBalanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AP_StaffBroker_Departments")]
	public partial class AP_StaffBroker_Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CostCenterId;
		
		private string _Name;
		
		private string _CostCentre;
		
		private System.Nullable<int> _CostCentreManager;
		
		private System.Nullable<int> _CostCentreDelegate;
		
		private bool _CanRmb;
		
		private bool _CanCharge;
		
		private bool _CanGiveTo;
		
		private string _GivingText;
		
		private string _GivingShortcut;
		
		private System.Nullable<int> _PortalId;
		
		private string _PayType;
		
		private bool _IsProject;
		
		private System.Nullable<int> _PhotoId;
		
		private string _Spare1;
		
		private string _Spare2;
		
		private string _Spare3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCostCenterIdChanging(int value);
    partial void OnCostCenterIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCostCentreChanging(string value);
    partial void OnCostCentreChanged();
    partial void OnCostCentreManagerChanging(System.Nullable<int> value);
    partial void OnCostCentreManagerChanged();
    partial void OnCostCentreDelegateChanging(System.Nullable<int> value);
    partial void OnCostCentreDelegateChanged();
    partial void OnCanRmbChanging(bool value);
    partial void OnCanRmbChanged();
    partial void OnCanChargeChanging(bool value);
    partial void OnCanChargeChanged();
    partial void OnCanGiveToChanging(bool value);
    partial void OnCanGiveToChanged();
    partial void OnGivingTextChanging(string value);
    partial void OnGivingTextChanged();
    partial void OnGivingShortcutChanging(string value);
    partial void OnGivingShortcutChanged();
    partial void OnPortalIdChanging(System.Nullable<int> value);
    partial void OnPortalIdChanged();
    partial void OnPayTypeChanging(string value);
    partial void OnPayTypeChanged();
    partial void OnIsProjectChanging(bool value);
    partial void OnIsProjectChanged();
    partial void OnPhotoIdChanging(System.Nullable<int> value);
    partial void OnPhotoIdChanged();
    partial void OnSpare1Changing(string value);
    partial void OnSpare1Changed();
    partial void OnSpare2Changing(string value);
    partial void OnSpare2Changed();
    partial void OnSpare3Changing(string value);
    partial void OnSpare3Changed();
    #endregion
		
		public AP_StaffBroker_Department()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCenterId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CostCenterId
		{
			get
			{
				return this._CostCenterId;
			}
			set
			{
				if ((this._CostCenterId != value))
				{
					this.OnCostCenterIdChanging(value);
					this.SendPropertyChanging();
					this._CostCenterId = value;
					this.SendPropertyChanged("CostCenterId");
					this.OnCostCenterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCentre", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string CostCentre
		{
			get
			{
				return this._CostCentre;
			}
			set
			{
				if ((this._CostCentre != value))
				{
					this.OnCostCentreChanging(value);
					this.SendPropertyChanging();
					this._CostCentre = value;
					this.SendPropertyChanged("CostCentre");
					this.OnCostCentreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCentreManager", DbType="Int")]
		public System.Nullable<int> CostCentreManager
		{
			get
			{
				return this._CostCentreManager;
			}
			set
			{
				if ((this._CostCentreManager != value))
				{
					this.OnCostCentreManagerChanging(value);
					this.SendPropertyChanging();
					this._CostCentreManager = value;
					this.SendPropertyChanged("CostCentreManager");
					this.OnCostCentreManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostCentreDelegate", DbType="Int")]
		public System.Nullable<int> CostCentreDelegate
		{
			get
			{
				return this._CostCentreDelegate;
			}
			set
			{
				if ((this._CostCentreDelegate != value))
				{
					this.OnCostCentreDelegateChanging(value);
					this.SendPropertyChanging();
					this._CostCentreDelegate = value;
					this.SendPropertyChanged("CostCentreDelegate");
					this.OnCostCentreDelegateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanRmb", DbType="Bit NOT NULL")]
		public bool CanRmb
		{
			get
			{
				return this._CanRmb;
			}
			set
			{
				if ((this._CanRmb != value))
				{
					this.OnCanRmbChanging(value);
					this.SendPropertyChanging();
					this._CanRmb = value;
					this.SendPropertyChanged("CanRmb");
					this.OnCanRmbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanCharge", DbType="Bit NOT NULL")]
		public bool CanCharge
		{
			get
			{
				return this._CanCharge;
			}
			set
			{
				if ((this._CanCharge != value))
				{
					this.OnCanChargeChanging(value);
					this.SendPropertyChanging();
					this._CanCharge = value;
					this.SendPropertyChanged("CanCharge");
					this.OnCanChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanGiveTo", DbType="Bit NOT NULL")]
		public bool CanGiveTo
		{
			get
			{
				return this._CanGiveTo;
			}
			set
			{
				if ((this._CanGiveTo != value))
				{
					this.OnCanGiveToChanging(value);
					this.SendPropertyChanging();
					this._CanGiveTo = value;
					this.SendPropertyChanged("CanGiveTo");
					this.OnCanGiveToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivingText", DbType="NVarChar(MAX)")]
		public string GivingText
		{
			get
			{
				return this._GivingText;
			}
			set
			{
				if ((this._GivingText != value))
				{
					this.OnGivingTextChanging(value);
					this.SendPropertyChanging();
					this._GivingText = value;
					this.SendPropertyChanged("GivingText");
					this.OnGivingTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GivingShortcut", DbType="NVarChar(50)")]
		public string GivingShortcut
		{
			get
			{
				return this._GivingShortcut;
			}
			set
			{
				if ((this._GivingShortcut != value))
				{
					this.OnGivingShortcutChanging(value);
					this.SendPropertyChanging();
					this._GivingShortcut = value;
					this.SendPropertyChanged("GivingShortcut");
					this.OnGivingShortcutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int")]
		public System.Nullable<int> PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayType", DbType="NVarChar(MAX)")]
		public string PayType
		{
			get
			{
				return this._PayType;
			}
			set
			{
				if ((this._PayType != value))
				{
					this.OnPayTypeChanging(value);
					this.SendPropertyChanging();
					this._PayType = value;
					this.SendPropertyChanged("PayType");
					this.OnPayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProject", DbType="Bit NOT NULL")]
		public bool IsProject
		{
			get
			{
				return this._IsProject;
			}
			set
			{
				if ((this._IsProject != value))
				{
					this.OnIsProjectChanging(value);
					this.SendPropertyChanging();
					this._IsProject = value;
					this.SendPropertyChanged("IsProject");
					this.OnIsProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoId", DbType="Int")]
		public System.Nullable<int> PhotoId
		{
			get
			{
				return this._PhotoId;
			}
			set
			{
				if ((this._PhotoId != value))
				{
					this.OnPhotoIdChanging(value);
					this.SendPropertyChanging();
					this._PhotoId = value;
					this.SendPropertyChanged("PhotoId");
					this.OnPhotoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spare1", DbType="NVarChar(50)")]
		public string Spare1
		{
			get
			{
				return this._Spare1;
			}
			set
			{
				if ((this._Spare1 != value))
				{
					this.OnSpare1Changing(value);
					this.SendPropertyChanging();
					this._Spare1 = value;
					this.SendPropertyChanged("Spare1");
					this.OnSpare1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spare2", DbType="NVarChar(MAX)")]
		public string Spare2
		{
			get
			{
				return this._Spare2;
			}
			set
			{
				if ((this._Spare2 != value))
				{
					this.OnSpare2Changing(value);
					this.SendPropertyChanging();
					this._Spare2 = value;
					this.SendPropertyChanged("Spare2");
					this.OnSpare2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spare3", DbType="NVarChar(MAX)")]
		public string Spare3
		{
			get
			{
				return this._Spare3;
			}
			set
			{
				if ((this._Spare3 != value))
				{
					this.OnSpare3Changing(value);
					this.SendPropertyChanging();
					this._Spare3 = value;
					this.SendPropertyChanged("Spare3");
					this.OnSpare3Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetSearchResultsResult
	{
		
		private int _SearchItemID;
		
		private System.Nullable<int> _PortalID;
		
		private int _TabID;
		
		private int _ModuleID;
		
		private string _Title;
		
		private string _Description;
		
		private System.Nullable<int> _Author;
		
		private System.DateTime _PubDate;
		
		private string _SearchKey;
		
		private string _Guid;
		
		private System.Nullable<int> _HitCount;
		
		private System.Nullable<int> _ImageFileId;
		
		private string _AuthorName;
		
		public GetSearchResultsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchItemID", DbType="Int NOT NULL")]
		public int SearchItemID
		{
			get
			{
				return this._SearchItemID;
			}
			set
			{
				if ((this._SearchItemID != value))
				{
					this._SearchItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this._PortalID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", DbType="Int NOT NULL")]
		public int TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					this._TabID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL")]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					this._ModuleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="Int")]
		public System.Nullable<int> Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this._Author = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PubDate", DbType="DateTime NOT NULL")]
		public System.DateTime PubDate
		{
			get
			{
				return this._PubDate;
			}
			set
			{
				if ((this._PubDate != value))
				{
					this._PubDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchKey", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SearchKey
		{
			get
			{
				return this._SearchKey;
			}
			set
			{
				if ((this._SearchKey != value))
				{
					this._SearchKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="VarChar(200)")]
		public string Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this._Guid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HitCount", DbType="Int")]
		public System.Nullable<int> HitCount
		{
			get
			{
				return this._HitCount;
			}
			set
			{
				if ((this._HitCount != value))
				{
					this._HitCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFileId", DbType="Int")]
		public System.Nullable<int> ImageFileId
		{
			get
			{
				return this._ImageFileId;
			}
			set
			{
				if ((this._ImageFileId != value))
				{
					this._ImageFileId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorName", DbType="NVarChar(128)")]
		public string AuthorName
		{
			get
			{
				return this._AuthorName;
			}
			set
			{
				if ((this._AuthorName != value))
				{
					this._AuthorName = value;
				}
			}
		}
	}
	
	public partial class GetSearchResultsByWordResult
	{
		
		private int _SearchItemID;
		
		private string _Word;
		
		private int _Occurrences;
		
		private System.Nullable<int> _Relevance;
		
		private int _ModuleID;
		
		private System.Nullable<int> _TabID;
		
		private string _Title;
		
		private string _Description;
		
		private System.Nullable<int> _Author;
		
		private System.DateTime _PubDate;
		
		private string _SearchKey;
		
		private string _Guid;
		
		private System.Nullable<int> _ImageFileId;
		
		private string _AuthorName;
		
		private System.Nullable<int> _PortalId;
		
		public GetSearchResultsByWordResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchItemID", DbType="Int NOT NULL")]
		public int SearchItemID
		{
			get
			{
				return this._SearchItemID;
			}
			set
			{
				if ((this._SearchItemID != value))
				{
					this._SearchItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Word", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Word
		{
			get
			{
				return this._Word;
			}
			set
			{
				if ((this._Word != value))
				{
					this._Word = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Occurrences", DbType="Int NOT NULL")]
		public int Occurrences
		{
			get
			{
				return this._Occurrences;
			}
			set
			{
				if ((this._Occurrences != value))
				{
					this._Occurrences = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Relevance]", Storage="_Relevance", DbType="Int")]
		public System.Nullable<int> Relevance
		{
			get
			{
				return this._Relevance;
			}
			set
			{
				if ((this._Relevance != value))
				{
					this._Relevance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int NOT NULL")]
		public int ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					this._ModuleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabID", DbType="Int")]
		public System.Nullable<int> TabID
		{
			get
			{
				return this._TabID;
			}
			set
			{
				if ((this._TabID != value))
				{
					this._TabID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="Int")]
		public System.Nullable<int> Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this._Author = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PubDate", DbType="DateTime NOT NULL")]
		public System.DateTime PubDate
		{
			get
			{
				return this._PubDate;
			}
			set
			{
				if ((this._PubDate != value))
				{
					this._PubDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchKey", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string SearchKey
		{
			get
			{
				return this._SearchKey;
			}
			set
			{
				if ((this._SearchKey != value))
				{
					this._SearchKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid", DbType="VarChar(200)")]
		public string Guid
		{
			get
			{
				return this._Guid;
			}
			set
			{
				if ((this._Guid != value))
				{
					this._Guid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageFileId", DbType="Int")]
		public System.Nullable<int> ImageFileId
		{
			get
			{
				return this._ImageFileId;
			}
			set
			{
				if ((this._ImageFileId != value))
				{
					this._ImageFileId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorName", DbType="NVarChar(101)")]
		public string AuthorName
		{
			get
			{
				return this._AuthorName;
			}
			set
			{
				if ((this._AuthorName != value))
				{
					this._AuthorName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int")]
		public System.Nullable<int> PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					this._PortalId = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
